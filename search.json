[{"path":"https://lzumeta.github.io/injurytools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 injurytools Lore Zumeta Olaskoaga Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"rates","dir":"Articles","previous_headings":"Measures of occurrence","what":"Rates","title":"Estimate Measures of Injury Epidemiology","text":"Hodgson Phillips (2000) state, “Sports injuries occur athletes exposed given sport occur specific conditions, known time place.” Thus, attempting describe distribution injuries necessary relate population risk specified time period. fundamental unit measurement rate. rate measure consists denominator numerator period time. Denominator data can number different things (e.g. number minutes trained/played, number matches played). , reflects speed new “injury-related” events occur.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-incidence-rate","dir":"Articles","previous_headings":"Measures of occurrence > Rates","what":"Injury incidence rate","title":"Estimate Measures of Injury Epidemiology","text":"Injury incidence rate number new injury cases (\\(\\)) per unit player-exposure time, .e. \\[ I_{r} = \\frac{}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-burden-rate","dir":"Articles","previous_headings":"Measures of occurrence > Rates","what":"Injury burden rate","title":"Estimate Measures of Injury Epidemiology","text":"Injury burden rate number days lost (\\(n_d\\)) per unit player-exposure time, .e. \\[I_{br} = \\frac{n_d}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"prevalence","dir":"Articles","previous_headings":"Measures of occurrence","what":"Prevalence","title":"Estimate Measures of Injury Epidemiology","text":"Prevalence, period prevalence, proportion refers number players reported injury interest (\\(X\\)) divided total player-population risk time specified period time (\\(\\Delta T\\) time window). includes players already condition start study period well acquired period. \\[P = \\frac{X}{N}\\] \\(X\\) number injury cases \\(N\\) total number players study point window time \\(\\Delta T\\).","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"in-practice","dir":"Articles","previous_headings":"","what":"In practice","title":"Estimate Measures of Injury Epidemiology","text":", prepare-data vignette, use data sets available injurytools package: data Liverpool Football Club male’s first team players two consecutive seasons, 2017-2018 2018-2019, scrapped https://www.transfermarkt.com/ website1.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injsummary","dir":"Articles","previous_headings":"In practice","what":"- injsummary()","title":"Estimate Measures of Injury Epidemiology","text":"Now, preprocessed data passed injsummary() calculate injury summary statistics: notice throws warning messages (unless quiet = TRUE). thrown make clear exposure time unit is2. injsummary() returns output list two elements, .e. output stored () injds object consists , two data frames (two tables), can accessed typing injds[[1]] (injds[[\"playerwise\"]]) injds[[2]] (injds[[\"overal\"]]). present results tidier comprehensible way (instead R code styled output) following can done: used RMarkdown, particular knitr::kable() function, report tables way. Note provide numbers easy interpret avoid small decimals, injury incidence injury burden reported ‘per 100 player-match exposure’. example exposure time minutes played matches, multiply rates 90*100 (.e. 90 minutes lasts football match). reported incidence rate estimated \\(\\hat{}_r = \\frac{82}{74690}\\times90\\times100\\). Players highest injury incidence rate (type injuries) Adam Lallana Daniel Sturridge 77.1 29.1 injuries per 100 player-matches respectively. teams overall injury incidence 9.9 injuries per 100 player-matches injury burden 246.9 days lost per 100 player-matches. summaries can done type injury: results team regarding injury incidence injury burden type injury:","code":"df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") injds <- injsummary(injd) #> Warning in injsummary_unit(unit, injds, quiet):  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #> Warning in injsummary_unit(unit, injds_overall, quiet):  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) str(injds, 1) #> List of 2 #>  $ playerwise: tibble [28 × 9] (S3: tbl_df/tbl/data.frame) #>  $ overall   : tibble [1 × 14] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"class\")= chr [1:2] \"injds\" \"list\" #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" #>  - attr(*, \"unit_timerisk\")= chr \"100 player-match\" #>  - attr(*, \"conf_level\")= num 0.95 # the 'playerwise' data frame injds[[1]] # format the 'playerwise' data frame for output as a table injds[[1]] %>%    arrange(desc(injincidence)) %>% # sort by decreasing order of injincidence   head(10) %>%   kable(digits = 2, col.names = c(\"Player\", \"N injuries\", \"N days lost\",                                    \"Mean days lost\", \"Median days lost\", \"IQR days lost\",                                   \"Total exposure\", \"Incidence\", \"Burden\")) # the 'overall' data frame injds[[2]] # format the table of total incidence and burden (main columns) injds[[2]] %>%    select(1:8) %>%    data.frame(row.names = \"TOTAL\") %>%    kable(digits = 2,         col.names = c(\"N injuries\", \"N days lost\", \"Mean days lost\",                       \"Median days lost\", \"IQR days lost\",                       \"Total exposure\", \"Incidence\", \"Burden\"),         row.names = TRUE) %>%    kable_styling(full_width = FALSE) # format the table of total incidence and burden (point + ci estimates) injds_tot_cis <- injds[[2]] %>%    select(7:last_col()) %>%    data.frame(row.names = \"TOTAL\") injds_tot_cis$ci_injincidence <- paste0(\"[\", round(injds_tot_cis$injincidence_lower, 1),                                         \", \",round(injds_tot_cis$injincidence_upper, 1), \"]\") injds_tot_cis$ci_injburden    <- paste0(\"[\", round(injds_tot_cis$injburden_lower, 1),                                         \", \",round(injds_tot_cis$injburden_upper, 1), \"]\")  conf_level <- attr(injds, \"conf_level\")*100  injds_tot_cis %>%    select(1, 9, 2, 10) %>%    kable(digits = 2,         col.names = c(\"Incidence\",  paste0(\"CI \", conf_level, \"% for \\\\(I_r\\\\)\"),                        \"Burden\",     paste0(\"CI \", conf_level, \"% for \\\\(I_{br}\\\\)\"))) injstats_pertype <- injsummary(injd, var_type_injury = \"injury_type\", quiet = T) injstats_pertype[[\"overall\"]] injstats_pertype[[\"overall\"]] %>%    select(1:5, 7:11) %>%    mutate(ninjuries2 = paste0(ninjuries, \" (\", percent_ninjuries, \")\"),          ndayslost2 = paste0(ndayslost, \" (\", percent_dayslost, \")\"),          median_dayslost2 = paste0(median_dayslost, \" (\", iqr_dayslost, \")\")) %>%    select(1, 11:13, 8:10) %>%    arrange(desc(injburden)) %>%    kable(digits = 2,         col.names = c(\"Type of injury\", \"N injuries (%)\", \"N days lost (%)\",                       \"Median days lost (IQR)\",                       \"Total exposure\", \"Incidence\", \"Burden\"),         row.names = TRUE) %>%    kable_styling(full_width = FALSE)"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injprev","dir":"Articles","previous_headings":"In practice","what":"- injprev()","title":"Estimate Measures of Injury Epidemiology","text":"calculate injury prevalence proportions injury-free players season basis: Making use knitr::kable(): Overall, injured players 18-19 season previous season. Let’s calculate monthly: Looking monthly basis, differences w.r.t. player availability Liverpool FC 1st male team, winter January/February months. injured players 18-19 season. Season 2017/2018 Season 2018/2019","code":"df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") prev_table1 <- injprev(injd, by = \"season\") prev_table1 #> # A tibble: 4 × 5 #>   season           type_injury     n n_player  prop #>   <fct>            <fct>       <int>    <int> <dbl> #> 1 season 2017/2018 Available       7       23  30.4 #> 2 season 2017/2018 Injured        16       23  69.6 #> 3 season 2018/2019 Available       2       19  10.5 #> 4 season 2018/2019 Injured        17       19  89.5 kable(prev_table1,       col.names = c(\"Season\", \"Status\", \"N\", \"Total\", \"%\")) prev_table2 <- injprev(injd, by = \"monthly\")  ## compare two seasons July and August prev_table2 %>%   group_by(season) %>%    slice(1:4) #> # A tibble: 8 × 6 #> # Groups:   season [2] #>   season           month type_injury     n n_player  prop #>   <fct>            <fct> <fct>       <int>    <int> <dbl> #> 1 season 2017/2018 Jul   Available      21       23  91.3 #> 2 season 2017/2018 Jul   Injured         2       23   8.7 #> 3 season 2017/2018 Aug   Available      18       23  78.3 #> 4 season 2017/2018 Aug   Injured         5       23  21.7 #> 5 season 2018/2019 Jul   Available      16       19  84.2 #> 6 season 2018/2019 Jul   Injured         3       19  15.8 #> 7 season 2018/2019 Aug   Available      15       19  78.9 #> 8 season 2018/2019 Aug   Injured         4       19  21.1   ## compare two seasons January and February prev_table2 %>%   group_by(season) %>%    slice(13:16) #> # A tibble: 8 × 6 #> # Groups:   season [2] #>   season           month type_injury     n n_player  prop #>   <fct>            <fct> <fct>       <int>    <int> <dbl> #> 1 season 2017/2018 Jan   Available      18       23  78.3 #> 2 season 2017/2018 Jan   Injured         5       23  21.7 #> 3 season 2017/2018 Feb   Available      21       23  91.3 #> 4 season 2017/2018 Feb   Injured         2       23   8.7 #> 5 season 2018/2019 Jan   Available       9       19  47.4 #> 6 season 2018/2019 Jan   Injured        10       19  52.6 #> 7 season 2018/2019 Feb   Available      12       19  63.2 #> 8 season 2018/2019 Feb   Injured         7       19  36.8 prev_table3 <- injprev(injd, by = \"monthly\", var_type_injury = \"injury_type\") ## season 1 prev_table3 %>%    filter(season == \"season 2017/2018\", month == \"Jan\") %>%    kable(col.names = c(\"Season\", \"Month\", \"Status\", \"N\", \"Total\", \"%\"),         caption = \"Season 2017/2018\") %>%    kable_styling(full_width = FALSE, position = \"float_left\") ## season 2 prev_table3 %>%    filter(season == \"season 2018/2019\", month == \"Jan\") %>%    kable(col.names = c(\"Season\", \"Month\", \"Status\", \"N\", \"Total\", \"%\"),         caption = \"Season 2018/2019\") %>%    kable_styling(full_width = FALSE, position = \"left\")"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"further-implementation","dir":"Articles","previous_headings":"","what":"Further implementation","title":"Estimate Measures of Injury Epidemiology","text":"near future available negative binomial (method = \"negbin\" argument), zero-inflated poisson (“zinfpois”) zero-inflated negative binomial (\"zinfnb\") methods injsummary() function. Finally, document shows perform descriptive analyses injury epidemiology, naturally, following analyses statistical inferences multivariate regression analyses may chosen infer player’s/athletes population properties (e.g. test whether differences injury incidence rates two cohorts) evaluate influence independent factors (e.g. previous injuries, workload) injuries occurred.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Estimate Measures of Injury Epidemiology","text":"NOTE 1: Bahr, Clarsen, Ekstrand (2018) state, injury incidence (likelihood) injury burden (severity) reported assessed conjunction rather isolation. regard, see risk matrix plot provided gg_injriskmatrix() function. NOTE 2: neither injury incidence (\\(I_r\\)) injury burden (\\(I_{br}\\)) ratios, interpreted probability; rates unit (person-time)\\(^{-1}\\) (e.g. per 1000h player-exposure, per player-season etc.). NOTE 3: Waldén et al. (2023) point , incidence-based measures provide standard time-window population risk (injuries per hour) preferable measures time risk varies across individuals (injuries per athletic-exposure, injuries per number matches), time-based measures better facilitate comparison across sports.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"starting-point","dir":"Articles","previous_headings":"","what":"Starting point","title":"Prepare Sports Injury Data","text":"Data can collected several ways several means. conventional manner collect store data events occur. , regard sports medicine, common store injury records one hand, side, data related training competitions/matches (exposure time among others) separate table. Following , consider user raw data two separate data sets call injury exposure data, respectively1.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"prepare-and-standardize-injury-and-exposure-data","dir":"Articles","previous_headings":"","what":"1) prepare and standardize injury and exposure data","title":"Prepare Sports Injury Data","text":"Thus early task tidy two sources data. example data sets consider raw_df_injuries raw_df_exposures data sets available injurytools package. data Liverpool Football Club male’s first team players two consecutive seasons, 2017-2018 2018-2019, scrapped https://www.transfermarkt.com/ website: standardize key column names : player (subject) identifier, dates injury recovery (), training/match/season date amount time exposure. set proper names formats means prepare_inj() prepare_exp()2. suggest collecting exposure time fine scale possible, .e. minutes desired unit total time spent training participating competitions/matches. However, units “seasons”, :","code":"head(raw_df_injuries) #> # A tibble: 6 × 11 #>   player_name player_id season from       until      days_lost games_lost injury #>   <fct>       <fct>     <fct>  <date>     <date>         <dbl>      <dbl> <chr>  #> 1 adam-lalla… 43530     17/18  2017-07-31 2017-11-25       117         21 Hamst… #> 2 adam-lalla… 43530     17/18  2018-03-31 2018-05-13        43         11 Hamst… #> 3 adam-lalla… 43530     18/19  2018-09-04 2018-10-19        45          7 Groin… #> 4 adam-lalla… 43530     18/19  2018-11-09 2018-12-04        25          4 Knock  #> 5 adam-lalla… 43530     18/19  2019-01-06 2019-01-18        12          2 Knock  #> 6 adam-lalla… 43530     18/19  2019-04-01 2019-05-31        60         10 Knock  #> # ℹ 3 more variables: injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> head(raw_df_exposures) #>               player_name player_id season year matches_played minutes_played #> 1            adam-lallana     43530  17/18 2017             12            236 #> 2            adam-lallana     43530  18/19 2018             13            464 #> 3          alberto-moreno    207917  17/18 2017             16           1264 #> 4 alex-oxlade-chamberlain    143424  17/18 2017             32           1483 #> 5                 alisson    105470  18/19 2018             38           3420 #> 6        andrew-robertson    234803  17/18 2017             22           1943 #>      liga    club_name club_id age place                   position  foot goals #> 1 premier fc-liverpool      31  29  <NA> Midfield_AttackingMidfield  both     0 #> 2 premier fc-liverpool      31  30  <NA> Midfield_AttackingMidfield  both     0 #> 3 premier fc-liverpool      31  25  <NA>          Defender_LeftBack  left     0 #> 4 premier fc-liverpool      31  24  <NA>   Midfield_CentralMidfield right     3 #> 5 premier fc-liverpool      31  26  <NA>                 Goalkeeper right     0 #> 6 premier fc-liverpool      31  23  <NA>          Defender_LeftBack  left     1 #>   assists reds #> 1       0    0 #> 2       0    0 #> 3       0    0 #> 4       7    0 #> 5       0    0 #> 6       5    0 df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            player         = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\") df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             player        = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\") ## a possible way for the case where each row in exposure data correspond to a ## season and there is no more information about time of exposure raw_df_exposures$time_expo_aux <- 1  df_exposures2 <- prepare_exp(df_exposures0 = raw_df_exposures,                              player        = \"player_name\",                              date          = \"year\",                              time_expo     = \"time_expo_aux\")  ## note 'tstart_s' and 'tstop_s' columns injd <-  prepare_all(data_exposures = df_exposures2,                      data_injuries  = df_injuries,                      exp_unit = \"seasons\") head(injd) #> # A tibble: 6 × 19 #>   player t0         tf         date_injured date_recovered tstart     tstop      #>   <fct>  <date>     <date>     <date>       <date>         <date>     <date>     #> 1 adam-… 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 2017-07-31 #> 2 adam-… 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 2018-03-31 #> 3 adam-… 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 2018-09-04 #> 4 adam-… 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 2018-11-09 #> 5 adam-… 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 2019-01-06 #> 6 adam-… 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 2019-04-01 #> # ℹ 12 more variables: tstart_s <dbl>, tstop_s <dbl>, status <dbl>, enum <dbl>, #> #   days_lost <dbl>, player_id <fct>, season <fct>, games_lost <dbl>, #> #   injury <chr>, injury_acl <fct>, injury_type <fct>, injury_severity <fct>"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"integrate-both-sources-of-data","dir":"Articles","previous_headings":"","what":"2) integrate both sources of data","title":"Prepare Sports Injury Data","text":", apply prepare_all() data sets tidied . important specify unit exposure, exp_unit argument, must one “minutes”, “hours”, “days”, “matches_num”, “matches_minutes”, “activity_days” “seasons”. outcome prepared data set, structured suitable way ready use statistical modelling approaches. data set always columns listed (standardized columns created function), well (optional) sports-related variables. player: player identifier. t0 tf: follow-period corresponding player, .e. player’s first last dates observed (value player). date_injured date_recovered: dates injury recovery corresponding observation (). Otherwise NA. tstart tstop: beginning ending dates corresponding interval observation risk injury. tstart_xand tstop_x: beginning ending times corresponding interval observation risk injury (depends unit exposure time specified). status: injury (event) indicator. enum: integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk. days_lost: number days lost due injury occurred tstop/date_injured (; otherwise 0), .e. date_recovered - date_injured days. example first row injd corresponds player Adam Lallana, risk set starts 2017-07-01 ends 2017-07-31, played 236 minutes, got firstly (enum = 1) injured (status = 1). second row corresponds risk set injured second injury (enum = 2), set starts fully recovered 2017-11-23 finishes suffered another hamstring injury3.","code":"injd <-  prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   player t0         tf         date_injured date_recovered tstart     tstop      #>   <fct>  <date>     <date>     <date>       <date>         <date>     <date>     #> 1 adam-… 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 2017-07-31 #> 2 adam-… 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 2018-03-31 #> 3 adam-… 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 2018-09-04 #> 4 adam-… 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 2018-11-09 #> 5 adam-… 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 2019-01-06 #> 6 adam-… 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 2019-04-01 #> # ℹ 12 more variables: tstart_minPlay <dbl>, tstop_minPlay <dbl>, status <dbl>, #> #   enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> # injd %>%  #   group_by(player) %>%  #   slice(1, n())"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"the-prepared-data-set-an-injd-object","dir":"Articles","previous_headings":"","what":"The prepared data set, an injd object","title":"Prepare Sports Injury Data","text":"final data set ’s R object class injd, following attributes: unit_exposure: character indicating unit exposure time used object. follow_up: data frame consisting one row per player first last dates observed (t0 tf columns). data_exposures: preprocessed exposure data frame. data_injuries: preprocessed injury data frame. extract one attributes, example unit_exposure, type:","code":"class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" #>  - attr(*, \"follow_up\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_exposures\")='data.frame':   42 obs. of  16 variables: #>  - attr(*, \"data_injuries\")= tibble [82 × 11] (S3: tbl_df/tbl/data.frame) attr(injd, \"unit_exposure\") #> [1] \"matches_minutes\""},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"a-quick-glance","dir":"Articles","previous_headings":"","what":"A quick glance","title":"Visualize Sports Injury Data","text":"Let’s count many injuries (red crosses graph) occurred severe (length thick black line). Overall Injury incidence injury burden reported 100 player-matches Overall per type injury Injury incidence injury burden reported 100 player-matches Let’s plot information shown second table risk matrix displays injury incidence injury burden.","code":"gg_injphoto(injd,              title   = \"Overview of injuries:\\nLiverpool FC 1st male team during 2017-2018 and 2018-2019 seasons\",             by_date = \"2 month\",              fix     = TRUE) +      ## plus some lines of ggplot2 code..   xlab(\"Follow-up date\") + ylab(\"Players\") + labs(caption = \"source: transfermarkt.com\") +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 22),         axis.text.x.bottom = element_text(size = 13, angle = 20, hjust = 1),         axis.text.y.left   = element_text(size = 12),         axis.title.x       = element_text(size = 20, face = \"bold\", vjust = -1),         axis.title.y       = element_text(size = 20, face = \"bold\", vjust = 1.8),         legend.text        = element_text(size = 20),         plot.caption       = element_text(face = \"italic\", size = 12, colour = \"gray10\")) # warnings set to FALSE injds        <- injsummary(injd)  injds_perinj <- injsummary(injd, var_type_injury = \"injury_type\")  # injds injds[[\"overall\"]] %>%    mutate(incidence_new = paste0(round(injincidence, 2), \" (\", round(injincidence_lower, 2), \",\", round(injincidence_upper, 2), \")\"),          burden_new    = paste0(round(injburden, 2), \" (\", round(injburden_lower, 2), \",\", round(injburden_upper, 2), \")\")) %>%    select(1:2, 6, incidence_new, burden_new) %>%    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")  injds_perinj[[\"overall\"]] %>%    mutate(incidence_new = paste0(round(injincidence, 2), \" (\", round(injincidence_lower, 2), \",\", round(injincidence_upper, 2), \")\"),          burden_new    = paste0(round(injburden, 2), \" (\", round(injburden_lower, 2), \",\", round(injburden_upper, 2), \")\")) %>%    select(1:2, 4, 9, incidence_new, burden_new) %>%    kable(col.names = c(\"Type of injury\", \"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\") # warnings set to FALSE gg_injriskmatrix(injds_perinj,                   var_type_injury = \"injury_type\",                   title = \"Risk matrix\") # warnings set to FALSE palette <- c(\"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\",              \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/ theme3 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x.bottom = element_text(size = 18),                 axis.text.y.left = element_text(size = 18),                 axis.title.x = element_text(size = 15),                 axis.title.y = element_text(size = 15),                 legend.title = element_text(size = 15),                 legend.text = element_text(size = 15))  gg_injriskmatrix(injds_perinj,                   var_type_injury = \"injury_type\",                   title = \"Risk matrix\") +   scale_fill_manual(name = \"Type of injury\",                     values = palette[c(7, 8, 2:3, 5)]) +   theme3"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"comparing-injuries-occurred-in-1718-vs--1819","dir":"Articles","previous_headings":"","what":"Comparing injuries occurred in 17/18 vs. 18/19","title":"Visualize Sports Injury Data","text":"prepare two injd objects:  Let’s compute injury summary statistics season. Season 2017/2018 Injury incidence injury burden reported 100 player-matches Season 2018/2019 Injury incidence injury burden reported 100 player-matches","code":"# warnings set to FALSE injd1 <- cut_injd(injd, datef = 2017) injd2 <- cut_injd(injd, date0 = 2018) ## Plot just for checking whether cut_injd() worked well p1 <- gg_injphoto(injd1, fix = TRUE, by_date = \"3 months\") p2 <- gg_injphoto(injd2, fix = TRUE, by_date = \"3 months\") grid.arrange(p1, p2, ncol = 2) # warnings set to FALSE injds1 <- injsummary(injd1) injds2 <- injsummary(injd2) ## **Season 2017/2018** injds1[[\"overall\"]] %>%    mutate(incidence_new = paste0(round(injincidence, 2), \" (\", round(injincidence_lower, 2), \",\", round(injincidence_upper, 2), \")\"),          burden_new    = paste0(round(injburden, 2), \" (\", round(injburden_lower, 2), \",\", round(injburden_upper, 2), \")\")) %>%    select(1:2, 6, incidence_new, burden_new) %>%    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")  ## **Season 2018/2019** injds2[[\"overall\"]] %>%    mutate(incidence_new = paste0(round(injincidence, 2), \"  (\", round(injincidence_lower, 2), \",\", round(injincidence_upper, 2), \")\"),          burden_new    = paste0(round(injburden, 2), \"  (\", round(injburden_lower, 2), \",\", round(injburden_upper, 2), \")\")) %>%    select(1:2, 6, incidence_new, burden_new) %>%    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"who-were-the-most-injured-players-and-the-most-severely-affected","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- Who were the most injured players? And the most severely affected?","title":"Visualize Sports Injury Data","text":"Player-wise statistics can extracted injds2 <- injsummary(injd1); injds2[[1]] (injds2[[\"playerwise\"]]). , plot :","code":"p11 <- gg_injbarplot(injds1) p12 <- gg_injbarplot(injds1, type = \"burden\") p21 <- gg_injbarplot(injds2) p22 <- gg_injbarplot(injds2, type = \"burden\")   # grid.arrange(p11, p21, p12, p22, nrow = 2) theme2 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 26),                 axis.text.x.bottom = element_text(size = 18),                 axis.text.y.left = element_text(size = 13),                 axis.title.x = element_text(size = 11, vjust = 1),                 axis.title.y = element_text(size = 22, face = \"bold\", vjust = 1))  p11 <- p11 +    xlab(\"Injury incidence\") +    ylab(\"Player-wise incidence (injuries per 100 player-match)\") +   ggtitle(\"2017/2018 season\") +   scale_y_continuous(limits = c(0, 80)) + ## same x axis    theme2 +   theme(plot.margin = margin(0.2, 0.2, 0.2, 0.5, \"cm\")) p12 <- p12 +   xlab(\"Injury burden\") +    ylab(\"Player-wise burden (days lost per 100 player-match)\") +   scale_y_continuous(limits = c(0, 6110)) +    theme2 +   theme(plot.margin = margin(0.2, 0.2, 0.2, 0.65, \"cm\"))  p21 <- p21 +    ylab(\"Player-wise incidence (injuries per 100 player-match)\") +   ggtitle(\"2018/2019 season\") +   scale_y_continuous(limits = c(0, 80)) +    theme2  p22 <-p22 +   ylab(\"Player-wise burden (days lost per 100 player-match)\") +   scale_y_continuous(limits = c(0, 6110)) +    theme2  grid.arrange(p11, p21, p12, p22, nrow = 2)"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"which-injuries-were-more-frequent-and-more-burdensome","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- Which injuries were more frequent? And more burdensome?","title":"Visualize Sports Injury Data","text":"","code":"# warnings set to FALSE ## Calculate summary statistics injds1_perinj <- injsummary(injd1, var_type_injury = \"injury_type\") injds2_perinj <- injsummary(injd2, var_type_injury = \"injury_type\")  ## Plot p1 <- gg_injriskmatrix(injds1_perinj, var_type_injury = \"injury_type\",                         title = \"Season 2017/2018\", add_contour = FALSE) p2 <- gg_injriskmatrix(injds2_perinj, var_type_injury = \"injury_type\",                        title = \"Season 2018/2019\", add_contour = FALSE)  # Print both plots side by side # grid.arrange(p1, p2, nrow = 1) palette <- c(\"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\",              \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/ theme3 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x.bottom = element_text(size = 18),                 axis.text.y.left = element_text(size = 18),                 axis.title.x = element_text(size = 15),                 axis.title.y = element_text(size = 15),                 legend.title = element_text(size = 15),                 legend.text = element_text(size = 15))   p1 <- p1 +   scale_x_continuous(limits = c(0, 5.5)) +   scale_y_continuous(limits = c(0, 125)) +    scale_fill_manual(name = \"Type of injury\",                     values = palette[c(1:3, 5)]) + # get rid off the green (pos: 4)   theme3 p2 <- p2 +   scale_x_continuous(limits = c(0, 5.5)) +   scale_y_continuous(limits = c(0, 125)) +    scale_fill_manual(name = \"Type of injury\",                     values = palette[c(7, 8, 2:3, 5)]) + # keep the same color coding   theme3  grid.arrange(p1, p2, ncol = 2,               top = textGrob(\"Risk matrices\", gp=gpar(fontsize = 26, font = 2))) ## for the main title"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"how-many-players-were-injury-free-in-each-month","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- How many players were injury free in each month?","title":"Visualize Sports Injury Data","text":"plot polar area diagrams2.","code":"gg_injprev_polar(injd, by = \"monthly\") theme4 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x = element_text(size = 16),                 axis.text.y = element_text(size = 18),                 legend.title = element_text(size = 20),                 legend.text = element_text(size = 20),                 strip.text = element_text(size = 20))   gg_injprev_polar(injd, by = \"monthly\",             title = \"Proportion of injured and available\\n players in each month\") +   scale_fill_manual(name = \"Type of injury\",                      values = c(\"seagreen3\", \"red3\")) +    theme4 gg_injprev_polar(injd, by = \"monthly\", var_type_injury = \"injury_type\") palette2 <- c(\"seagreen3\", \"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\",              \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/   gg_injprev_polar(injd, by = \"monthly\",              var_type_injury = \"injury_type\",             title = \"Proportion of injured and available\\n players in each month according to the type of injury\") +   scale_fill_manual(name = \"Type of injury\",                      values = palette2[c(1, 8:9, 3:4, 6)]) +    theme4"},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lore Zumeta Olaskoaga. Author, maintainer. Dae-Jin Lee. Author.","code":""},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zumeta Olaskoaga L, Lee D (2023). injurytools: Toolkit Sports Injury Data Analysis. https://github.com/lzumeta/injurytools, https://lzumeta.github.io/injurytools/.","code":"@Manual{,   title = {injurytools: A Toolkit for Sports Injury Data Analysis},   author = {Lore {Zumeta Olaskoaga} and Dae-Jin Lee},   year = {2023},   note = {https://github.com/lzumeta/injurytools, https://lzumeta.github.io/injurytools/}, }"},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Toolkit for Sports Injury Data Analysis","text":"injurytools package aimed Sports Medicine facilitates data analysis workflow providing convenience functions handy tools sports injury data. functions can classified (sports injury) data preparation, descriptive analyses data visualization routines. analyses, estimation risk injury covariate effects, can performed outside injurytools, whether event injury (outcome variable) seen count time--event data. get overview package, see Articles section. practice, package can help automate certain descriptive reports routinely made sports injury surveillance.","code":""},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Toolkit for Sports Injury Data Analysis","text":"install CRAN: install current version GitHub:","code":"install.packages(\"injurytools\") devtools::install_github(\"lzumeta/injurytools\")"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Toolkit for Sports Injury Data Analysis","text":"functions contain start inj*() stands injury. Functions data preparation start prepare_*(); data visualization gg_inj*(). outlines glance injurytools can help get comprehensive picture injury data:","code":"library(injurytools) library(ggplot2)  gg_injphoto(injd,              title   = \"Overview of injuries:\\nLiverpool FC 1st male team during 2017-2018 and 2018-2019 seasons\",             by_date = \"2 month\") +   ## plus some lines of ggplot2 code..   xlab(\"Follow-up date\") + ylab(\"Players\") +    labs(caption = \"source: transfermarkt.com\") +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 22),         axis.text.x.bottom = element_text(size = 13, angle = 20, hjust = 1),         axis.text.y.left   = element_text(size = 12),         axis.title.x = element_text(size = 20, face = \"bold\", vjust = -1),         axis.title.y = element_text(size = 20, face = \"bold\", vjust = 1.8),         legend.text  = element_text(size = 20),         plot.caption = element_text(face = \"italic\", size = 12, colour = \"gray10\"))"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"A Toolkit for Sports Injury Data Analysis","text":"problems package, find bugs suggestions improvements, please feel free open GitHub issue touch us directly via email. Also want give us feedback.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the dates in injury data and exposure data — check_injfollowup","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"Check dates injury data within dates exposure data.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"","code":"check_injfollowup(followup_df, data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"followup_df Data frame created inside prepare_all() function. data_injuries Data frame given prepare_all() function.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"injury data cut injury data dates injury occurrences within dates player's follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut the range of the follow-up — cut_injd","title":"Cut the range of the follow-up — cut_injd","text":"Given injd object, cut range time period limits observed dates, first last observed dates, date0 datef, respectively. possible specify just one date, .e. two dates range necessarily entered. See Note section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut the range of the follow-up — cut_injd","text":"","code":"cut_injd(injd, date0, datef)"},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut the range of the follow-up — cut_injd","text":"injd Prepared data, injd object. date0 Starting date class Date numeric. numeric, refer year (e.g. date = 2018). Optional. datef Ending date. class date0. Optional.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut the range of the follow-up — cut_injd","text":"injd object shorter follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cut the range of the follow-up — cut_injd","text":"aware modifying follow-period cohort, study design altered. function used, unless strong argument supporting . case, used caution.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut the range of the follow-up — cut_injd","text":"","code":"# Prepare data # \\donttest{ df_injuries  <- prepare_inj(df_injuries0   = raw_df_injuries,                            player         = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\")  df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             player        = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\")  injd <- prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") # }  # \\donttest{ cut_injd(injd, date0 = 2018) #> Warning: Injury data has been cut to the given follow-up period (in exposure data) #> # A tibble: 74 × 19 #>    player           t0         tf         date_injured date_recovered tstart     #>    <fct>            <date>     <date>     <date>       <date>         <date>     #>  1 adam-lallana     2018-07-01 2019-06-30 2018-09-04   2018-10-19     2018-07-01 #>  2 adam-lallana     2018-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 #>  3 adam-lallana     2018-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 #>  4 adam-lallana     2018-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 #>  5 adam-lallana     2018-07-01 2019-06-30 NA           NA             2019-05-31 #>  6 alisson          2018-07-01 2019-06-30 NA           NA             2018-07-01 #>  7 andrew-robertson 2018-07-01 2019-06-30 2018-12-03   2018-12-07     2018-07-01 #>  8 andrew-robertson 2018-07-01 2019-06-30 2019-02-25   2019-02-26     2018-12-07 #>  9 andrew-robertson 2018-07-01 2019-06-30 2019-05-08   2019-05-11     2019-02-26 #> 10 andrew-robertson 2018-07-01 2019-06-30 2019-06-12   2019-06-24     2019-05-11 #> # ℹ 64 more rows #> # ℹ 13 more variables: tstop <date>, tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> # }"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":null,"dir":"Reference","previous_headings":"","what":"Build follow-up data frame — data_followup","title":"Build follow-up data frame — data_followup","text":"Build follow-data frame","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build follow-up data frame — data_followup","text":"","code":"data_followup(data_exposures)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build follow-up data frame — data_followup","text":"data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build follow-up data frame — data_followup","text":"data frame row corresponds player /first date (t0) last date (tf) observed.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform injury data into a long format — data_injurieslong","title":"Transform injury data into a long format — data_injurieslong","text":"Transform injury data long format","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform injury data into a long format — data_injurieslong","text":"","code":"data_injurieslong(data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform injury data into a long format — data_injurieslong","text":"data_injuries Injury data frame standardized column names, fashion prepare_inj() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform injury data into a long format — data_injurieslong","text":"data_injuries data frame long format row corresponds player-event.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the season — date2season","title":"Get the season — date2season","text":"Get season given date.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the season — date2season","text":"","code":"date2season(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the season — date2season","text":"date vector class Date integer/numeric. integer/numeric, refer year season started (e.g. date = 2015 refer 2015/2016 season)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the season — date2season","text":"Character specifying respective competition season given date. season (output) follows pattern: \"2005/2006\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the season — date2season","text":"","code":"date <- Sys.Date() date2season(date) #> [1] \"2022/2023\""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Proper Conversion of Date objects — date_format","title":"Proper Conversion of Date objects — date_format","text":"Converts Date objects common format used every Date object throughout package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proper Conversion of Date objects — date_format","text":"","code":"date_format(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proper Conversion of Date objects — date_format","text":"date Date object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proper Conversion of Date objects — date_format","text":"\"%Y-%m-%d\" formatted Date object respect fixed locale time zone, .e. setting LC_TIME component C timezone UTC (safest choice, non-geographic Coordinated Universal Time).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proper Conversion of Date objects — date_format","text":"limit scope changes LC_TIME timezone, temporary locale modification made using withr package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain suffix for time exposure unit — exp_unit_suffix","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Obtain suffix time exposure unit","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"","code":"exp_unit_suffix(exp_unit)"},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"exp_unit Character defining unit time exposure (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Character indicating respective suffix exp_unit entered.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot player's injury incidence/burden ranking — gg_injbarplot","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"bar chart shows player-wise injury summary statistics, either injury incidence injury burden, ranked descending order.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"","code":"gg_injbarplot(injds, type = c(\"incidence\", \"burden\"), title = NULL)"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"injds injds S3 object (see injsummary()). type character value indicating whether plot injury incidence's injury burden's ranking. One \"incidence\" \"burden\", respectively. title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  injds <- injsummary(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>   p1 <- gg_injbarplot(injds, type = \"incidence\",                     title = \"Overall injury incidence per player\") p2 <- gg_injbarplot(injds, type = \"burden\",                     title = \"Overall injury burden per player\")  # install.packages(\"gridExtra\") # library(gridExtra) if (require(\"gridExtra\")) {   gridExtra::grid.arrange(p1, p2, nrow = 1) } #> Loading required package: gridExtra"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot injuries over the follow-up period — gg_injphoto","title":"Plot injuries over the follow-up period — gg_injphoto","text":"Given injd S3 object plots overview injuries sustained player/athlete cohort follow-. subject timeline depicted horizontally red cross indicates exact injury date, blue circle recovery date bold black line indicates duration injury (time-loss).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot injuries over the follow-up period — gg_injphoto","text":"","code":"gg_injphoto(injd, title = NULL, fix = FALSE, by_date = \"1 months\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot injuries over the follow-up period — gg_injphoto","text":"injd Prepared data. injd object. title Text main title. fix logical value indicating whether limit range date (x scale) maximum observed exposure date limit x scale, regardless recovery dates might longer maximum observed exposure date. by_date increment date sequence x-axis tick-marks drawn. argument passed base::seq.Date().","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot injuries over the follow-up period — gg_injphoto","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot injuries over the follow-up period — gg_injphoto","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"minutes\") # }  gg_injphoto(injd, title = \"Injury Overview\", by_date = \"1 years\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injprev_polar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","title":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","text":"Plot proportions available injured players cohort, monthly season basis, polar area diagram. information type injury may specified injured players proportions disaggregated reported according variable.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injprev_polar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","text":"","code":"gg_injprev_polar(   injd,   by = c(\"monthly\", \"season\"),   var_type_injury = NULL,   title = \"Polar area diagram\\ninjured and available (healthy) players\" )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injprev_polar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","text":"injd Prepared data, injd object. Character, one \"monthly\" \"season\", specifying periodicity according calculate proportions available injured players/athletes. var_type_injury Character specifying name column basis classify injuries calculate proportions injured players. refer (categorical) variable describes \"type injury\". Defaults NULL. title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injprev_polar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injprev_polar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot polar area diagrams representing available/injured players proportions — gg_injprev_polar","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  # \\donttest{ library(ggplot2) our_palette <- c(\"seagreen3\", \"red3\", rev(RColorBrewer::brewer.pal(5, \"Reds\"))) gg_injprev_polar(injd, by = \"monthly\", var_type_injury = \"injury_type\",             title = \"Polar area diagram\\ninjured and available (healthy) players per month\") +   scale_fill_manual(values = our_palette)  gg_injprev_polar(injd, by = \"monthly\",             title = \"Polar area diagram\\ninjured and available (healthy) players per month\") +   scale_fill_manual(values = our_palette)  # }"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot risk matrices — gg_injriskmatrix","title":"Plot risk matrices — gg_injriskmatrix","text":"Given injds S3 object, depicts risk matrix plots , graph injury incidence (frequency) plotted average days lost per injury (consequence). point estimate injury incidence together confidence interval plotted, according method used running injsummary() function. y-axis, mean time-loss per injury together \\(\\pm\\) IQR (days) plotted. number shown inside point point size , report injury burden (days lost per player-exposure time), bigger size greater burden. See References section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot risk matrices — gg_injriskmatrix","text":"","code":"gg_injriskmatrix(   injds,   var_type_injury = NULL,   add_contour = TRUE,   title = NULL,   xlab = \"Incidence (injuries per _)\",   ylab = \"Mean time-loss (days) per injury\",   errh_height = 1,   errv_width = 0.05 )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot risk matrices — gg_injriskmatrix","text":"injds injds S3 object (see injsummary()) var_type_injury Character specifying name column. (categorical) variable referring \"type injury\" (e.g. muscular/articular/others overuse/-overuse etc.) according visualize injury summary statistics (optional, defaults NULL). add_contour Logical, whether add contour lines product injury incidence mean severity (.e. 'incidence x average time-loss'), leads injury burden (defaults TRUE). title Text main title passed ggplot2::ggtitle(). xlab x-axis label passed ggplot2::xlab(). ylab y-axis label passed ggplot2::ylab(). errh_height Set height horizontal interval whiskers; height argument ggplot2::geom_errorbarh() errv_width Set width vertical interval whiskers; width argument ggplot2::geom_errorbar()","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot risk matrices — gg_injriskmatrix","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot risk matrices — gg_injriskmatrix","text":"Bahr R, Clarsen B, Derman W, et al. International Olympic Committee consensus statement: methods recording reporting epidemiological data injury illness sport 2020 (including STROBE Extension Sport Injury Illness Surveillance (STROBE-SIIS)) British Journal Sports Medicine 2020; 54:372-389. Fuller C. W. (2018). Injury Risk (Burden), Risk Matrices Risk Contours Team Sports: Review Principles, Practices Problems.Sports Medicine, 48(7), 1597–1606.  https://doi.org/10.1007/s40279-018-0913-5","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot risk matrices — gg_injriskmatrix","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  # \\donttest{ injds <- injsummary(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  injds2 <- injsummary(injd, var_type_injury = \"injury_type\") #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>   gg_injriskmatrix(injds)  gg_injriskmatrix(injds2, var_type_injury = \"injury_type\", title = \"Risk matrix\") #> Warning: An injury average time-loss is bigger than its 75% quartile #>     time-loss. Possibly, there is a concrete long-term injury in the data. #>     For plotting purposes the vertical upper limit (i.e. 75% quartile) #>     is lengthened to the average value.  # }"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of an injd object — injd","title":"Example of an injd object — injd","text":"injd object (S3), called injd, showcase object like also save computation time help files provided package. result applying prepare_all() raw_df_exposures (prepare_exp(raw_df_exposures, ...)) raw_df_injuries (prepare_inj(raw_df_injuries, ...)).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of an injd object — injd","text":"","code":"injd"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of an injd object — injd","text":"main data frame injd gathers information 28 players 108 rows 19 columns: player Player identifier (factor) t0 Follow-period corresponding player, .e. player’s first observed date, value player (Date) tf Follow-period corresponding player, .e. player’s last observed date, value player (Date) date_injured Date injury corresponding observation (). Otherwise NA (Date) date_recovered Date recovery corresponding observation (). Otherwise NA (Date) tstart Beginning date corresponding interval observation risk injury (Date) tstop Ending date corresponding interval observation risk injury (Date) tstart_minPlay Beginning time. Minutes played matches start interval observation risk injury (numeric) tstop_minPlay Ending time. Minutes played matches finish interval observation risk injury (numeric) status injury (event) indicator (numeric) enum integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk days_lost Number days lost due injury (numeric) player_id Identification number football player (factor) season Season player's entry corresponds (factor) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://www.transfermarkt.com, ; otherwise NA (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL); interval corresponds injury, NA otherwise (factor) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury (), whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); NA otherwise (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of an injd object — injd","text":"consists data frame plus 4 attributes: character specifying unit exposure (unit_exposure); 3 (auxiliary) data frames: follow_up, data_exposures data_injuries.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate injury prevalence — injprev","title":"Calculate injury prevalence — injprev","text":"Calculate prevalence injured players proportion non-injured (available) players cohort, monthly season basis. information type injury may specified injury-specific prevalences reported according variable.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate injury prevalence — injprev","text":"","code":"injprev(injd, by = c(\"monthly\", \"season\"), var_type_injury = NULL)"},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate injury prevalence — injprev","text":"injd Prepared data. injd object. Character. One \"monthly\" \"season\", specifying periodicity according calculate proportions available injured players/athletes. var_type_injury Character specifying name column basis classify injuries calculate proportions injured players. Defaults NULL.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate injury prevalence — injprev","text":"data frame containing one row combination season, month (optionally) injury type (var_type_injury specified, variable two categories: Available Injured). Plus, three columns, specifying proportion players (prop) satisfying corresponding row's combination values, .e. prevalence, many players injured moment type injury corresponding row (n), many players time cohort (n_player). See Note section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate injury prevalence — injprev","text":"var_type_injury specified (NULL), may happen player one month suffers two different types injuries. example, muscle ligament injury. case, two injuries contribute proportions muscle ligament injuries month, resulting overall proportion exceeds 100%. Besides, players Available category suffer injury moment (season-month), , healthy time period lasted","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate injury prevalence — injprev","text":"Bahr R, Clarsen B, Derman W, et al. International Olympic Committee consensus statement: methods recording reporting epidemiological data injury illness sport 2020 (including STROBE Extension Sport Injury Illness Surveillance (STROBE-SIIS)) British Journal Sports Medicine 2020; 54:372-389.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate injury prevalence — injprev","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  injprev(injd, by = \"monthly\", var_type_injury = \"injury_type\") #> # A tibble: 98 × 6 #>    season           month type_injury     n n_player  prop #>    <fct>            <fct> <fct>       <int>    <int> <dbl> #>  1 season 2017/2018 Jul   Available      21       23  91.3 #>  2 season 2017/2018 Jul   Muscle          2       23   8.7 #>  3 season 2017/2018 Aug   Available      18       23  78.3 #>  4 season 2017/2018 Aug   Muscle          3       23  13   #>  5 season 2017/2018 Aug   Unknown         2       23   8.7 #>  6 season 2017/2018 Sep   Available      22       23  95.7 #>  7 season 2017/2018 Sep   Muscle          1       23   4.3 #>  8 season 2017/2018 Oct   Available      19       23  82.6 #>  9 season 2017/2018 Oct   Concussion      1       23   4.3 #> 10 season 2017/2018 Oct   Muscle          2       23   8.7 #> # ℹ 88 more rows injprev(injd, by = \"monthly\") #> # A tibble: 48 × 6 #>    season           month type_injury     n n_player  prop #>    <fct>            <fct> <fct>       <int>    <int> <dbl> #>  1 season 2017/2018 Jul   Available      21       23  91.3 #>  2 season 2017/2018 Jul   Injured         2       23   8.7 #>  3 season 2017/2018 Aug   Available      18       23  78.3 #>  4 season 2017/2018 Aug   Injured         5       23  21.7 #>  5 season 2017/2018 Sep   Available      22       23  95.7 #>  6 season 2017/2018 Sep   Injured         1       23   4.3 #>  7 season 2017/2018 Oct   Available      19       23  82.6 #>  8 season 2017/2018 Oct   Injured         4       23  17.4 #>  9 season 2017/2018 Nov   Available      18       23  78.3 #> 10 season 2017/2018 Nov   Injured         5       23  21.7 #> # ℹ 38 more rows injprev(injd, by = \"season\", var_type_injury = \"injury_type\") #> # A tibble: 11 × 5 #>    season           type_injury     n n_player  prop #>    <fct>            <fct>       <int>    <int> <dbl> #>  1 season 2017/2018 Available       7       23  30.4 #>  2 season 2017/2018 Concussion      3       23  13   #>  3 season 2017/2018 Ligament        4       23  17.4 #>  4 season 2017/2018 Muscle         11       23  47.8 #>  5 season 2017/2018 Unknown         8       23  34.8 #>  6 season 2018/2019 Available       2       19  10.5 #>  7 season 2018/2019 Bone           11       19  57.9 #>  8 season 2018/2019 Concussion     13       19  68.4 #>  9 season 2018/2019 Ligament        6       19  31.6 #> 10 season 2018/2019 Muscle         15       19  78.9 #> 11 season 2018/2019 Unknown        13       19  68.4 injprev(injd, by = \"season\") #> # A tibble: 4 × 5 #>   season           type_injury     n n_player  prop #>   <fct>            <fct>       <int>    <int> <dbl> #> 1 season 2017/2018 Available       7       23  30.4 #> 2 season 2017/2018 Injured        16       23  69.6 #> 3 season 2018/2019 Available       2       19  10.5 #> 4 season 2018/2019 Injured        17       19  89.5"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate injury summary statistics — injsummary","title":"Estimate injury summary statistics — injsummary","text":"Calculate injury summary statistics injury incidence injury burden (see Bahr et al. 20), including total number injuries, number days lost due injury, total time exposure etc., means (widely used) Poisson method, negative binomial, zero-inflated poisson zero-inflated negative binomial, player overall basis.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate injury summary statistics — injsummary","text":"","code":"injsummary(   injd,   var_type_injury = NULL,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   conf_level = 0.95,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate injury summary statistics — injsummary","text":"injd injd S3 object (see prepare_all()). var_type_injury Character specifying name column according compute injury summary statistics. refer (categorical) variable describes \"type injury\". Optional, defaults NULL. method Method estimate injury incidence injury burden. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; characters stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. conf_level Confidence level (defaults 0.95). quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate injury summary statistics — injsummary","text":"list two data frames comprising player-wise overall injury summary statistics, respectively, constitute injds S3 object. made following columns: ninjuries: number injuries sustained player overall team given period specified injd data frame. ndayslost: number days lost player overall team due injury given period specified injd data frame. mean_dayslost: average number days lost (.e. ndayslost) playerwise overall team. median_dayslost: median number days lost (.e. ndayslost) playerwise overall team. iqr_dayslost: interquartile range number days lost (.e. ndayslost) playerwise overall team. totalexpo: total exposure player risk sustaining injury. injincidence: injury incidence, number injuries per unit exposure. injburden: injury burden, number days lost per unit exposure. var_type_injury: specified argument function. Apart column names, may include columns depending user's specifications function: percent_ninjuries: percentage (%) number injuries type relative types injuries (var_type_injury specified). percent_dayslost: percentage (%) number days lost injuries type relative total number days lost types injuries (var_type_injury specified). injincidence_sd injburden_sd: estimated standard deviation, specified method argument, injury incidence (injincidence) injury burden (injburden), overall injury summary statistics (2nd element function output). injincidence_lower injburden_lower: lower bound , example, 95% confidence interval (conf_level = 0.95) injury incidence (injincidence) injury burden (injburden), overall injury summary statistics (2nd element function output). injincidence_upper injburden_upper: (item) applies upper bound.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate injury summary statistics — injsummary","text":"Bahr R., Clarsen B., & Ekstrand J. (2018). focus burden injuries illnesses, just incidence. British Journal Sports Medicine, 52(16), 1018–1021. https://doi.org/10.1136/bjsports-2017-098160 Waldén M., Mountjoy M., McCall ., Serner ., Massey ., Tol J. L., ... & Andersen T. E. (2023). Football-specific extension IOC consensus statement: methods recording reporting epidemiological data injury illness sport 2020. British journal sports medicine.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate injury summary statistics — injsummary","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  injsummary(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> $playerwise #> # A tibble: 28 × 9 #>    player         ninjuries ndayslost mean_dayslost median_dayslost iqr_dayslost #>    <fct>              <dbl>     <dbl>         <dbl>           <dbl> <chr>        #>  1 adam-lallana           6       302         43.1             43   18.5-52.5    #>  2 alberto-moreno         1        50         25               25   12.5-37.5    #>  3 alex-oxlade-c…         1       316        316              316   316-316      #>  4 alisson                0         0          0                0   0-0          #>  5 andrew-robert…         5        22          3.67             2.5 1.25-3.75    #>  6 daniel-sturri…         3       122         30.5             33.5 12-52        #>  7 danny-ings             0         0          0                0   0-0          #>  8 dejan-lovren           6       160         22.9             13   9-28.5       #>  9 divock-origi           1         5          2.5              2.5 1.25-3.75    #> 10 dominic-solan…         0         0          0                0   0-0          #> # ℹ 18 more rows #> # ℹ 3 more variables: totalexpo <dbl>, injincidence <dbl>, injburden <dbl> #>  #> $overall #> # A tibble: 1 × 14 #>   ninjuries ndayslost mean_dayslost median_dayslost iqr_dayslost totalexpo #>       <dbl>     <dbl>         <dbl>           <dbl> <chr>            <dbl> #> 1        82      2049          19.0             7.5 1-20.25          74690 #> # ℹ 8 more variables: injincidence <dbl>, injburden <dbl>, #> #   injincidence_sd <dbl>, injburden_sd <dbl>, injincidence_lower <dbl>, #> #   injincidence_upper <dbl>, injburden_lower <dbl>, injburden_upper <dbl> #>  #> attr(,\"class\") #> [1] \"injds\" \"list\"  #> attr(,\"unit_exposure\") #> [1] \"matches_minutes\" #> attr(,\"unit_timerisk\") #> [1] \"100 player-match\" #> attr(,\"conf_level\") #> [1] 0.95 injsummary(injd, var_type_injury = \"injury_type\") #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> $playerwise #> # A tibble: 140 × 10 #>    player         injury_type ninjuries ndayslost mean_dayslost median_dayslost #>    <fct>          <fct>           <dbl>     <dbl>         <dbl>           <dbl> #>  1 adam-lallana   Bone                0         0           0                 0 #>  2 adam-lallana   Concussion          3        97          32.3              25 #>  3 adam-lallana   Ligament            0         0           0                 0 #>  4 adam-lallana   Muscle              3       205          68.3              45 #>  5 adam-lallana   Unknown             0         0           0                 0 #>  6 alberto-moreno Bone                0         0           0                 0 #>  7 alberto-moreno Concussion          0         0           0                 0 #>  8 alberto-moreno Ligament            1        50          50                50 #>  9 alberto-moreno Muscle              0         0           0                 0 #> 10 alberto-moreno Unknown             0         0           0                 0 #> # ℹ 130 more rows #> # ℹ 4 more variables: iqr_dayslost <chr>, totalexpo <dbl>, injincidence <dbl>, #> #   injburden <dbl> #>  #> $overall #> # A tibble: 5 × 17 #>   injury_type ninjuries percent_ninjuries ndayslost percent_dayslost #>   <fct>           <dbl>             <dbl>     <dbl>            <dbl> #> 1 Bone               11              13.4       173             8.44 #> 2 Concussion         16              19.5       213            10.4  #> 3 Ligament            9              11.0       596            29.1  #> 4 Muscle             25              30.5       735            35.9  #> 5 Unknown            21              25.6       332            16.2  #> # ℹ 12 more variables: mean_dayslost <dbl>, median_dayslost <dbl>, #> #   iqr_dayslost <chr>, totalexpo <dbl>, injincidence <dbl>, injburden <dbl>, #> #   injincidence_sd <dbl>, injburden_sd <dbl>, injincidence_lower <dbl>, #> #   injincidence_upper <dbl>, injburden_lower <dbl>, injburden_upper <dbl> #>  #> attr(,\"class\") #> [1] \"injds\" \"list\"  #> attr(,\"unit_exposure\") #> [1] \"matches_minutes\" #> attr(,\"unit_timerisk\") #> [1] \"100 player-match\" #> attr(,\"conf_level\") #> [1] 0.95"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform injsummary() output according to the unit of exposure — injsummary_unit","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"Transform injsummary() output according unit exposure","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"","code":"injsummary_unit(unit, injds, quiet)"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"unit Character indicates unit exposure sports injury data. injds injds data frame transformed. quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"list two elements: () injds data frame 'injincidence' 'injburden' values transformed according unit, named injds (ii) character vector expresses unit used rates, .e. player's time risk, named unit_timerisk.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":null,"dir":"Reference","previous_headings":"","what":"injurytools package — injurytools","title":"injurytools package — injurytools","text":"Sports Injury Data analysis aims identify describe magnitude injury problem, gain insights (e.g. determine potential risk factors) statistical modelling approaches. 'injurytools' package provides standardized routines utilities simplify analyses. offers functions data preparation, informative visualizations descriptive model-based analyses.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"injurytools package — injurytools","text":"Maintainer: Lore Zumeta Olaskoaga lzumeta@bcamath.org (ORCID) Authors: Dae-Jin Lee dlee@bcamath.org (ORCID)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is of class injd — is_injd","title":"Check if an object is of class injd — is_injd","text":"Check object x class injd.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is of class injd — is_injd","text":"","code":"is_injd(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is of class injd — is_injd","text":"x R object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is of class injd — is_injd","text":"logical value: TRUE x inherits injd class, FALSE otherwise.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is of class injds — is_injds","title":"Check if an object is of class injds — is_injds","text":"Check object x class injds.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is of class injds — is_injds","text":"","code":"is_injds(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is of class injds — is_injds","text":"x R object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is of class injds — is_injds","text":"logical value: TRUE x inherits injds class, FALSE otherwise.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"constructor of injd class — new_injd","title":"constructor of injd class — new_injd","text":"constructor injd class","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructor of injd class — new_injd","text":"","code":"new_injd(   x = data.frame(),   unit_exposure = \"match_minutes\",   follow_up = data.frame(),   data_exposures = data.frame(),   data_injuries = data.frame() )"},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructor of injd class — new_injd","text":"x data frame object construct injd class object unit_exposure first attribute follow_up second attribute data_exposures third attribute data_injuries fourth attribute","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructor of injd class — new_injd","text":"new injd object","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data in a standardized format — prepare_data","title":"Prepare data in a standardized format — prepare_data","text":"data preprocessing functions provided injurytools package, involve: setting exposure injury data standardized format integrating sources data adequate data structure. prepare_inj() prepare_exp() set standardized names proper classes (key) columns injury exposure data, respectively. prepare_all() integrates , standardized injury exposure data sets, convert injd S3 object adequate structure statistical analyses. See Prepare Sports Injury Data vignette details.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data in a standardized format — prepare_data","text":"","code":"prepare_inj(   df_injuries0,   player = \"player\",   date_injured = \"date_injured\",   date_recovered = \"date_recovered\" )  prepare_exp(   df_exposures0,   player = \"player\",   date = \"date\",   time_expo = \"time_expo\" )  prepare_all(   data_exposures,   data_injuries,   exp_unit = c(\"minutes\", \"hours\", \"days\", \"matches_num\", \"matches_minutes\",     \"activity_days\", \"seasons\") )"},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data in a standardized format — prepare_data","text":"df_injuries0 data frame containing injury information, columns referring player name/id, date injury date recovery (minimal data). player Character referring column name player information stored. date_injured Character referring column name information date injury stored. date_recovered Character referring column name information date recovery stored. df_exposures0 data frame containing exposure information, columns referring player name/id, date exposure total time exposure corresponding data entry (minimal data). date Character referring column name exposure date information stored. Besides, column must class Date integer/numeric. integer/numeric, refer year season started (e.g. date = 2015 refer 2015/2016 season). time_expo Character referring column name information time exposure corresponding date stored. data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns. data_injuries Injury data frame standardized column names, fashion prepare_inj() returns. exp_unit Character defining unit exposure time (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data in a standardized format — prepare_data","text":"prepare_inj() returns data frame key columns injury data standardized proper format. prepare_exp() returns data frame key columns exposure data standardized proper format. prepare_all() returns injd  S3 object contains necessary information proper data structure perform statistical analyses (e.g. calculate injury summary statistics, visualize injury data). exp_unit \"minutes\" (default), columns tstart_min tstop_min created specify time event (injury) values, starting stopping time interval, respectively. training time minutes, player risk, injury (censorship) occurred. choices, tstart_x tstop_x also created according exp_unit indicated (x, one : min, h, match, minPlay, d, acd s). columns useful survival analysis routines. See Note section. also creates days_lost column based difference date_recovered date_injured days. exist (raw data) overrides.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare data in a standardized format — prepare_data","text":"Depending unit exposure, tstart_x tstop_x columns might values (e.g. exp_unit = \"matches_num\" player played match corresponding period time). Please aware performing survival analysis related task.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data in a standardized format — prepare_data","text":"","code":"df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            player         = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\")  df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             player        = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\")  # \\donttest{ injd <- prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   player t0         tf         date_injured date_recovered tstart     tstop      #>   <fct>  <date>     <date>     <date>       <date>         <date>     <date>     #> 1 adam-… 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 2017-07-31 #> 2 adam-… 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 2018-03-31 #> 3 adam-… 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 2018-09-04 #> 4 adam-… 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 2018-11-09 #> 5 adam-… 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 2019-01-06 #> 6 adam-… 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 2019-04-01 #> # ℹ 12 more variables: tstart_minPlay <dbl>, tstop_minPlay <dbl>, status <dbl>, #> #   enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" #>  - attr(*, \"follow_up\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_exposures\")='data.frame':\t42 obs. of  16 variables: #>  - attr(*, \"data_injuries\")= tibble [82 × 11] (S3: tbl_df/tbl/data.frame) # }"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of exposure data — raw_df_exposures","title":"Minimal example of exposure data — raw_df_exposures","text":"example player exposure data set contains minimum required exposure information well player- match-related variables. includes Liverpool Football Club male's first team players' exposure data, exposure measured (number minutes ) matches played, two consecutive seasons, 2017-2018 2018-2019. row refers player-season. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of exposure data — raw_df_exposures","text":"","code":"raw_df_exposures"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame 42 rows corresponding 28 football players 16 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) year Year season started (numeric) matches_played Matches played player season (numeric) minutes_played Minutes played player season (numeric) liga Name ligue player played season (factor) club_name Name club player belongs season (factor) club_id Identification number club player belongs season (factor) age Age player season (numeric) place Place birth player (character) position Position player pitch (factor) foot Dominant leg player. One , left right (factor) goals Number goals scored player season (numeric) assists Number assists provided player season (numerical) reds Number red cards given player season (numeric)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of exposure data — raw_df_exposures","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred. , use recommended epidemiological research (see also Hoenig et al., 2022).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Minimal example of exposure data — raw_df_exposures","text":"Hoenig, T., Edouard, P., Krause, M., Malhan, D., Relógio, ., Junge, ., & Hollander, K. (2022). Analysis 20,000 injuries European professional football using citizen science-based approach: opportunity epidemiological research?. Journal science medicine sport, 25(4), 300-305.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of injury data — raw_df_injuries","title":"Minimal example of injury data — raw_df_injuries","text":"example injury data set containing minimum required injury information well injury-related variables. includes Liverpool Football Club male's first team players' injury data. row refers player-injury. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of injury data — raw_df_injuries","text":"","code":"raw_df_injuries"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of injury data — raw_df_injuries","text":"data frame 82 rows corresponding 23 players 11 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) Date injury data entry (Date) Date recovery data entry (Date) days_lost Number days lost due injury (numeric) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://www.transfermarkt.com (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury (), whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); NA otherwise (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of injury data — raw_df_injuries","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of injury data — raw_df_injuries","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred. , use recommended epidemiological research (see also Hoenig et al., 2022).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Minimal example of injury data — raw_df_injuries","text":"Hoenig, T., Edouard, P., Krause, M., Malhan, D., Relógio, ., Junge, ., & Hollander, K. (2022). Analysis 20,000 injuries European professional football using citizen science-based approach: opportunity epidemiological research?. Journal science medicine sport, 25(4), 300-305.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the year — season2year","title":"Get the year — season2year","text":"Get year given season.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the year — season2year","text":"","code":"season2year(season)"},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the year — season2year","text":"season Character/factor specifying season. follow pattern \"xxxx/yyyy\", e.g. \"2005/2006\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the year — season2year","text":"Given season, returns year (numeric) season started.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the year — season2year","text":"","code":"season <- \"2022/2023\" season2year(season) #> [1] 2022"},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"validator or injd class — validate_injd","title":"validator or injd class — validate_injd","text":"validator injd class","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validator or injd class — validate_injd","text":"","code":"validate_injd(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validator or injd class — validate_injd","text":"x injd class object","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validator or injd class — validate_injd","text":"error x injd class; otherwise x (invisibly)","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-101","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.1","title":"injurytools 1.0.1","text":"CRAN release: 2023-02-01 Maintenance update: fixes CRAN issues due new release dplyr New feature joins integrated","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-100","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.0","title":"injurytools 1.0.0","text":"CRAN release: 2023-01-26 Initial release version CRAN","code":""}]
