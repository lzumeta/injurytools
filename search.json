[{"path":"https://lzumeta.github.io/injurytools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 injurytools Lore Zumeta Olaskoaga Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"rates","dir":"Articles","previous_headings":"Measures of occurrence","what":"Rates","title":"Estimate Measures of Injury Epidemiology","text":"Hodgson Phillips (2000) state, “Sports injuries occur athletes exposed given sport occur specific conditions, known time place.” Thus, attempting describe distribution injuries necessary relate population risk specified time period. fundamental unit measurement rate. rate measure consists denominator numerator period time. Denominator data can number different things (e.g. number minutes trained/played, number matches played). , reflects speed new “injury-related” events occur.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-incidence-rate","dir":"Articles","previous_headings":"Measures of occurrence > Rates","what":"Injury incidence rate","title":"Estimate Measures of Injury Epidemiology","text":"Injury incidence rate number new injury cases (\\(\\)) per unit player-exposure time, .e. \\[ I_{r} = \\frac{}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-burden-rate","dir":"Articles","previous_headings":"Measures of occurrence > Rates","what":"Injury burden rate","title":"Estimate Measures of Injury Epidemiology","text":"Injury burden rate number days lost (\\(n_d\\)) per unit player-exposure time, .e. \\[I_{br} = \\frac{n_d}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"prevalence","dir":"Articles","previous_headings":"Measures of occurrence","what":"Prevalence","title":"Estimate Measures of Injury Epidemiology","text":"Prevalence, period prevalence, proportion refers number players reported injury interest (\\(X\\)) divided total player-population risk time specified period time (\\(\\Delta T\\) time window). includes players already injury start time period well suffer period. \\[P = \\frac{X}{N}\\] \\(X\\) number injury cases \\(N\\) total number players study point time window \\(\\Delta T\\).","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"in-practice","dir":"Articles","previous_headings":"","what":"In practice","title":"Estimate Measures of Injury Epidemiology","text":", prepare-data vignette, use data sets available injurytools package: data Liverpool Football Club male’s first team players two consecutive seasons, 2017-2018 2018-2019, scrapped https://www.transfermarkt.com/ website1.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"calc_summary","dir":"Articles","previous_headings":"In practice","what":"- calc_summary()","title":"Estimate Measures of Injury Epidemiology","text":"Now, preprocessed data passed calc_summary() calculate injury summary statistics overall playerwise: notice warning messages pop (unless quiet = TRUE). displayed make clear exposure time unit is2. present results tidier comprehensible way (instead R code styled output) following can done: used RMarkdown, particular knitr::kable() function, report tables way. Note provide numbers easy interpret avoid small decimals, injury incidence injury burden reported ‘per 100 player-match exposure’. example exposure time minutes played matches, multiply rates 90*100 (.e. 90 minutes lasts football match). reported incidence rate estimated \\(\\hat{}_r = \\frac{82}{74690}\\times90\\times100\\). Players highest injury incidence rate (type injuries) Adam Lallana Daniel Sturridge 77.1 29.1 injuries per 100 player-matches respectively. teams overall injury incidence 9.9 injuries per 100 player-matches injury burden 246.9 days lost per 100 player-matches. summaries can done type injury: results team regarding injury incidence injury burden type injury:","code":"df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") df_summary   <- calc_summary(injd) #> Warning in summary_unit(unit, out, quiet):  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #> Warning in summary_unit(unit, out, quiet):  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) df_summary_p <- calc_summary(injd, overall = FALSE) #> Warning in summary_unit(unit, out, quiet):  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #> Warning in summary_unit(unit, out, quiet):  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) # the 'playerwise' data frame df_summary_p # format the 'playerwise' data frame for output as a table df_summary_p |>    arrange(desc(incidence)) |> # sort by decreasing order of incidence   mutate(iqr_dayslost = paste0(qt25_dayslost, \" - \", qt75_dayslost)) |>    select(\"person_id\", \"ncases\", \"ndayslost\", \"mean_dayslost\",          \"median_dayslost\", \"iqr_dayslost\", \"totalexpo\",          \"incidence\", \"burden\") |>    head(10) |>   kable(digits = 2, col.names = c(\"Player\", \"N injuries\", \"N days lost\",                                    \"Mean days lost\", \"Median days lost\",                                    \"IQR days lost\",                                   \"Total exposure\", \"Incidence\", \"Burden\")) # the 'overall' data frame df_summary # format the table of total incidence and burden (main columns) df_summary |>    mutate(iqr_dayslost = paste0(qt25_dayslost, \" - \", qt75_dayslost)) |>    select(\"ncases\", \"ndayslost\", \"mean_dayslost\", \"median_dayslost\",          \"iqr_dayslost\", \"totalexpo\", \"incidence\", \"burden\") |>    data.frame(row.names = \"TOTAL\") |>    kable(digits = 2,         col.names = c(\"N injuries\", \"N days lost\", \"Mean days lost\",                       \"Median days lost\", \"IQR days lost\",                       \"Total exposure\", \"Incidence\", \"Burden\"),         row.names = TRUE) |>    kable_styling(full_width = FALSE) # format the table of total incidence and burden (point + ci estimates) dfs_cis <- df_summary |>    select(starts_with(\"incid\"), starts_with(\"burd\")) |>    data.frame(row.names = \"TOTAL\") dfs_cis$ci_incidence <- paste0(\"[\",  round(dfs_cis$incidence_lower, 1),                                         \", \", round(dfs_cis$incidence_upper, 1), \"]\") dfs_cis$ci_burden    <- paste0(\"[\",  round(dfs_cis$burden_lower, 1),                                         \", \", round(dfs_cis$burden_upper, 1), \"]\")  conf_level <- 0.95 * 100  dfs_cis |>    select(1, 9, 5, 10) |>    kable(digits = 2,         col.names = c(\"Incidence\", paste0(conf_level, \"% CI for \\\\(I_r\\\\)\"),                        \"Burden\",    paste0(conf_level, \"% CI for \\\\(I_{br}\\\\)\"))) dfs_pertype <- calc_summary(injd, by = \"injury_type\", quiet = T) dfs_pertype dfs_pertype |>    select(1:5, 9:15) |>    mutate(ncases2 = paste0(ncases, \" (\", percent_ncases, \")\"),          ndayslost2 = paste0(ndayslost, \" (\", percent_ndayslost, \")\"),          iqr_dayslost = paste0(qt25_dayslost, \" - \", qt75_dayslost),          median_dayslost2 = paste0(median_dayslost, \" (\", iqr_dayslost, \")\")) |>    select(1, 13:14, 16, 4:5, 12) |>    arrange(desc(burden)) |>    kable(digits = 2,         col.names = c(\"Type of injury\", \"N injuries (%)\", \"N days lost (%)\",                       \"Median days lost (IQR)\",                       \"Total exposure\", \"Incidence\", \"Burden\"),         row.names = TRUE) |>    kable_styling(full_width = FALSE)"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"calc_prevalence","dir":"Articles","previous_headings":"In practice","what":"- calc_prevalence()","title":"Estimate Measures of Injury Epidemiology","text":"calculate injury prevalence proportions injury-free players season basis: Making use knitr::kable(): Overall, injured players 18-19 season previous season. Let’s calculate monthly: Looking monthly basis, differences w.r.t. player availability Liverpool FC 1st male team, winter January/February months. injured players 18-19 season. Season 2017/2018 Season 2018/2019","code":"df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") prev_table1 <- calc_prevalence(injd, time_period = \"season\") prev_table1 #> # A tibble: 4 × 5 #>   season           status        n n_athlete  prop #>   <fct>            <fct>     <int>     <int> <dbl> #> 1 season 2017/2018 Available     7        23  30.4 #> 2 season 2017/2018 Injured      16        23  69.6 #> 3 season 2018/2019 Available     2        19  10.5 #> 4 season 2018/2019 Injured      17        19  89.5 kable(prev_table1,       col.names = c(\"Season\", \"Status\", \"N\", \"Total\", \"%\")) prev_table2 <- calc_prevalence(injd, time_period = \"monthly\")  ## compare two seasons July and August prev_table2 |>   group_by(season) |>    slice(1:4) #> # A tibble: 8 × 6 #> # Groups:   season [2] #>   season           month status        n n_athlete  prop #>   <fct>            <fct> <fct>     <int>     <int> <dbl> #> 1 season 2017/2018 Jul   Available    21        23  91.3 #> 2 season 2017/2018 Jul   Injured       2        23   8.7 #> 3 season 2017/2018 Aug   Available    18        23  78.3 #> 4 season 2017/2018 Aug   Injured       5        23  21.7 #> 5 season 2018/2019 Jul   Available    16        19  84.2 #> 6 season 2018/2019 Jul   Injured       3        19  15.8 #> 7 season 2018/2019 Aug   Available    15        19  78.9 #> 8 season 2018/2019 Aug   Injured       4        19  21.1 ## compare two seasons January and February prev_table2 |>   group_by(season) |>    slice(13:16) #> # A tibble: 8 × 6 #> # Groups:   season [2] #>   season           month status        n n_athlete  prop #>   <fct>            <fct> <fct>     <int>     <int> <dbl> #> 1 season 2017/2018 Jan   Available    18        23  78.3 #> 2 season 2017/2018 Jan   Injured       5        23  21.7 #> 3 season 2017/2018 Feb   Available    21        23  91.3 #> 4 season 2017/2018 Feb   Injured       2        23   8.7 #> 5 season 2018/2019 Jan   Available     9        19  47.4 #> 6 season 2018/2019 Jan   Injured      10        19  52.6 #> 7 season 2018/2019 Feb   Available    12        19  63.2 #> 8 season 2018/2019 Feb   Injured       7        19  36.8 prev_table3 <- calc_prevalence(injd, time_period = \"monthly\", by = \"injury_type\") ## season 1 prev_table3 |>    filter(season == \"season 2017/2018\", month == \"Jan\") |>    kable(col.names = c(\"Season\", \"Month\", \"Status\", \"N\", \"Total\", \"%\"),         caption = \"Season 2017/2018\") |>    kable_styling(full_width = FALSE, position = \"float_left\") ## season 2 prev_table3 |>    filter(season == \"season 2018/2019\", month == \"Jan\") |>    kable(col.names = c(\"Season\", \"Month\", \"Status\", \"N\", \"Total\", \"%\"),         caption = \"Season 2018/2019\") |>    kable_styling(full_width = FALSE, position = \"left\")"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"further-implementation","dir":"Articles","previous_headings":"","what":"Further implementation","title":"Estimate Measures of Injury Epidemiology","text":"near future available negative binomial (method = \"negbin\" argument), zero-inflated poisson (“zinfpois”) zero-inflated negative binomial (\"zinfnb\") methods calc_incidence() calc_burden() functions. Finally, document shows perform descriptive analyses injury epidemiology, naturally, following analyses statistical inferences multivariate regression analyses may chosen infer player’s/athletes population properties (e.g. test whether differences injury incidence rates two cohorts) evaluate influence independent factors (e.g. previous injuries, workload) injuries occurred.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Estimate Measures of Injury Epidemiology","text":"NOTE 1: Bahr, Clarsen, Ekstrand (2018) state, injury incidence (likelihood) injury burden (severity) reported assessed conjunction rather isolation. regard, see risk matrix plot provided gg_injriskmatrix() function. NOTE 2: neither injury incidence (\\(I_r\\)) injury burden (\\(I_{br}\\)) ratios, interpreted probability; rates unit (person-time)\\(^{-1}\\) (e.g. per 1000h player-exposure, per player-season etc.). NOTE 3: Waldén et al. (2023) point , incidence-based measures provide standardized time window population risk (e.g., injuries per hour) preferred measures time risk varies among individuals (e.g., injuries per athletic exposure, injuries per number matches). preference measures standardized time scales aids comparison statistics across different cohorts sports.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"exploring-the-distribution-of-injuries","dir":"Articles","previous_headings":"","what":"Exploring the distribution of injuries","title":"Model Sports Injuries as Counts","text":"plot histograms injury incidence injury burden variables season.  following, use dfs1718p data.","code":"## 17/18 df_exposures1718 <- prepare_exp(df_exposures0 =                                    raw_df_exposures |> filter(season == \"17/18\"),                                 person_id     = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date)) df_injuries1718 <- prepare_inj(df_injuries0   =                                  raw_df_injuries |> filter(season == \"17/18\"),                                person_id      = \"player_name\",                                date_injured   = \"from\",                                date_recovered = \"until\") injd1718 <- prepare_all(data_exposures = df_exposures1718,                         data_injuries  = df_injuries1718,                         exp_unit = \"matches_minutes\") ## 18/19 df_exposures1819 <- prepare_exp(df_exposures0 =                                    raw_df_exposures |> filter(season == \"18/19\"),                                 person_id     = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date)) df_injuries1819 <- prepare_inj(df_injuries0   =                                   raw_df_injuries |> filter(season == \"18/19\"),                                person_id      = \"player_name\",                                date_injured   = \"from\",                                date_recovered = \"until\") injd1819 <- prepare_all(data_exposures = df_exposures1819,                         data_injuries  = df_injuries1819,                         exp_unit = \"matches_minutes\") ## calculate injury summary statistics dfs1718 <- calc_summary(injd1718, quiet = T) dfs1819 <- calc_summary(injd1819, quiet = T)  dfs1718p <- calc_summary(injd1718, overall = FALSE, quiet = T) dfs1819p <- calc_summary(injd1819, overall = FALSE, quiet = T)  dfsp <- bind_rows(\"Season 17-18\" = dfs1718p,                     \"Season 18-19\" = dfs1819p,                     .id = \"season\") ## plot p1 <- ggplot(data = dfsp) +    geom_histogram(aes(x = incidence, fill = season)) +    facet_wrap(~season) +   scale_fill_manual(name = \"\", values = c(\"#E7B800\", \"#2E9FDF\")) +   ylab(\"Number of players\") +    xlab(\"Incidence (number of injuries per 100 player-match)\") +   ggtitle(\"Histogram of injury incidence in each season\") +    theme(legend.position = \"none\")  p2 <- ggplot(data = dfsp) +    geom_histogram(aes(x = burden, fill = season)) +    facet_wrap(~season) +   scale_fill_manual(name = \"\", values = c(\"#E7B800\", \"#2E9FDF\")) +   ylab(\"Number of players\") +    xlab(\"Burden (number of days lost due to injury per 100 player-match)\") +   ggtitle(\"Histogram of injury burden in each season\") +    theme(legend.position = \"none\")  grid.arrange(p1, p2, ncol = 1) theme_counts <- theme(axis.text = element_text(size = rel(1.2)),                       axis.title = element_text(size = rel(1.3)),                       strip.text = element_text(size = rel(1.4)),                       plot.title = element_text(size = rel(1.4)),                       legend.text = element_text(size =  rel(1.3)),                       legend.title = element_text(size = rel(1.3))) p1 <- p1 + theme_counts p2 <- p2 + theme_counts"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"poisson-mixed-model","dir":"Articles","previous_headings":"","what":"- Poisson (mixed) model","title":"Model Sports Injuries as Counts","text":"merge dfs1718p data frame player-related information (.e. positionb, age, assists, goals, yellows etc.) available raw_df_exposures data frame. fit Poisson regression model injury incidence (considering positionb covariate), : alternatively, can use glmmTMB::glmmTMB function: Besides, repeated measurements dfsp, can fit Mixed Model via: can analogue burden, e.g.: now, lets stick model burden_glm_pois lets interpret model output. estimated coefficients :","code":"## 17/18 df_exposures1718 <- prepare_exp(df_exposures0 =                                    raw_df_exposures |> filter(season == \"17/18\"),                                 person_id        = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date))  dfs1718p <- dfs1718p |>    mutate(seasonb = \"2017/2018\") |>    ## join to have info, such as position, age, citizenship etc.   left_join(df_exposures1718, by = c(\"person_id\" = \"person_id\",                                       \"seasonb\"   = \"seasonb\")) |>    ## create positionb column    ## (so that the categories are: Attack, Defender, Goalkeeper and Midfield)   mutate(positionb = factor(str_split_i(position, \"_\", 1))) ## quit Goalkeepers dfs1718p <- dplyr::filter(dfs1718p, positionb != \"Goalkeeper\") |>    droplevels() incidence_glm_pois <- glm(ncases ~ positionb, # + offset(log(totalexpo))                           offset = log(totalexpo),                           data = dfs1718p,                           family = poisson) # incidence_glm_pois2 <- glmmTMB(formula = ncases ~ foot,  #                                offset = log(totalexpo),  #                                family = poisson(), data = dfs1718p) # summary(incidence_glm_pois2) df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                                 person_id     = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date))  dfsp <- dfsp |>    mutate(seasonb = if_else(season == \"Season 17-18\", \"2017/2018\", \"2018/2019\")) |>    ## join to have info, such as position, age, citizenship etc.   left_join(df_exposures, by = c(\"person_id\" = \"person_id\",                                  \"seasonb\" = \"seasonb\")) |>    ## create positionb column    ## (so that the categories are: Attack, Defender, Goalkeeper and Midfield)   mutate(positionb = factor(str_split_i(position, \"_\", 1))) |>    droplevels() incidence_glmm_pois <- glmer(formula = ncases ~ positionb + (1 | person_id),                              offset = log(totalexpo),                              data = dfsp,                              family = poisson) # incidence_glmm_pois2 <- glmmTMB::glmmTMB(formula = ncases ~ positionb + (1 | person_id),  #                                          offset = log(totalexpo), #                                          data = dfsp, #                                          family = poisson) burden_glm_pois <- glm(ndayslost ~ positionb, offset = log(totalexpo), ## or ~ foot                        data = dfs1718p,                        family = poisson) summary(burden_glm_pois) #>  #> Call: #> glm(formula = ndayslost ~ positionb, family = poisson, data = dfs1718p,  #>     offset = log(totalexpo)) #>  #> Coefficients: #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)       -3.81936    0.06651 -57.422   <2e-16 *** #> positionbDefender -0.03227    0.08893  -0.363    0.717     #> positionbMidfield  1.01561    0.07780  13.054   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for poisson family taken to be 1) #>  #>     Null deviance: 2622.1  on 20  degrees of freedom #> Residual deviance: 2327.1  on 18  degrees of freedom #> AIC: 2417.3 #>  #> Number of Fisher Scoring iterations: 6 cbind(estimate = exp(coef(burden_glm_pois)) * c(90*100, 1, 1),        exp(confint(burden_glm_pois)) * c(90*100, 1, 1)) |> # (to report per 100 player-matches)   kable() #> Waiting for profiling to be done..."},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"negative-binomial-model","dir":"Articles","previous_headings":"","what":"- Negative Binomial model","title":"Model Sports Injuries as Counts","text":"","code":"burden_glm_nb <- glm.nb(ndayslost ~ positionb + offset(log(totalexpo)),                            data = dfs1718p) summary(burden_glm_nb) #>  #> Call: #> glm.nb(formula = ndayslost ~ positionb + offset(log(totalexpo)),  #>     data = dfs1718p, init.theta = 0.2625149285, link = log) #>  #> Coefficients: #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -2.9829     0.7404  -4.029  5.6e-05 *** #> positionbDefender  -0.8857     1.0139  -0.874    0.382     #> positionbMidfield   1.1416     1.0882   1.049    0.294     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for Negative Binomial(0.2625) family taken to be 1) #>  #>     Null deviance: 27.799  on 20  degrees of freedom #> Residual deviance: 24.105  on 18  degrees of freedom #> AIC: 200.83 #>  #> Number of Fisher Scoring iterations: 1 #>  #>  #>               Theta:  0.2625  #>           Std. Err.:  0.0804  #>  #>  2 x log-likelihood:  -192.8270"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"zero-inflated-poisson-model","dir":"Articles","previous_headings":"","what":"- Zero-inflated Poisson model","title":"Model Sports Injuries as Counts","text":"","code":"burden_zinfpois <- zeroinfl(ndayslost ~ positionb | positionb,                              offset = log(totalexpo),                              data = dfs1718p,                              link = \"logit\",                              dist = \"poisson\",                              trace = FALSE, EM = FALSE) ## Or: # burden_zinfpois <- glmmTMB::glmmTMB(formula = ndayslost ~ 1 +  positionb, #                                     offset = log(totalexpo), #                                     ziformula = ~ 1 + positionb, #                                     data = dfs1718p, #                                     family = poisson) summary(burden_zinfpois) #>  #> Call: #> zeroinfl(formula = ndayslost ~ positionb | positionb, data = dfs1718p,  #>     offset = log(totalexpo), dist = \"poisson\", link = \"logit\", trace = FALSE,  #>     EM = FALSE) #>  #> Pearson residuals: #>    Min     1Q Median     3Q    Max  #> -2.186 -1.385 -1.028  1.840 19.448  #>  #> Count model coefficients (poisson with log link): #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)       -3.38575    0.06652 -50.897   <2e-16 *** #> positionbDefender -0.21247    0.08893  -2.389   0.0169 *   #> positionbMidfield  0.77309    0.07781   9.936   <2e-16 *** #>  #> Zero-inflation model coefficients (binomial with logit link): #>                   Estimate Std. Error z value Pr(>|z|) #> (Intercept)        -0.2878     0.7638  -0.377    0.706 #> positionbDefender  -0.8109     1.1181  -0.725    0.468 #> positionbMidfield  -1.3217     1.3354  -0.990    0.322 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Number of iterations in BFGS optimization: 9  #> Log-likelihood: -929.5 on 6 Df"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"zero-inflated-negative-binomial-model","dir":"Articles","previous_headings":"","what":"- Zero-inflated Negative Binomial model","title":"Model Sports Injuries as Counts","text":"","code":"burden_zinfnb <- zeroinfl(ndayslost ~ positionb | positionb,                              offset = log(totalexpo),                              data = dfs1718p,                              link = \"logit\",                              dist = \"negbin\",                              trace = FALSE, EM = FALSE) ## Or: # burden_zinfnb <- glmmTMB::glmmTMB(ndayslost ~ 1 + positionb, offset = log(totalexpo), #                                      ziformula = ~ 1 + positionb, #                                      data = dfs1718p, #                                      family = nbinom2) summary(burden_zinfnb) #>  #> Call: #> zeroinfl(formula = ndayslost ~ positionb | positionb, data = dfs1718p,  #>     offset = log(totalexpo), dist = \"negbin\", link = \"logit\", trace = FALSE,  #>     EM = FALSE) #>  #> Pearson residuals: #>     Min      1Q  Median      3Q     Max  #> -0.6477 -0.5554 -0.4596  0.2243  2.3967  #>  #> Count model coefficients (negbin with log link): #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -2.5214     0.6870  -3.670 0.000243 *** #> positionbDefender  -1.1726     0.8795  -1.333 0.182449     #> positionbMidfield   0.8246     0.9205   0.896 0.370326     #> Log(theta)         -0.6520     0.4735  -1.377 0.168551     #>  #> Zero-inflation model coefficients (binomial with logit link): #>                   Estimate Std. Error z value Pr(>|z|) #> (Intercept)        -0.5269     0.9143  -0.576    0.564 #> positionbDefender  -1.1295     1.6187  -0.698    0.485 #> positionbMidfield  -1.3186     1.6114  -0.818    0.413 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Theta = 0.521  #> Number of iterations in BFGS optimization: 14  #> Log-likelihood: -95.24 on 7 Df"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-i.html","id":"model-comparison","dir":"Articles","previous_headings":"","what":"Model comparison","title":"Model Sports Injuries as Counts","text":"Finally, lets compare four models. compute conditional predicted mean probabilities model: display histogram data examine fits:  Besides, compute goodness fit measures AIC, BIC deviance explained: According measures, Negative Binomial model (burden_glm_nb) fits data best.","code":"## pois ## predprob: for each subj, prob of observing each value phat_pois <- predprob(burden_glm_pois)  phat_pois_mn <- apply(phat_pois, 2, mean)  ## nb phat_nb <- predprob(burden_glm_nb)            phat_nb_mn <- apply(phat_nb, 2, mean)  ## zinfpois phat_zinfpois <- predprob(burden_zinfpois)             phat_zinfpois_mn <- apply(phat_zinfpois, 2, mean)  ## zinfnb phat_zinfnb <- predprob(burden_zinfnb)            phat_zinfnb_mn <- apply(phat_zinfnb, 2, mean)   ## put in a data frame idx <- seq(1, 62, length.out = 30) df_probs <- data.frame(phat_pois_mn     = phat_pois_mn[idx],                        phat_nb_mn       = phat_nb_mn[idx],                        phat_zinfpois_mn = phat_zinfpois_mn[idx],                        phat_zinfnb_mn   = phat_zinfnb_mn[idx],                         x= idx) |>    tidyr::gather(key = \"prob_type\", value = \"value\", -x) |>    mutate(prob_type = factor(prob_type)) ggplot(data = dfs1718p) +    geom_histogram(aes(x = burden/100, after_stat(density)),                   breaks = seq(-0.5, 62, length.out = 30),                  col = \"black\", alpha = 0.5) +   geom_point(data = df_probs, aes(x = x, y = value,                                    group = prob_type, col = prob_type)) +    geom_line(data = df_probs, aes(x = x, y = value,                                   group = prob_type, col = prob_type)) +    ylim(c(0, 0.3)) + xlab(\"Injury burden\") + ylab(\"Density\") +   scale_color_manual(name = \"Model:\",                      labels = c(\"Negative Binomial\", \"Poisson\",                                 \"Zero-Inflated Negative Binomial\",                                 \"Zero-Inflated Poisson\"),                      values = c(\"darkblue\", \"chocolate\", \"purple\", \"red\")) +   ggtitle(\"Histogram of injury burden in 2017/2018\\nwith conditional Poisson, NB, ZIP and ZINB Densities\") +   theme_counts +   theme(legend.position = c(0.7, 0.7)) #> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2 #> 3.5.0. #> ℹ Please use the `legend.position.inside` argument of `theme()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. models <- list(\"Poisson model\" = burden_glm_pois,                \"Negative binomial model\" = burden_glm_nb,                \"Zero-inflated Poisson model\" = burden_zinfpois,                \"Zero-inflated Negative Binomial model\" = burden_zinfnb)  res_gof <- lapply(models, function(model) {   aic      <- AIC(model)   bic      <- BIC(model)   if (class(model)[[1]] == \"zeroinfl\") {     deviance <- -2*logLik(model)[[1]]     null_model <- update(model, .~ -positionb)     null_deviance <- -2*logLik(null_model)[[1]]   } else {     deviance <- model$deviance     null_deviance <- model$null.deviance   }   dev_expl <- (null_deviance - deviance)/null_deviance * 100   return(res = data.frame(aic = aic, bic = bic, dev_expl = dev_expl)) }) res_gof |>      bind_rows(.id = \"model\") |>     ## arrange them according to dev_expl.   arrange(desc(dev_expl)) |>    knitr::kable(digits = 2,                col.names = c(\"Model\", \"AIC\", \"BIC\", \"Deviance Explained\"))"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"brief-background","dir":"Articles","previous_headings":"","what":"Brief background","title":"Model Sports Injuries as Events","text":"approach possible players followed course time, since consider injuries time--event outcome variables. Broadly speaking, define outcome variable, \\(T\\), “time occurrence injury (event)”. , data analysis regularly performed without knowing injury event times (e.g. study might finished players experiencing injury players may drop study), leads incomplete observations known censoring (.e. observe \\(Y = \\min(T, C)\\), \\(C\\) censorship variable). following two sections, first show application well-known Kaplan-Meier (KM) method Cox Proportional Hazards (Cox PH) model sports injury data , describe two possible survival modelling strategies take account recurrence injuries (repeated observations per player).","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"methods-for-time-to-first-injury","dir":"Articles","previous_headings":"","what":"Methods for time to first injury","title":"Model Sports Injuries as Events","text":"prepare data separate season injd object observation (row) corresponding time first injury (end season, transfer another team, .e. censored observation). final data frames called injd1718_sub injd1819_sub.","code":"## 17/18 df_exposures1718 <- prepare_exp(df_exposures0 =                                    raw_df_exposures |> filter(season == \"17/18\"),                                 person_id     = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date)) df_injuries1718 <- prepare_inj(df_injuries0   =                                  raw_df_injuries |> filter(season == \"17/18\"),                                person_id      = \"player_name\",                                date_injured   = \"from\",                                date_recovered = \"until\") injd1718 <- prepare_all(data_exposures = df_exposures1718,                         data_injuries  = df_injuries1718,                         exp_unit = \"matches_minutes\")  injd1718 <- injd1718 |>    mutate(seasonb = date2season(tstart)) |>    ## join to have info such as position, age, citizenship etc.   left_join(df_exposures1718, by = c(\"person_id\" = \"person_id\",                                       \"seasonb\"   = \"seasonb\"))   ## create injd1718_sub: ##  - time to first injury ##  - equivalent tstart and tstop in calendar days injd1718_sub <- injd1718 |>    mutate(tstop_day = as.numeric(difftime(tstop, tstart, units = \"days\"))) %>%   group_by(person_id) |>  ## important   mutate(tstop_day = cumsum(tstop_day),          tstart_day = lag(tstop_day, default = 0)) |>    ungroup() |>    dplyr::select(person_id:tstop_minPlay, tstart_day, tstop_day, everything()) |>    filter(enum == 1) ## time to first injury ## 18/19 df_exposures1819 <- prepare_exp(df_exposures0 =                                    raw_df_exposures |> filter(season == \"18/19\"),                                 person_id     = \"player_name\",                                 date          = \"year\",                                 time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date)) df_injuries1819 <- prepare_inj(df_injuries0   =                                   raw_df_injuries |> filter(season == \"18/19\"),                                person_id      = \"player_name\",                                date_injured   = \"from\",                                date_recovered = \"until\") injd1819 <- prepare_all(data_exposures = df_exposures1819,                         data_injuries  = df_injuries1819,                         exp_unit = \"matches_minutes\")  injd1819 <- injd1819 |>    mutate(seasonb = date2season(tstart)) |>    ## join to have info such as position, age, citizenship etc.   left_join(df_exposures1819, by = c(\"person_id\" = \"person_id\",                                       \"seasonb\"   = \"seasonb\"))   ## create injd1819_sub: ##  - time to first injury ##  - equivalent tstart and tstop in calendar days injd1819_sub <- injd1819 |>    mutate(tstop_day = as.numeric(difftime(tstop, tstart, units = \"days\"))) %>%   group_by(person_id) |>  ## important   mutate(tstop_day = cumsum(tstop_day),          tstart_day = lag(tstop_day, default = 0)) |>    ungroup() |>    dplyr::select(person_id:tstop_minPlay, tstart_day, tstop_day, everything()) |>    filter(enum == 1) ## time to first injury ## CHECK any(injd1718_sub$tstop_day == injd1718_sub$tstart_day) #> [1] FALSE any(injd1718_sub$tstop_minPlay == injd1718_sub$tstart_minPlay) #> [1] FALSE any(injd1819_sub$tstop_day == injd1819_sub$tstart_day) #> [1] FALSE any(injd1819_sub$tstop_minPlay == injd1819_sub$tstart_minPlay) #> [1] FALSE"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"kaplan-meier-curve","dir":"Articles","previous_headings":"Methods for time to first injury","what":"Kaplan-Meier curve","title":"Model Sports Injuries as Events","text":"section join data sets row: Now, estimate survival probabilities, \\(\\hat{S}_{\\text{KM}}(t)\\), season, follows: number first-time injuries seasons similar (16 vs. 17), median survival probability lower 2018/2019 season, .e. 2018/2019 estimated probability injury free 106th day less equal 0.5 (equivalently, estimated probability surviving 106 days (three months half) 0.5), whereas 2017/2019 probability surviving time 0.696. Next, plot Kaplan-Meier curves season based results via survminer::ggsurvplot() function:  Let’s add information previous plot, estimated median survival probability.  Finally, add risk table graph, plus p-value obtained log-rank test (tests difference survival probabilities 17/18 18/19 season), following.  statistical differences regarding survival probabilities first-time injuries seasons.","code":"injd_sub <- bind_rows(\"17-18\" = injd1718_sub,                       \"18-19\" = injd1819_sub,                       .id = \"season\") fit <- survfit(Surv(tstart_day, tstop_day, status) ~ seasonb,                data = injd_sub) fit #> Call: survfit(formula = Surv(tstart_day, tstop_day, status) ~ seasonb,  #>     data = injd_sub) #>  #>                    n events median 0.95LCL 0.95UCL #> seasonb=2017/2018 23     16    265     152      NA #> seasonb=2018/2019 19     17    106      84     165 ggsurvplot(fit, data = injd_sub,            palette = c(\"#E7B800\", \"#2E9FDF\")) + ## colors for the curves   xlab(\"Time [calendar days]\") +    ylab(expression(\"Survival probability  (\"*hat(S)[KM](t)*\")\")) +   ggtitle(\"Kaplan-Meier curves\",            subtitle = \"in each season (time to first injury)\") ## since tstop_day == (tstop_day - tstart_day) all(injd_sub$tstop_day == (injd_sub$tstop_day - injd_sub$tstart_day)) # [1] TRUE  ## equivalent fits: fit <- survfit(Surv(tstart_day, tstop_day, status) ~ seasonb, data = injd_sub) fit <- survfit(Surv(tstop_day, status) ~ seasonb, data = injd_sub) ggsurv <- ggsurvplot(fit, data = injd_sub,            palette = c(\"#E7B800\", \"#2E9FDF\"),            surv.median.line = \"hv\",            ggtheme = theme_bw(),            break.time.by = 60,            xlim = c(0, 370),            legend.labs = c(\"Season 17/18\", \"Season 18/19\")) +   xlab(\"Time [calendar days]\") +   ylab(expression(\"Survival probability  (\"*hat(S)[KM](t)*\")\")) +   ggtitle(\"Kaplan-Meier curves\",            subtitle = \"in each season (time to first injury)\")   # add median survival estimates ggsurv$plot <- ggsurv$plot +   annotate(\"text\",             x = 70, y = 0.4,            label = expression(hat(S)[18/19]*\"(106)=0.5\"),            col = \"#2E9FDF\") +     annotate(\"text\",             x = 230, y = 0.4,            label = expression(hat(S)[17/18]*\"(265)=0.5\"),            col = \"#E7B800\")  ggsurv$plot <- ggsurv$plot +    theme(plot.title = element_text(size = rel(1.5)),         plot.subtitle = element_text(size = rel(1.5)),         axis.title = element_text(size = rel(1.3)),         axis.text = element_text(size = rel(1.3)),         legend.title = element_blank(),         legend.text = element_text(size = rel(1.2)))  ggsurv ggsurv <- ggsurvplot(fit, data = injd_sub,             palette = c(\"#E7B800\", \"#2E9FDF\"),            risk.table = T,            conf.int = T,              pval = T,            surv.median.line = \"hv\",            risk.table.col = \"strata\",             ggtheme = theme_bw(),            break.time.by = 60,            fontsize = 5.5,            xlim = c(0, 370),            legend.labs = c(\"Season 17/18\", \"Season 18/19\"),            legend.title = \"\") +   xlab(\"Time [calendar days]\") +   ylab(expression(\"Survival probability  (\"*hat(S)[KM](t)*\")\")) +   ggtitle(\"Kaplan-Meier curves\",            subtitle = \"in each season (time to first injury)\")   # add median survival estimates ggsurv$plot <- ggsurv$plot +   annotate(\"text\",             x = 70, y = 0.4,            label = expression(hat(S)[18/19]*\"(106)=0.5\"),            col = \"#2E9FDF\") +     annotate(\"text\",             x = 230, y = 0.4,            label = expression(hat(S)[17/18]*\"(265)=0.5\"),            col = \"#E7B800\") # quit title and y text of the risk table ggsurv$table <- ggsurv$table +    ggtitle(\"Number of players at risk\") +    theme(plot.subtitle = element_blank(),         axis.title.y = element_blank(),         plot.title = element_text(size = rel(1.5)),         axis.title.x = element_text(size = rel(1.3)),         axis.text = element_text(size = rel(1.3)))  ggsurv$plot <- ggsurv$plot +    theme(plot.title = element_text(size = rel(1.5)),         plot.subtitle = element_text(size = rel(1.5)),         axis.title = element_text(size = rel(1.3)),         axis.text = element_text(size = rel(1.3)),         legend.title = element_blank(),         legend.text = element_text(size = rel(1.2)))    ggsurv"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"cox-ph-model","dir":"Articles","previous_headings":"Methods for time to first injury","what":"Cox PH model","title":"Model Sports Injuries as Events","text":"can fit Cox PH model relates covariates (\\(\\boldsymbol{x}\\)) injury outcome hazard function \\(\\lambda(t | \\boldsymbol{x}) = \\lambda_0(t)\\exp(\\boldsymbol{x}'\\boldsymbol{\\beta})\\). use injd1819_sub data section add another variable (.e. positionb). Now, fit Cox PH model three covariates: player position (excluding goalkeepers), age yellow cards received player 18/19 season. estimated effects cfit model : results meaningful interesting, probably due small sample size data. summary can displayed graphically (hazard ratios 95% confidence intervals, together p-values covariate, information goodness fit model) :  , can check proportional hazards assumption Cox PH model hold computing Schoenfeld residuals: PH assumption violated seen output (GLOBAL p-value). Let’s check residuals covariate model graphically:","code":"## create positionb column  ## (so that the categories are: Attack, Defender, Goalkeeper and Midfield) injd1819_sub <- mutate(injd1819_sub,                    positionb = factor(str_split_i(position, \"_\", 1))) cfit <- coxph(Surv(tstop_day, status) ~ positionb + age + yellows,               data = injd1819_sub |>                  filter(positionb != \"Goalkeeper\") |> droplevels()) summary(cfit) #> Call: #> coxph(formula = Surv(tstop_day, status) ~ positionb + age + yellows,  #>     data = droplevels(filter(injd1819_sub, positionb != \"Goalkeeper\"))) #>  #>   n= 18, number of events= 17  #>  #>                      coef exp(coef) se(coef)     z Pr(>|z|)   #> positionbDefender 0.58324   1.79183  0.80661 0.723   0.4696   #> positionbMidfield 1.33266   3.79112  0.70604 1.888   0.0591 . #> age               0.02391   1.02419  0.09937 0.241   0.8099   #> yellows           0.03909   1.03986  0.20752 0.188   0.8506   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>                   exp(coef) exp(-coef) lower .95 upper .95 #> positionbDefender     1.792     0.5581    0.3687     8.707 #> positionbMidfield     3.791     0.2638    0.9501    15.127 #> age                   1.024     0.9764    0.8429     1.244 #> yellows               1.040     0.9617    0.6924     1.562 #>  #> Concordance= 0.629  (se = 0.072 ) #> Likelihood ratio test= 4.05  on 4 df,   p=0.4 #> Wald test            = 3.88  on 4 df,   p=0.4 #> Score (logrank) test = 4.27  on 4 df,   p=0.4 ggforest(model = cfit,          data = injd1819_sub |>             filter(positionb != \"Goalkeeper\") |>             droplevels() |>             as.data.frame(),          fontsize = 1.2) cox.zph(cfit) #>           chisq df    p #> positionb 1.465  2 0.48 #> age       2.578  1 0.11 #> yellows   0.315  1 0.57 #> GLOBAL    5.961  4 0.20 ggcoxzph(cox.zph(cfit))"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"models-for-time-to-subsequent-injuries","dir":"Articles","previous_headings":"","what":"Models for time to (subsequent) injuries","title":"Model Sports Injuries as Events","text":"following models useful account heterogeneity among different observations group subjects.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"stratified-cox-ph-model","dir":"Articles","previous_headings":"Models for time to (subsequent) injuries","what":"Stratified Cox PH model","title":"Model Sports Injuries as Events","text":"fit stratified Cox PH model, use (previously prepared) injd_sub data, seasonb column two levels. model fit different baseline hazard function level (stratum) seasonb covariate (strata), .e. \\(\\lambda(t | \\boldsymbol{x}) = \\lambda_{0,k}(t)\\exp(\\boldsymbol{x}'\\boldsymbol{\\beta})\\) \\(k = 1, 2\\). effect age, \\(\\widehat{\\text{HR}}_{\\text{age}} = \\exp(\\hat{\\beta}_{\\text{age}}) = 1.02\\), significant. However, keep illustrate plot estimates two players different ages, 18 year-old vs. 36 year-old seasons, based fitted stratified model. First, put wanted estimates data frame. , plot :  proportional hazard assumption strata doesn’t hold:","code":"sfit <- coxph(Surv(tstart_day, tstop_day, status) ~ age + strata(seasonb),                data = injd_sub) summary(sfit) #> Call: #> coxph(formula = Surv(tstart_day, tstop_day, status) ~ age + strata(seasonb),  #>     data = injd_sub) #>  #>   n= 42, number of events= 33  #>  #>        coef exp(coef) se(coef)     z Pr(>|z|) #> age 0.01749   1.01764  0.05541 0.316    0.752 #>  #>     exp(coef) exp(-coef) lower .95 upper .95 #> age     1.018     0.9827    0.9129     1.134 #>  #> Concordance= 0.6  (se = 0.069 ) #> Likelihood ratio test= 0.1  on 1 df,   p=0.8 #> Wald test            = 0.1  on 1 df,   p=0.8 #> Score (logrank) test = 0.1  on 1 df,   p=0.8 ## surv estimates of a player of 18 year-old based on sfit player1 <- data.frame(age = 18) sfitn1 <- survfit(sfit, newdata = player1) sfitn1 <- data.frame(surv = sfitn1$surv,                       time = sfitn1$time,                      strata = c(rep(names(sfitn1$strata)[[1]], sfitn1$strata[[1]]),                                 rep(names(sfitn1$strata)[[2]], sfitn1$strata[[2]])),                      age = 18)  ## surv estimates of a player of 36 year-old based on sfit player2 <- data.frame(age = 36)  sfitn2 <- survfit(sfit, newdata = player2) sfitn2 <- data.frame(surv = sfitn2$surv,                       time = sfitn2$time,                      strata = c(rep(names(sfitn2$strata)[[1]], sfitn2$strata[[1]]),                                 rep(names(sfitn2$strata)[[2]], sfitn2$strata[[2]])),                      age = 36)   ## bind both data frames sfitn <- bind_rows(sfitn1, sfitn2) |>    mutate(strata = factor(strata),          Age = factor(age)) ggplot(sfitn, aes(x = time, y = surv, col = strata)) +   geom_step(aes(linetype = Age)) +   scale_color_manual(name = \"Season\", values = c(\"#E7B800\", \"#2E9FDF\")) +   xlab(\"t [calendar days]\") + ylab(expression(hat(S)(t))) +   theme(legend.title = element_text(size = rel(1.3)),         legend.text = element_text(size = rel(1.3)),         axis.text = element_text(size = rel(1.4)),         axis.title = element_text(size = rel(1.4))) cox.zph(sfit) #>        chisq df     p #> age        6  1 0.014 #> GLOBAL     6  1 0.014"},{"path":"https://lzumeta.github.io/injurytools/articles/model-injury-data-ii.html","id":"shared-frailty-model","dir":"Articles","previous_headings":"Models for time to (subsequent) injuries","what":"Shared frailty model","title":"Model Sports Injuries as Events","text":"Shared frailty models allow model dependence several survival times frailty term shared survival times pertaining player , general, cluster. way, survival times player sustains multiple injuries level frailty attached . expressed \\(\\lambda(t | \\boldsymbol{x}, \\alpha) = \\lambda_{0}(t)\\exp(\\boldsymbol{x}'\\boldsymbol{\\beta})\\alpha_l = \\lambda_{0}(t)\\exp(\\boldsymbol{x}'\\boldsymbol{\\beta} + b_l)\\) \\(l = 1, \\ldots, L\\) players, \\(\\alpha = \\exp(b)\\) usually follows Gamma log-normal distribution. Code data set-: Now, fit shared frailty model frailty term follows Gamma distribution using frailty(person_id) syntax inside survival::coxph() function’s formula: alternatively, can use coxme package (packages also) fit model log-normal frailty using (1 | person_id) syntax: model also called random intercepts model, since frailty term acts multiplicative way hazard (“intercept” curve). estimated variance random effect \\(\\hat{\\sigma}^2=\\) 2.27 p-value frailty term significant. Let’s plot covariate effects, .e hazard ratios, frailty terms sffit model:  models section might extended model data present different cluster structures hierarchical levels, e.g. players team, club, league etc.","code":"## prepare exposure data set and create seasonb column df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                              person_id     = \"player_name\",                              date          = \"year\",                              time_expo     = \"minutes_played\") |>    mutate(seasonb = date2season(date))  ## add more info to injd data frame (based on exposure data) injd <- injd |>    mutate(seasonb = date2season(tstart)) |>    left_join(df_exposures, by = c(\"person_id\" = \"person_id\",                                   \"seasonb\"  = \"seasonb\")) |>    mutate(positionb = factor(str_split_i(position, \"_\", 1)),          injury_severity = addNA(injury_severity),          days_lost = lag(days_lost, default = 0),          games_lost = lag(games_lost, default = 0),          prev_inj = lag(enum, default = 0)) injd <- injd |>    mutate(tstop_minPlay = ifelse(tstop_minPlay == tstart_minPlay,                                 tstop_minPlay + 1, tstop_minPlay)) |>    filter(positionb != \"Goalkeeper\") |>    droplevels() sffit <- coxph(Surv(tstart_minPlay, tstop_minPlay, status) ~                   age + days_lost +                   frailty(person_id, distribution = \"gamma\"), data = injd) sffit2 <- coxme(Surv(tstart_minPlay, tstop_minPlay, status) ~                    age + days_lost + (1 | person_id), data = injd) summary(sffit) #> Call: #> coxph(formula = Surv(tstart_minPlay, tstop_minPlay, status) ~  #>     age + days_lost + frailty(person_id, distribution = \"gamma\"),  #>     data = injd) #>  #>   n= 104, number of events= 81  #>  #>                           coef     se(coef) se2 Chisq  DF    p       #> age                        0.32711 0.349215       0.88  1.00 3.5e-01 #> days_lost                 -0.01471 0.009955       2.18  1.00 1.4e-01 #> frailty(person_id, distri                       147.07 13.74 2.0e-24 #>  #>           exp(coef) exp(-coef) lower .95 upper .95 #> age          1.3870      0.721    0.6995     2.750 #> days_lost    0.9854      1.015    0.9664     1.005 #>  #> Iterations: 10 outer, 184 Newton-Raphson #>      Variance of random effect= 2.272003   I-likelihood = -180  #> Degrees of freedom for terms= -4.2 -0.5 13.7  #> Concordance= 0.856  (se = 0.026 ) #> Likelihood ratio test= 104.1  on 9.08 df,   p=<2e-16 summary(sffit2) #> Mixed effects coxme model #>  Formula: Surv(tstart_minPlay, tstop_minPlay, status) ~ age + days_lost +      (1 | person_id)  #>     Data: injd  #>  #>   events, n = 81, 104 #>  #> Random effects: #>       group  variable       sd variance #> 1 person_id Intercept 2.744821 7.534042 #>                    Chisq    df         p   AIC   BIC #> Integrated loglik  39.88  3.00 1.130e-08 33.88 26.70 #>  Penalized loglik 117.21 21.17 2.664e-15 74.87 24.17 #>  #> Fixed effects: #>                coef exp(coef)  se(coef)     z      p #> age        0.199545  1.220847  0.186992  1.07 0.2859 #> days_lost -0.020513  0.979696  0.009113 -2.25 0.0244 ## plot p1, for covariate effects ## a trick to not to plot frailties as HRs sffit_aux <- sffit attr(sffit_aux$terms, \"dataClasses\") <-    attr(sffit_aux$terms, \"dataClasses\")[1:3]  p1 <- ggforest(sffit_aux, data = injd,                fontsize = 0.8) ## plot p2, for frailty terms df_frailties <- data.frame(person_id = levels(injd$person_id),                             frail = sffit$frail,                            expfrail = exp(sffit$frail),                            col = factor(ifelse(sffit$frail >= 0, 1, 0))) p2 <- ggplot(df_frailties) +   geom_segment(aes(x = person_id, xend = person_id,                     y = 1, yend = expfrail, col = col)) +   geom_hline(yintercept = 1) +    geom_text(aes(x = person_id, y = expfrail + 0.12*sign(frail), label = person_id),             size = 3, angle = 30) +   scale_color_manual(name = \"\", values = c(\"darkred\", \"dodgerblue\")) df_frailties <- data.frame(person_id = levels(injd$person_id),                             frail = sffit$frail,                            expfrail = exp(sffit$frail),                            col = factor(ifelse(sffit$frail >= 0, 1, 0))) p2 <- ggplot(df_frailties) +   geom_segment(aes(x = person_id, xend = person_id,                    y = 1, yend = expfrail, col = col)) +   geom_hline(yintercept = 1) +    geom_text(aes(x = person_id, y = expfrail + 0.12*sign(frail), label = person_id),             size = 3, angle = 15) +   scale_color_manual(name = \"\", values = c(\"darkred\", \"dodgerblue\")) +    scale_x_discrete(expand = c(0.08, 0)) +   scale_y_continuous(expand = c(0.2, 0)) +    ylab(expression(exp*\"(frail)\")) + xlab(\"Player\") +   ggtitle(\"Frailties\") +    theme(legend.position = \"none\",         axis.ticks.x = element_blank(),         axis.text.x = element_blank(),         axis.title = element_text(size = rel(1.2)),         axis.text.y = element_text(size = rel(1.2)),         plot.title = element_text(size = rel(1.4), hjust = 0.5)) grid.arrange(p1, p2, nrow = 2, heights = c(1, 1.3))"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"starting-point","dir":"Articles","previous_headings":"","what":"Starting point","title":"Prepare Sports Injury Data","text":"Data can collected several ways several means. conventional manner collect store data events occur. , regard sports medicine, common store injury records one hand, side, data related training competitions/matches (exposure time among others) separate table. Following , consider user raw data two separate data sets call injury exposure data, respectively1.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"prepare-and-standardize-injury-and-exposure-data","dir":"Articles","previous_headings":"","what":"1) prepare and standardize injury and exposure data","title":"Prepare Sports Injury Data","text":"Thus early task tidy two sources data. example data sets consider raw_df_injuries raw_df_exposures data sets available injurytools package. data Liverpool Football Club male’s first team players two consecutive seasons, 2017-2018 2018-2019, scrapped https://www.transfermarkt.com/ website: standardize key column names : player (subject) identifier, dates injury recovery (), training/match/season date amount time exposure. set proper names formats means prepare_inj() prepare_exp()2. suggest collecting exposure time fine scale possible, .e. minutes desired unit total time spent training participating competitions/matches. However, units “seasons”, :","code":"head(raw_df_injuries) #> # A tibble: 6 × 11 #>   player_name player_id season from       until      days_lost games_lost injury #>   <fct>       <fct>     <fct>  <date>     <date>         <dbl>      <dbl> <chr>  #> 1 adam-lalla… 43530     17/18  2017-07-31 2017-11-25       117         21 Hamst… #> 2 adam-lalla… 43530     17/18  2018-03-31 2018-05-13        43         11 Hamst… #> 3 adam-lalla… 43530     18/19  2018-09-04 2018-10-19        45          7 Groin… #> 4 adam-lalla… 43530     18/19  2018-11-09 2018-12-04        25          4 Knock  #> 5 adam-lalla… 43530     18/19  2019-01-06 2019-01-18        12          2 Knock  #> 6 adam-lalla… 43530     18/19  2019-04-01 2019-05-31        60         10 Knock  #> # ℹ 3 more variables: injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> head(raw_df_exposures) #>               player_name player_id season year matches_played minutes_played #> 1            adam-lallana     43530  17/18 2017             12            236 #> 2            adam-lallana     43530  18/19 2018             13            464 #> 3          alberto-moreno    207917  17/18 2017             16           1264 #> 4 alex-oxlade-chamberlain    143424  17/18 2017             32           1483 #> 5                 alisson    105470  18/19 2018             38           3420 #> 6        andrew-robertson    234803  17/18 2017             22           1943 #>      liga    club_name club_id age height place citizenship #> 1 premier fc-liverpool      31  29   1.72  <NA>        <NA> #> 2 premier fc-liverpool      31  30   1.72  <NA>        <NA> #> 3 premier fc-liverpool      31  25   1.71  <NA>        <NA> #> 4 premier fc-liverpool      31  24   1.75  <NA>        <NA> #> 5 premier fc-liverpool      31  26   1.91  <NA>        <NA> #> 6 premier fc-liverpool      31  23   1.78  <NA>        <NA> #>                     position  foot goals assists yellows reds #> 1 Midfield_AttackingMidfield  both     0       0       1    0 #> 2 Midfield_AttackingMidfield  both     0       0       1    0 #> 3          Defender_LeftBack  left     0       0       1    0 #> 4   Midfield_CentralMidfield right     3       7       3    0 #> 5                 Goalkeeper right     0       0       1    0 #> 6          Defender_LeftBack  left     1       5       2    0 df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            person_id      = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\") df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             person_id     = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\") ## a possible way for the case where each row in exposure data correspond to a ## season and there is no more information about time of exposure raw_df_exposures$time_expo_aux <- 1  df_exposures2 <- prepare_exp(df_exposures0 = raw_df_exposures,                              person_id     = \"player_name\",                              date          = \"year\",                              time_expo     = \"time_expo_aux\")  ## note 'tstart_s' and 'tstop_s' columns injd <-  prepare_all(data_exposures = df_exposures2,                      data_injuries  = df_injuries,                      exp_unit = \"seasons\") head(injd) #> # A tibble: 6 × 19 #>   person_id    t0         tf         date_injured date_recovered tstart     #>   <fct>        <date>     <date>     <date>       <date>         <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 #> # ℹ 13 more variables: tstop <date>, tstart_s <dbl>, tstop_s <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct>"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"integrate-both-sources-of-data","dir":"Articles","previous_headings":"","what":"2) integrate both sources of data","title":"Prepare Sports Injury Data","text":", apply prepare_all() data sets tidied . important specify unit exposure, .e. exp_unit argument, must one “minutes”, “hours”, “days”, “matches_num”, “matches_minutes”, “activity_days” “seasons”. outcome prepared data set, structured suitable way ready use statistical modelling approaches. data set always columns listed (standardized columns created function), well (optional) sports-related variables. person_id: player identifier. t0 tf: follow-period corresponding player, .e. player’s first last dates observed (value player). date_injured date_recovered: dates injury recovery corresponding observation (). Otherwise NA. tstart tstop: beginning ending dates corresponding interval observation risk injury. tstart_xand tstop_x: beginning ending times corresponding interval observation risk injury (depends unit exposure time specified). status: injury (event) indicator. enum: integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk. days_lost: number days lost due injury occurred tstop/date_injured (; otherwise 0), .e. date_recovered - date_injured days. example first row injd corresponds player Adam Lallana, risk set starts 2017-07-01 ends 2017-07-31, played 236 minutes, got firstly (enum = 1) injured (status = 1). second row corresponds risk set injured second injury (enum = 2), set starts fully recovered 2017-11-23 finishes suffered another hamstring injury3.","code":"injd <-  prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   person_id    t0         tf         date_injured date_recovered tstart     #>   <fct>        <date>     <date>     <date>       <date>         <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 #> # ℹ 13 more variables: tstop <date>, tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> # injd |>  #   group_by(player) |>  #   slice(1, n())"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"the-prepared-data-set-an-injd-object","dir":"Articles","previous_headings":"","what":"The prepared data set, an injd object","title":"Prepare Sports Injury Data","text":"final data set ’s R object class injd, following attribute: unit_exposure: character indicating unit exposure time used object. extract attribute unit_exposure, type:","code":"class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" attr(injd, \"unit_exposure\") #> [1] \"matches_minutes\""},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"a-quick-glance","dir":"Articles","previous_headings":"","what":"A quick glance","title":"Visualize Sports Injury Data","text":"Let’s count many injuries (red crosses graph) occurred severe (length thick black line). Overall Injury incidence injury burden reported 100 player-matches Overall per type injury Injury incidence injury burden reported 100 player-matches Let’s plot information shown second table risk matrix displays injury incidence injury burden.","code":"gg_photo(injd,           title   = \"Overview of injuries:\\nLiverpool FC 1st male team during 2017-2018 and 2018-2019 seasons\",          by_date = \"2 month\",           fix     = TRUE) +      ## plus some lines of ggplot2 code..   xlab(\"Follow-up date\") + ylab(\"Players\") + labs(caption = \"source: transfermarkt.com\") +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 22),         axis.text.x.bottom = element_text(size = 13, angle = 20, hjust = 1),         axis.text.y.left   = element_text(size = 12),         axis.title.x       = element_text(size = 20, face = \"bold\", vjust = -1),         axis.title.y       = element_text(size = 20, face = \"bold\", vjust = 1.8),         legend.text        = element_text(size = 20),         plot.caption       = element_text(face = \"italic\", size = 12, colour = \"gray10\")) # warnings set to FALSE df_summary        <- calc_summary(injd)  df_summary_perinj <- calc_summary(injd, by = \"injury_type\")  # injds df_summary |>    mutate(incidence_new = paste0(round(incidence, 2), \" (\", round(incidence_lower, 2), \",\", round(incidence_upper, 2), \")\"),          burden_new    = paste0(round(burden, 2), \" (\", round(burden_lower, 2), \",\", round(burden_upper, 2), \")\")) |>    dplyr::select(2, 7, 1, incidence_new, burden_new) |>    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")  df_summary_perinj |>    mutate(incidence_new = paste0(round(incidence, 2), \" (\", round(incidence_lower, 2), \",\", round(incidence_upper, 2), \")\"),          burden_new    = paste0(round(burden, 2), \" (\", round(burden_lower, 2), \",\", round(burden_upper, 2), \")\")) |>    dplyr::select(1:2, 9, 4, incidence_new, burden_new) |>    kable(col.names = c(\"Type of injury\", \"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\") # warnings set to FALSE gg_riskmatrix(injd,                by = \"injury_type\",                title = \"Risk matrix\") # warnings set to FALSE palette <- c(\"#000000\", Ligament = \"#E69F00\", Muscle = \"#56B4E9\", \"#009E73\",              Unknown = \"#F0E442\", \"#0072B2\", Bone = \"#D55E00\", Concussion = \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/ theme3 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x.bottom = element_text(size = 20),                 axis.text.y.left = element_text(size = 20),                 axis.title.x = element_text(size = 15),                 axis.title.y = element_text(size = 15),                 legend.title = element_text(size = 15),                 legend.text = element_text(size = 15))  gg_riskmatrix(injd,                by = \"injury_type\",                title = \"Risk matrix\") +   scale_fill_manual(name = \"Type of injury\",                     values = palette) +   guides(fill = guide_legend(override.aes = list(size = 5))) +   theme3"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"comparing-injuries-occurred-in-1718-vs--1819","dir":"Articles","previous_headings":"","what":"Comparing injuries occurred in 17/18 vs. 18/19","title":"Visualize Sports Injury Data","text":"prepare two injd objects:  Let’s compute injury summary statistics season. Season 2017/2018 Injury incidence injury burden reported 100 player-matches Season 2018/2019 Injury incidence injury burden reported 100 player-matches","code":"# warnings set to FALSE injd1 <- cut_injd(injd, datef = 2017) injd2 <- cut_injd(injd, date0 = 2018) ## Plot just for checking whether cut_injd() worked well p1 <- gg_photo(injd1, fix = TRUE, by_date = \"3 months\") p2 <- gg_photo(injd2, fix = TRUE, by_date = \"3 months\") grid.arrange(p1, p2, ncol = 2) # warnings set to FALSE df_summary1 <- calc_summary(injd1, quiet = T) df_summary2 <- calc_summary(injd2, quiet = T) ## **Season 2017/2018** df_summary1 |>    mutate(incidence_new = paste0(round(incidence, 2), \" (\", round(incidence_lower, 2), \",\", round(incidence_upper, 2), \")\"),          burden_new    = paste0(round(burden, 2), \" (\", round(burden_lower, 2), \",\", round(burden_upper, 2), \")\")) |>    dplyr::select(2, 7, 1, incidence_new, burden_new) |>    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")  ## **Season 2018/2019** df_summary2 |>    mutate(incidence_new = paste0(round(incidence, 2), \"  (\", round(incidence_lower, 2), \",\", round(incidence_upper, 2), \")\"),          burden_new    = paste0(round(burden, 2), \"  (\", round(burden_lower, 2), \",\", round(burden_upper, 2), \")\")) |>    dplyr::select(2, 7, 1, incidence_new, burden_new) |>    kable(col.names = c(\"N injuries\", \"N days lost\", \"Total expo\", \"Incidence (95% CI)\", \"Burden (95% CI)\"),         caption   = \"Injury incidence and injury burden are reported as 100 player-matches\",         align     = \"c\")"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"who-were-the-most-injured-players-and-the-most-severely-affected","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- Who were the most injured players? And the most severely affected?","title":"Visualize Sports Injury Data","text":"Player-wise statistics can computed df_summay1_pl <- calc_summary(injd1, overall = FALSE). , plot :","code":"p11 <- gg_rank(injd1, line_overall = TRUE) p12 <- gg_rank(injd1, summary_stat = \"burden\", line_overall = TRUE) p21 <- gg_rank(injd2, line_overall = TRUE) p22 <- gg_rank(injd2, summary_stat = \"burden\", line_overall = TRUE)   # grid.arrange(p11, p21, p12, p22, nrow = 2) theme2 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 26),                 axis.text.x.bottom = element_text(size = 18),                 axis.text.y.left = element_text(size = 13),                 axis.title.x = element_text(size = 11, vjust = 1),                 axis.title.y = element_text(size = 22, face = \"bold\", vjust = 1))  p11 <- p11 +    xlab(\"Injury incidence\") +    ylab(\"Player-wise incidence (injuries per 100 player-match)\") +   ggtitle(\"2017/2018 season\") +   scale_y_continuous(limits = c(0, 80)) + ## same x axis    theme2 +   theme(plot.margin = margin(0.2, 0.2, 0.2, 0.5, \"cm\")) p12 <- p12 +   xlab(\"Injury burden\") +    ylab(\"Player-wise burden (days lost per 100 player-match)\") +   scale_y_continuous(limits = c(0, 6110)) +    theme2 +   theme(plot.margin = margin(0.2, 0.2, 0.2, 0.65, \"cm\"))  p21 <- p21 +    ylab(\"Player-wise incidence (injuries per 100 player-match)\") +   ggtitle(\"2018/2019 season\") +   scale_y_continuous(limits = c(0, 80)) +    theme2  p22 <- p22 +   ylab(\"Player-wise burden (days lost per 100 player-match)\") +   scale_y_continuous(limits = c(0, 6110)) +    theme2  grid.arrange(p11, p21, p12, p22, nrow = 2)"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"which-injuries-were-more-frequent-and-more-burdensome","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- Which injuries were more frequent? And more burdensome?","title":"Visualize Sports Injury Data","text":"","code":"# warnings set to FALSE p1 <- gg_riskmatrix(injd1, by = \"injury_type\",                      title = \"Season 2017/2018\", add_contour = FALSE) p2 <- gg_riskmatrix(injd2, by = \"injury_type\",                     title = \"Season 2018/2019\", add_contour = FALSE)  # Print both plots side by side # grid.arrange(p1, p2, nrow = 1) palette <- c(\"#000000\", Ligament = \"#E69F00\", Muscle = \"#56B4E9\", \"#009E73\",              Unknown = \"#F0E442\", \"#0072B2\", Bone = \"#D55E00\", Concussion = \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/ theme3 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x.bottom = element_text(size = 18),                 axis.text.y.left = element_text(size = 18),                 axis.title.x = element_text(size = 18),                 axis.title.y = element_text(size = 18),                 legend.title = element_text(size = 15),                 legend.text = element_text(size = 15))  ## Plot p1 <- gg_riskmatrix(injd1, by = \"injury_type\",                      title = \"Season 2017/2018\", add_contour = T,                     cont_max_x = 5.2, cont_max_y = 125, ## after checking the data                     bins = 10)  p2 <- gg_riskmatrix(injd2, by = \"injury_type\",                     title = \"Season 2018/2019\", add_contour = T,                      cont_max_x = 5.2, cont_max_y = 125,                     bins = 10)  p1 <- p1 +   scale_x_continuous(limits = c(-0.05, 5.2)) +   scale_y_continuous(limits = c(-0.05, 125)) +    scale_fill_manual(name = \"Type of injury\",                     values = palette) +    guides(fill = guide_legend(override.aes = list(size = 5))) +   theme3 p2 <- p2 +   scale_x_continuous(limits = c(-0.5, 5.2)) +   scale_y_continuous(limits = c(-0.5, 125)) +    scale_fill_manual(name = \"Type of injury\",                     values = palette) + # keep the same color coding   guides(fill = guide_legend(override.aes = list(size = 5))) +   theme3  grid.arrange(p1, p2, ncol = 2,               top = textGrob(\"Risk matrices\", gp = gpar(fontsize = 26, font = 2))) ## for the main title"},{"path":"https://lzumeta.github.io/injurytools/articles/visualize-injury-data.html","id":"how-many-players-were-injured-in-each-month","dir":"Articles","previous_headings":"Comparing injuries occurred in 17/18 vs. 18/19","what":"- How many players were injured in each month?","title":"Visualize Sports Injury Data","text":"create bar plots, bar representing monthly prevalence2.","code":"gg_prevalence(injd, time_period = \"monthly\",               line_mean = TRUE) theme4 <- theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 20),                 axis.text.x = element_text(size = 13.5),                 axis.text.y = element_text(size = 18),                 legend.title = element_text(size = 20),                 legend.text = element_text(size = 20),                 strip.text = element_text(size = 20))   gg_prevalence(injd, time_period = \"monthly\",               line_mean = TRUE,               title = \"Monthly prevalence of sports injuries\") +    theme4 gg_prevalence(injd, time_period = \"monthly\",               by = \"injury_type\", line_mean = TRUE) palette2 <- c(\"seagreen3\", \"#000000\", Ligament = \"#E69F00\", Muscle = \"#56B4E9\", \"#009E73\",               Unknown = \"#F0E442\", \"#0072B2\", Bone = \"#D55E00\", Concussion = \"#CC79A7\") # source of the palette: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/   gg_prevalence(injd, time_period = \"monthly\",                by = \"injury_type\", line_mean = TRUE,               title = \"Monthly prevalence of each type of sports injuries\") +   scale_fill_manual(name = \"Type of injury\",                      values = palette2) +    theme4"},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lore Zumeta Olaskoaga. Author, maintainer. Dae-Jin Lee. Contributor.","code":""},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zumeta Olaskoaga L (2024). injurytools: Toolkit Sports Injury Illness Data Analysis. R package version 1.0.3,  https://lzumeta.github.io/injurytools/, https://github.com/lzumeta/injurytools.","code":"@Manual{,   title = {injurytools: A Toolkit for Sports Injury and Illness Data Analysis},   author = {Lore {Zumeta Olaskoaga}},   year = {2024},   note = {R package version 1.0.3,  https://lzumeta.github.io/injurytools/},   url = {https://github.com/lzumeta/injurytools}, }"},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Toolkit for Sports Injury and Illness Data Analysis","text":"injurytools package designed field Sports Medicine. simplifies data analysis workflow providing convenience functions handy tools sports injury illness data. functions can classified : () sports injury illness data preparation, (b) descriptive analyses (c) data visualization routines. analyses, estimation risk injury/illness (sports-related health problem) covariate effects, can performed outside injurytools, whether event health problem viewed count time--event data. get overview package, see Articles section. practice, package can automate specific descriptive reports routinely generated sports injury illness surveillance.","code":""},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Toolkit for Sports Injury and Illness Data Analysis","text":"install CRAN: install current version GitHub:","code":"install.packages(\"injurytools\") devtools::install_github(\"lzumeta/injurytools\")"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Toolkit for Sports Injury and Illness Data Analysis","text":"Functions data preparation start prepare_*(), estimating epidemiological measures start calc_*(), data visualization gg_*(). outlines glance injurytools can help get comprehensive picture sports injury illness data:","code":"library(injurytools) library(ggplot2)  gg_photo(injd,           title   = \"Overview of injuries:\\nLiverpool FC 1st male team during 2017-2018 and 2018-2019 seasons\",          by_date = \"2 month\") +   ## plus some lines of ggplot2 code..   xlab(\"Follow-up date\") + ylab(\"Players\") +    labs(caption = \"source: transfermarkt.com\") +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 22),         axis.text.x.bottom = element_text(size = 13, angle = 20, hjust = 1),         axis.text.y.left   = element_text(size = 12),         axis.title.x = element_text(size = 20, face = \"bold\", vjust = -1),         axis.title.y = element_text(size = 20, face = \"bold\", vjust = 1.8),         legend.text  = element_text(size = 20),         plot.caption = element_text(face = \"italic\", size = 12, colour = \"gray10\"))"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"A Toolkit for Sports Injury and Illness Data Analysis","text":"problems package, find bugs, suggestions improvements, please feel free open GitHub issue touch us directly via email. also welcome feedback.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate case burden rate — calc_burden","title":"Calculate case burden rate — calc_burden","text":"Calculate case burden rate sports-related health problem (e.g. disease, injury) cohort.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate case burden rate — calc_burden","text":"","code":"calc_burden(   injd,   by = NULL,   overall = TRUE,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   se = TRUE,   conf_level = 0.95,   scale = TRUE,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate case burden rate — calc_burden","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE. method Method estimate incidence (burden) rate. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. se Logical, whether calculate confidence interval related rate. conf_level Confidence level (defaults 0.95). scale Logical, whether transform incidence burden rates output according unit exposure (defaults TRUE). quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate case burden rate — calc_burden","text":"case burden rate. Either numeric value (overall TRUE) data frame indicating case burden rate per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate case burden rate — calc_burden","text":"Bahr R., Clarsen B., & Ekstrand J. (2018). focus burden injuries illnesses, just incidence. British Journal Sports Medicine, 52(16), 1018–1021. https://doi.org/10.1136/bjsports-2017-098160 Waldén M., Mountjoy M., McCall ., Serner ., Massey ., Tol J. L., ... & Andersen T. E. (2023). Football-specific extension IOC consensus statement: methods recording reporting epidemiological data injury illness sport 2020. British journal sports medicine.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_burden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate case burden rate — calc_burden","text":"","code":"calc_burden(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 1 × 6 #>   totalexpo ndayslost burden burden_sd burden_lower burden_upper #>       <dbl>     <dbl>  <dbl>     <dbl>        <dbl>        <dbl> #> 1     74690      2049   247.      5.45         236.         258. calc_burden(injd, overall = FALSE) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 28 × 7 #>    person_id      totalexpo ndayslost burden burden_sd burden_lower burden_upper #>    <fct>              <dbl>     <dbl>  <dbl>     <dbl>        <dbl>        <dbl> #>  1 adam-lallana         700       302 3883.     223.         3445.        4321.  #>  2 alberto-moreno      1264        50  356.      50.3         257.         455.  #>  3 alex-oxlade-c…      1483       316 1918.     108.         1706.        2129.  #>  4 alisson             3420         0    0        0             0            0   #>  5 andrew-robert…      5162        22   38.4      8.18         22.3         54.4 #>  6 daniel-sturri…       927       122 1184.     107.          974.        1395.  #>  7 danny-ings           265         0    0        0             0            0   #>  8 dejan-lovren        3109       160  463.      36.6         391.         535.  #>  9 divock-origi         366         5  123.      55.0          15.2        231.  #> 10 dominic-solan…       581         0    0        0             0            0   #> # ℹ 18 more rows calc_burden(injd, by = \"injury_type\") #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 5 × 7 #>   injury_type totalexpo ndayslost burden burden_sd burden_lower burden_upper #>   <chr>           <dbl>     <dbl>  <dbl>     <dbl>        <dbl>        <dbl> #> 1 Bone            74690       173   20.8      1.58         17.7         24.0 #> 2 Concussion      74690       213   25.7      1.76         22.2         29.1 #> 3 Ligament        74690       596   71.8      2.94         66.1         77.6 #> 4 Muscle          74690       735   88.6      3.27         82.2         95.0 #> 5 Unknown         74690       332   40.0      2.20         35.7         44.3"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the exposure time — calc_exposure","title":"Calculate the exposure time — calc_exposure","text":"Calculate time exposure athlete, entire cohort athletes, risk sport-related health problem.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the exposure time — calc_exposure","text":"","code":"calc_exposure(   injd,   by = NULL,   overall = TRUE,   time_period = NULL,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the exposure time — calc_exposure","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE. time_period TOWRITE THINK!!!! quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the exposure time — calc_exposure","text":"total exposure time. Either numeric value (overall TRUE) data frame indicating total exposure time athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the exposure time — calc_exposure","text":"","code":"calc_exposure(injd) #> totalexpo  #>     74690  calc_exposure(injd, overall = FALSE) #> # A tibble: 28 × 2 #>    person_id               totalexpo #>    <fct>                       <dbl> #>  1 adam-lallana                  700 #>  2 alberto-moreno               1264 #>  3 alex-oxlade-chamberlain      1483 #>  4 alisson                      3420 #>  5 andrew-robertson             5162 #>  6 daniel-sturridge              927 #>  7 danny-ings                    265 #>  8 dejan-lovren                 3109 #>  9 divock-origi                  366 #> 10 dominic-solanke               581 #> # ℹ 18 more rows calc_exposure(injd, by = \"injury_type\") #> # A tibble: 5 × 2 #>   injury_type totalexpo #>   <chr>           <dbl> #> 1 Bone            74690 #> 2 Concussion      74690 #> 3 Ligament        74690 #> 4 Muscle          74690 #> 5 Unknown         74690"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate case incidence rate — calc_incidence","title":"Calculate case incidence rate — calc_incidence","text":"Calculate case incidence rate sports-related health problem (e.g. disease, injury) cohort.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate case incidence rate — calc_incidence","text":"","code":"calc_incidence(   injd,   by = NULL,   overall = TRUE,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   se = TRUE,   conf_level = 0.95,   scale = TRUE,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate case incidence rate — calc_incidence","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE. method Method estimate incidence (burden) rate. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. se Logical, whether calculate confidence interval related rate. conf_level Confidence level (defaults 0.95). scale Logical, whether transform incidence burden rates output according unit exposure (defaults TRUE). quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate case incidence rate — calc_incidence","text":"case incidence rate. Either numeric value (overall TRUE) data frame indicating case incidence rate per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate case incidence rate — calc_incidence","text":"Bahr R., Clarsen B., & Ekstrand J. (2018). focus burden injuries illnesses, just incidence. British Journal Sports Medicine, 52(16), 1018–1021. https://doi.org/10.1136/bjsports-2017-098160 Waldén M., Mountjoy M., McCall ., Serner ., Massey ., Tol J. L., ... & Andersen T. E. (2023). Football-specific extension IOC consensus statement: methods recording reporting epidemiological data injury illness sport 2020. British journal sports medicine.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate case incidence rate — calc_incidence","text":"","code":"calc_incidence(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 1 × 6 #>   totalexpo ncases incidence incidence_sd incidence_lower incidence_upper #>       <dbl>  <dbl>     <dbl>        <dbl>           <dbl>           <dbl> #> 1     74690     82      9.88         1.09            7.74            12.0 calc_incidence(injd, overall = FALSE) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 28 × 7 #>    person_id             totalexpo ncases incidence incidence_sd incidence_lower #>    <fct>                     <dbl>  <dbl>     <dbl>        <dbl>           <dbl> #>  1 adam-lallana                700      6     77.1         31.5            15.4  #>  2 alberto-moreno             1264      1      7.12         7.12           -6.84 #>  3 alex-oxlade-chamberl…      1483      1      6.07         6.07           -5.83 #>  4 alisson                    3420      0      0            0               0    #>  5 andrew-robertson           5162      5      8.72         3.90            1.08 #>  6 daniel-sturridge            927      3     29.1         16.8            -3.83 #>  7 danny-ings                  265      0      0            0               0    #>  8 dejan-lovren               3109      6     17.4          7.09            3.47 #>  9 divock-origi                366      1     24.6         24.6           -23.6  #> 10 dominic-solanke             581      0      0            0               0    #> # ℹ 18 more rows #> # ℹ 1 more variable: incidence_upper <dbl> calc_incidence(injd, by = \"injury_type\") #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 5 × 7 #>   injury_type totalexpo ncases incidence incidence_sd incidence_lower #>   <chr>           <dbl>  <dbl>     <dbl>        <dbl>           <dbl> #> 1 Bone            74690     11      1.33        0.400           0.542 #> 2 Concussion      74690     16      1.93        0.482           0.983 #> 3 Ligament        74690      9      1.08        0.361           0.376 #> 4 Muscle          74690     25      3.01        0.602           1.83  #> 5 Unknown         74690     21      2.53        0.552           1.45  #> # ℹ 1 more variable: incidence_upper <dbl> calc_incidence(injd, by = \"injury_type\", scale = FALSE) #> # A tibble: 5 × 7 #>   injury_type totalexpo ncases incidence incidence_sd incidence_lower #>   <chr>           <dbl>  <dbl>     <dbl>        <dbl>           <dbl> #> 1 Bone            74690     11  0.000147    0.0000444       0.0000602 #> 2 Concussion      74690     16  0.000214    0.0000536       0.000109  #> 3 Ligament        74690      9  0.000120    0.0000402       0.0000418 #> 4 Muscle          74690     25  0.000335    0.0000669       0.000204  #> 5 Unknown         74690     21  0.000281    0.0000614       0.000161  #> # ℹ 1 more variable: incidence_upper <dbl>"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_iqr_dayslost.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the interquartile range days lost — calc_iqr_dayslost","title":"Calculate the interquartile range days lost — calc_iqr_dayslost","text":"Calculate interquartile range days lost due sports-related health problem (e.g. disease, injury) cohort.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_iqr_dayslost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the interquartile range days lost — calc_iqr_dayslost","text":"","code":"calc_iqr_dayslost(injd, by = NULL, overall = TRUE)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_iqr_dayslost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the interquartile range days lost — calc_iqr_dayslost","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_iqr_dayslost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the interquartile range days lost — calc_iqr_dayslost","text":"interquartile range days lost. Either numeric value (overall TRUE) data frame indicating interquartile range days lost per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_iqr_dayslost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the interquartile range days lost — calc_iqr_dayslost","text":"","code":"calc_iqr_dayslost(injd) #> qt25_dayslost qt75_dayslost  #>             6            25  calc_iqr_dayslost(injd, overall = FALSE) #> # A tibble: 23 × 3 #>    person_id               qt25_dayslost qt75_dayslost #>    <fct>                           <dbl>         <dbl> #>  1 adam-lallana                     29.5          56.2 #>  2 alberto-moreno                   50            50   #>  3 alex-oxlade-chamberlain         316           316   #>  4 andrew-robertson                  2             4   #>  5 daniel-sturridge                 33.5          53   #>  6 dejan-lovren                     10            32.2 #>  7 divock-origi                      5             5   #>  8 emre-can                         68            68   #>  9 fabinho                           5.5          10   #> 10 georginio-wijnaldum               5.5          12.2 #> # ℹ 13 more rows calc_iqr_dayslost(injd, by = \"injury_type\") #> # A tibble: 5 × 3 #>   injury_type qt25_dayslost qt75_dayslost #>   <fct>               <dbl>         <dbl> #> 1 Bone                 4.5           16.5 #> 2 Concussion           5.75          14.5 #> 3 Ligament             7             54   #> 4 Muscle              12             36   #> 5 Unknown              4             18"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_mean_dayslost.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean days lost — calc_mean_dayslost","title":"Calculate the mean days lost — calc_mean_dayslost","text":"Calculate mean days lost due sports-related health problem (e.g. disease, injury) cohort.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_mean_dayslost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean days lost — calc_mean_dayslost","text":"","code":"calc_mean_dayslost(injd, by = NULL, overall = TRUE)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_mean_dayslost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean days lost — calc_mean_dayslost","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_mean_dayslost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean days lost — calc_mean_dayslost","text":"mean days lost. Either numeric value (overall TRUE) data frame indicating mean days lost per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_mean_dayslost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean days lost — calc_mean_dayslost","text":"","code":"calc_mean_dayslost(injd) #> mean_dayslost  #>       24.9878  calc_mean_dayslost(injd, overall = FALSE) #> # A tibble: 23 × 2 #>    person_id               mean_dayslost #>    <fct>                           <dbl> #>  1 adam-lallana                    50.3  #>  2 alberto-moreno                  50    #>  3 alex-oxlade-chamberlain        316    #>  4 andrew-robertson                 4.4  #>  5 daniel-sturridge                40.7  #>  6 dejan-lovren                    26.7  #>  7 divock-origi                     5    #>  8 emre-can                        68    #>  9 fabinho                          7.33 #> 10 georginio-wijnaldum              8.5  #> # ℹ 13 more rows calc_mean_dayslost(injd, by = \"injury_type\") #> # A tibble: 5 × 2 #>   injury_type mean_dayslost #>   <fct>               <dbl> #> 1 Bone                 15.7 #> 2 Concussion           13.3 #> 3 Ligament             66.2 #> 4 Muscle               29.4 #> 5 Unknown              15.8"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_median_dayslost.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the median days lost — calc_median_dayslost","title":"Calculate the median days lost — calc_median_dayslost","text":"Calculate median days lost due sports-related health problem (e.g. disease, injury).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_median_dayslost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the median days lost — calc_median_dayslost","text":"","code":"calc_median_dayslost(injd, by = NULL, overall = TRUE)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_median_dayslost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the median days lost — calc_median_dayslost","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_median_dayslost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the median days lost — calc_median_dayslost","text":"median days lost. Either numeric value (overall TRUE) data frame indicating median days lost per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_median_dayslost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the median days lost — calc_median_dayslost","text":"","code":"calc_median_dayslost(injd) #> median_dayslost  #>              12  calc_median_dayslost(injd, overall = FALSE) #> # A tibble: 23 × 2 #>    person_id               median_dayslost #>    <fct>                             <dbl> #>  1 adam-lallana                         44 #>  2 alberto-moreno                       50 #>  3 alex-oxlade-chamberlain             316 #>  4 andrew-robertson                      3 #>  5 daniel-sturridge                     51 #>  6 dejan-lovren                         17 #>  7 divock-origi                          5 #>  8 emre-can                             68 #>  9 fabinho                               9 #> 10 georginio-wijnaldum                   7 #> # ℹ 13 more rows calc_median_dayslost(injd, by = \"injury_type\") #> # A tibble: 5 × 2 #>   injury_type median_dayslost #>   <fct>                 <dbl> #> 1 Bone                    9   #> 2 Concussion             10.5 #> 3 Ligament               28   #> 4 Muscle                 21   #> 5 Unknown                 7"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ncases.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of cases — calc_ncases","title":"Calculate number of cases — calc_ncases","text":"Calculate number sports-related cases (e.g. injuries) occurred cohort period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ncases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of cases — calc_ncases","text":"","code":"calc_ncases(injd, by = NULL, overall = TRUE)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ncases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of cases — calc_ncases","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ncases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of cases — calc_ncases","text":"number cases. Either numeric value (overall TRUE) data frame indicating number cases per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ncases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of cases — calc_ncases","text":"","code":"calc_ncases(injd) #> ncases  #>     82  calc_ncases(injd, overall = FALSE) #> # A tibble: 28 × 2 #>    person_id               ncases #>    <fct>                    <dbl> #>  1 adam-lallana                 6 #>  2 alberto-moreno               1 #>  3 alex-oxlade-chamberlain      1 #>  4 alisson                      0 #>  5 andrew-robertson             5 #>  6 daniel-sturridge             3 #>  7 danny-ings                   0 #>  8 dejan-lovren                 6 #>  9 divock-origi                 1 #> 10 dominic-solanke              0 #> # ℹ 18 more rows calc_ncases(injd, by = \"injury_type\") #> # A tibble: 5 × 2 #>   injury_type ncases #>   <fct>        <dbl> #> 1 Bone            11 #> 2 Concussion      16 #> 3 Ligament         9 #> 4 Muscle          25 #> 5 Unknown         21"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ndayslost.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of days lost — calc_ndayslost","title":"Calculate number of days lost — calc_ndayslost","text":"Calculate number days lost due sports-related health problem (e.g. injuries) cohort period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ndayslost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of days lost — calc_ndayslost","text":"","code":"calc_ndayslost(injd, by = NULL, overall = TRUE)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ndayslost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of days lost — calc_ndayslost","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ndayslost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of days lost — calc_ndayslost","text":"number days lost. Either numeric value (overall TRUE) data frame indicating number cases per athlete.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_ndayslost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of days lost — calc_ndayslost","text":"","code":"calc_ndayslost(injd) #> ndayslost  #>      2049  calc_ndayslost(injd, overall = FALSE) #> # A tibble: 28 × 2 #>    person_id               ndayslost #>    <fct>                       <dbl> #>  1 adam-lallana                  302 #>  2 alberto-moreno                 50 #>  3 alex-oxlade-chamberlain       316 #>  4 alisson                         0 #>  5 andrew-robertson               22 #>  6 daniel-sturridge              122 #>  7 danny-ings                      0 #>  8 dejan-lovren                  160 #>  9 divock-origi                    5 #> 10 dominic-solanke                 0 #> # ℹ 18 more rows calc_ndayslost(injd, by = \"injury_type\") #> # A tibble: 5 × 2 #>   injury_type ndayslost #>   <fct>           <dbl> #> 1 Bone              173 #> 2 Concussion        213 #> 3 Ligament          596 #> 4 Muscle            735 #> 5 Unknown           332"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate prevalence proportion — calc_prevalence","title":"Calculate prevalence proportion — calc_prevalence","text":"Calculate prevalence proportion injured athletes proportion non-injured (available) athletes cohort, monthly season basis. information type injury may specified injury-specific prevalences reported according variable.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate prevalence proportion — calc_prevalence","text":"","code":"calc_prevalence(injd, time_period = c(\"monthly\", \"season\"), by = NULL)"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate prevalence proportion — calc_prevalence","text":"injd Prepared data. injd object. time_period Character. One \"monthly\" \"season\", specifying periodicity according calculate proportions available injured athletes. Character specifying name column basis classify injuries calculate proportions injured athletes. Defaults NULL.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate prevalence proportion — calc_prevalence","text":"data frame containing one row combination season, month (optionally) injury type (specified, variable two categories: Available Injured). Plus, three columns, specifying proportion athletes (prop) satisfying corresponding row's combination values, .e. prevalence, many athletes injured moment type injury corresponding row (n), many athletes time cohort (n_athlete). See Note section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate prevalence proportion — calc_prevalence","text":"specified (NULL), may happen athlete one month suffers two different types injuries. example, muscle ligament injury. case, two injuries contribute proportions muscle ligament injuries month, resulting overall proportion exceeds 100%. Besides, athletes Available category suffer injury moment (season-month), , healthy time period lasted.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate prevalence proportion — calc_prevalence","text":"Bahr R, Clarsen B, Derman W, et al. International Olympic Committee consensus statement: methods recording reporting epidemiological data injury illness sport 2020 (including STROBE Extension Sport Injury Illness Surveillance (STROBE-SIIS)) British Journal Sports Medicine 2020; 54:372-389. Nielsen RO, Debes-Kristensen K, Hulme , et al. prevalence measures better incidence measures sports injury research? British Journal Sports Medicine 2019; 54:396-397.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_prevalence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate prevalence proportion — calc_prevalence","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  calc_prevalence(injd, time_period = \"monthly\", by = \"injury_type\") #> # A tibble: 98 × 6 #>    season           month status         n n_athlete  prop #>    <fct>            <fct> <fct>      <int>     <int> <dbl> #>  1 season 2017/2018 Jul   Available     21        23  91.3 #>  2 season 2017/2018 Jul   Muscle         2        23   8.7 #>  3 season 2017/2018 Aug   Available     18        23  78.3 #>  4 season 2017/2018 Aug   Muscle         3        23  13   #>  5 season 2017/2018 Aug   Unknown        2        23   8.7 #>  6 season 2017/2018 Sep   Available     22        23  95.7 #>  7 season 2017/2018 Sep   Muscle         1        23   4.3 #>  8 season 2017/2018 Oct   Available     19        23  82.6 #>  9 season 2017/2018 Oct   Concussion     1        23   4.3 #> 10 season 2017/2018 Oct   Muscle         2        23   8.7 #> # ℹ 88 more rows calc_prevalence(injd, time_period = \"monthly\") #> # A tibble: 48 × 6 #>    season           month status        n n_athlete  prop #>    <fct>            <fct> <fct>     <int>     <int> <dbl> #>  1 season 2017/2018 Jul   Available    21        23  91.3 #>  2 season 2017/2018 Jul   Injured       2        23   8.7 #>  3 season 2017/2018 Aug   Available    18        23  78.3 #>  4 season 2017/2018 Aug   Injured       5        23  21.7 #>  5 season 2017/2018 Sep   Available    22        23  95.7 #>  6 season 2017/2018 Sep   Injured       1        23   4.3 #>  7 season 2017/2018 Oct   Available    19        23  82.6 #>  8 season 2017/2018 Oct   Injured       4        23  17.4 #>  9 season 2017/2018 Nov   Available    18        23  78.3 #> 10 season 2017/2018 Nov   Injured       5        23  21.7 #> # ℹ 38 more rows calc_prevalence(injd, time_period = \"season\", by = \"injury_type\") #> # A tibble: 11 × 5 #>    season           status         n n_athlete  prop #>    <fct>            <fct>      <int>     <int> <dbl> #>  1 season 2017/2018 Available      7        23  30.4 #>  2 season 2017/2018 Concussion     3        23  13   #>  3 season 2017/2018 Ligament       4        23  17.4 #>  4 season 2017/2018 Muscle        11        23  47.8 #>  5 season 2017/2018 Unknown        8        23  34.8 #>  6 season 2018/2019 Available      2        19  10.5 #>  7 season 2018/2019 Bone          11        19  57.9 #>  8 season 2018/2019 Concussion    13        19  68.4 #>  9 season 2018/2019 Ligament       6        19  31.6 #> 10 season 2018/2019 Muscle        15        19  78.9 #> 11 season 2018/2019 Unknown       13        19  68.4 calc_prevalence(injd, time_period = \"season\") #> # A tibble: 4 × 5 #>   season           status        n n_athlete  prop #>   <fct>            <fct>     <int>     <int> <dbl> #> 1 season 2017/2018 Available     7        23  30.4 #> 2 season 2017/2018 Injured      16        23  69.6 #> 3 season 2018/2019 Available     2        19  10.5 #> 4 season 2018/2019 Injured      17        19  89.5"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate summary statistics — calc_summary","title":"Calculate summary statistics — calc_summary","text":"Calculate epidemiological summary statistics case (e.g. injury) incidence case burden (see Bahr et al. 2018), including total number cases, number days lost due event, total time exposure etc., means (widely used) Poisson method, negative binomial, zero-inflated poisson zero-inflated negative binomial, athlete overall basis.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate summary statistics — calc_summary","text":"","code":"calc_summary(   injd,   by = NULL,   overall = TRUE,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   conf_level = 0.95,   scale = TRUE,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate summary statistics — calc_summary","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. overall Logical, whether calculate overall (cohort) athlete-wise summary statistic (.e. number cases per cohort per athlete). Defaults TRUE. method Method estimate incidence (burden) rate. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. conf_level Confidence level (defaults 0.95). scale Logical, whether transform incidence burden rates output according unit exposure (defaults TRUE). quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate summary statistics — calc_summary","text":"data frame comprising overall athlete-wise epidemiological summary statistics, made following columns: totalexpo: total exposure athlete risk suffering sports-related health problem. ncases: number sports-related health problems suffered athlete overall team/cohort given period specified injd data frame. ndayslost: number days lost athlete overall team/cohort due sports-related health problem given period specified injd data frame. mean_dayslost: average number days lost (.e. ndayslost) athlete-wise overall team/cohort. median_dayslost: median number days lost (.e. ndayslost) athlete-wise overall team/cohort. qt25_dayslost qt75_dayslost: interquartile range number days lost (.e. ndayslost) athlete-wise overall team/cohort. incidence: case incidence rate, number cases per unit exposure. burden: case burden rate, number days lost per unit exposure. incidence_sd burden_sd: estimated standard deviation, specified method argument, case incidence (incidence) case burden (burden). incidence_lower burden_lower: lower bound , example, 95% confidence interval (conf_level = 0.95) case incidence (incidence) case burden (burden). incidence_upper burden_upper: (item) applies upper bound. Apart column names, may include columns depending user's specifications function: : specified argument function. percent_ncases: percentage (%) number cases type relative types cases (specified). percent_dayslost: percentage (%) number days lost cases type relative total number days lost types cases (specified).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate summary statistics — calc_summary","text":"Bahr R., Clarsen B., & Ekstrand J. (2018). focus burden injuries illnesses, just incidence. British Journal Sports Medicine, 52(16), 1018–1021. https://doi.org/10.1136/bjsports-2017-098160 Waldén M., Mountjoy M., McCall ., Serner ., Massey ., Tol J. L., ... & Andersen T. E. (2023). Football-specific extension IOC consensus statement: methods recording reporting epidemiological data injury illness sport 2020. British journal sports medicine.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/calc_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate summary statistics — calc_summary","text":"","code":"calc_summary(injd) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 1 × 15 #>   totalexpo ncases incidence incidence_sd incidence_lower incidence_upper #>       <dbl>  <dbl>     <dbl>        <dbl>           <dbl>           <dbl> #> 1     74690     82      9.88         1.09            7.74            12.0 #> # ℹ 9 more variables: ndayslost <dbl>, mean_dayslost <dbl>, #> #   median_dayslost <dbl>, qt25_dayslost <dbl>, qt75_dayslost <dbl>, #> #   burden <dbl>, burden_sd <dbl>, burden_lower <dbl>, burden_upper <dbl> calc_summary(injd, overall = FALSE) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 28 × 16 #>    person_id             totalexpo ncases incidence incidence_sd incidence_lower #>    <fct>                     <dbl>  <dbl>     <dbl>        <dbl>           <dbl> #>  1 adam-lallana                700      6     77.1         31.5            15.4  #>  2 alberto-moreno             1264      1      7.12         7.12           -6.84 #>  3 alex-oxlade-chamberl…      1483      1      6.07         6.07           -5.83 #>  4 alisson                    3420      0      0            0               0    #>  5 andrew-robertson           5162      5      8.72         3.90            1.08 #>  6 daniel-sturridge            927      3     29.1         16.8            -3.83 #>  7 danny-ings                  265      0      0            0               0    #>  8 dejan-lovren               3109      6     17.4          7.09            3.47 #>  9 divock-origi                366      1     24.6         24.6           -23.6  #> 10 dominic-solanke             581      0      0            0               0    #> # ℹ 18 more rows #> # ℹ 10 more variables: incidence_upper <dbl>, ndayslost <dbl>, #> #   mean_dayslost <dbl>, median_dayslost <dbl>, qt25_dayslost <dbl>, #> #   qt75_dayslost <dbl>, burden <dbl>, burden_sd <dbl>, burden_lower <dbl>, #> #   burden_upper <dbl> calc_summary(injd, by = \"injury_type\") #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> # A tibble: 5 × 18 #>   injury_type ncases percent_ncases totalexpo incidence incidence_sd #>   <chr>        <dbl>          <dbl>     <dbl>     <dbl>        <dbl> #> 1 Bone            11           13.4     74690      1.33        0.400 #> 2 Concussion      16           19.5     74690      1.93        0.482 #> 3 Ligament         9           11.0     74690      1.08        0.361 #> 4 Muscle          25           30.5     74690      3.01        0.602 #> 5 Unknown         21           25.6     74690      2.53        0.552 #> # ℹ 12 more variables: incidence_lower <dbl>, incidence_upper <dbl>, #> #   ndayslost <dbl>, percent_ndayslost <dbl>, mean_dayslost <dbl>, #> #   median_dayslost <dbl>, qt25_dayslost <dbl>, qt75_dayslost <dbl>, #> #   burden <dbl>, burden_sd <dbl>, burden_lower <dbl>, burden_upper <dbl> calc_summary(injd, by = \"injury_type\", overall = FALSE) #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #> Warning:  #>   Exposure time unit is matches_minutes #>   Case incidence and case burden are calculated per 100 athlete-matches of exposure (i.e. 90 minutes times 100) #>  #>                   person_id injury_type totalexpo ncases incidence incidence_sd #> 1              adam-lallana        Bone       700      0  0.000000     0.000000 #> 2              adam-lallana  Concussion       700      3 38.571429    22.269225 #> 3              adam-lallana    Ligament       700      0  0.000000     0.000000 #> 4              adam-lallana      Muscle       700      3 38.571429    22.269225 #> 5              adam-lallana     Unknown       700      0  0.000000     0.000000 #> 6            alberto-moreno        Bone      1264      0  0.000000     0.000000 #> 7            alberto-moreno  Concussion      1264      0  0.000000     0.000000 #> 8            alberto-moreno    Ligament      1264      1  7.120253     7.120253 #> 9            alberto-moreno      Muscle      1264      0  0.000000     0.000000 #> 10           alberto-moreno     Unknown      1264      0  0.000000     0.000000 #> 11  alex-oxlade-chamberlain        Bone      1483      0  0.000000     0.000000 #> 12  alex-oxlade-chamberlain  Concussion      1483      0  0.000000     0.000000 #> 13  alex-oxlade-chamberlain    Ligament      1483      1  6.068780     6.068780 #> 14  alex-oxlade-chamberlain      Muscle      1483      0  0.000000     0.000000 #> 15  alex-oxlade-chamberlain     Unknown      1483      0  0.000000     0.000000 #> 16                  alisson        Bone      3420      0  0.000000     0.000000 #> 17                  alisson  Concussion      3420      0  0.000000     0.000000 #> 18                  alisson    Ligament      3420      0  0.000000     0.000000 #> 19                  alisson      Muscle      3420      0  0.000000     0.000000 #> 20                  alisson     Unknown      3420      0  0.000000     0.000000 #> 21         andrew-robertson        Bone      5162      1  1.743510     1.743510 #> 22         andrew-robertson  Concussion      5162      2  3.487021     2.465696 #> 23         andrew-robertson    Ligament      5162      0  0.000000     0.000000 #> 24         andrew-robertson      Muscle      5162      1  1.743510     1.743510 #> 25         andrew-robertson     Unknown      5162      1  1.743510     1.743510 #> 26         daniel-sturridge        Bone       927      0  0.000000     0.000000 #> 27         daniel-sturridge  Concussion       927      0  0.000000     0.000000 #> 28         daniel-sturridge    Ligament       927      0  0.000000     0.000000 #> 29         daniel-sturridge      Muscle       927      1  9.708738     9.708738 #> 30         daniel-sturridge     Unknown       927      2 19.417476    13.730229 #> 31               danny-ings        Bone       265      0  0.000000     0.000000 #> 32               danny-ings  Concussion       265      0  0.000000     0.000000 #> 33               danny-ings    Ligament       265      0  0.000000     0.000000 #> 34               danny-ings      Muscle       265      0  0.000000     0.000000 #> 35               danny-ings     Unknown       265      0  0.000000     0.000000 #> 36             dejan-lovren        Bone      3109      1  2.894821     2.894821 #> 37             dejan-lovren  Concussion      3109      1  2.894821     2.894821 #> 38             dejan-lovren    Ligament      3109      0  0.000000     0.000000 #> 39             dejan-lovren      Muscle      3109      3  8.684464     5.013978 #> 40             dejan-lovren     Unknown      3109      1  2.894821     2.894821 #> 41             divock-origi        Bone       366      0  0.000000     0.000000 #> 42             divock-origi  Concussion       366      0  0.000000     0.000000 #> 43             divock-origi    Ligament       366      0  0.000000     0.000000 #> 44             divock-origi      Muscle       366      0  0.000000     0.000000 #> 45             divock-origi     Unknown       366      1 24.590164    24.590164 #> 46          dominic-solanke        Bone       581      0  0.000000     0.000000 #> 47          dominic-solanke  Concussion       581      0  0.000000     0.000000 #> 48          dominic-solanke    Ligament       581      0  0.000000     0.000000 #> 49          dominic-solanke      Muscle       581      0  0.000000     0.000000 #> 50          dominic-solanke     Unknown       581      0  0.000000     0.000000 #> 51                 emre-can        Bone      2094      0  0.000000     0.000000 #> 52                 emre-can  Concussion      2094      0  0.000000     0.000000 #> 53                 emre-can    Ligament      2094      0  0.000000     0.000000 #> 54                 emre-can      Muscle      2094      0  0.000000     0.000000 #> 55                 emre-can     Unknown      2094      1  4.297994     4.297994 #> 56                  fabinho        Bone      2013      1  4.470939     4.470939 #> 57                  fabinho  Concussion      2013      0  0.000000     0.000000 #> 58                  fabinho    Ligament      2013      0  0.000000     0.000000 #> 59                  fabinho      Muscle      2013      1  4.470939     4.470939 #> 60                  fabinho     Unknown      2013      1  4.470939     4.470939 #> 61      georginio-wijnaldum        Bone      5122      0  0.000000     0.000000 #> 62      georginio-wijnaldum  Concussion      5122      2  3.514252     2.484952 #> 63      georginio-wijnaldum    Ligament      5122      0  0.000000     0.000000 #> 64      georginio-wijnaldum      Muscle      5122      0  0.000000     0.000000 #> 65      georginio-wijnaldum     Unknown      5122      4  7.028504     3.514252 #> 66             james-milner        Bone      3548      1  2.536640     2.536640 #> 67             james-milner  Concussion      3548      2  5.073281     3.587351 #> 68             james-milner    Ligament      3548      0  0.000000     0.000000 #> 69             james-milner      Muscle      3548      2  5.073281     3.587351 #> 70             james-milner     Unknown      3548      0  0.000000     0.000000 #> 71                joe-gomez        Bone      2960      0  0.000000     0.000000 #> 72                joe-gomez  Concussion      2960      1  3.040541     3.040541 #> 73                joe-gomez    Ligament      2960      3  9.121622     5.266371 #> 74                joe-gomez      Muscle      2960      0  0.000000     0.000000 #> 75                joe-gomez     Unknown      2960      0  0.000000     0.000000 #> 76               joel-matip        Bone      3526      1  2.552467     2.552467 #> 77               joel-matip  Concussion      3526      0  0.000000     0.000000 #> 78               joel-matip    Ligament      3526      0  0.000000     0.000000 #> 79               joel-matip      Muscle      3526      2  5.104935     3.609734 #> 80               joel-matip     Unknown      3526      0  0.000000     0.000000 #> 81         jordan-henderson        Bone      4154      1  2.166586     2.166586 #> 82         jordan-henderson  Concussion      4154      0  0.000000     0.000000 #> 83         jordan-henderson    Ligament      4154      2  4.333173     3.064016 #> 84         jordan-henderson      Muscle      4154      2  4.333173     3.064016 #> 85         jordan-henderson     Unknown      4154      3  6.499759     3.752638 #> 86             loris-karius        Bone      1710      0  0.000000     0.000000 #> 87             loris-karius  Concussion      1710      1  5.263158     5.263158 #> 88             loris-karius    Ligament      1710      0  0.000000     0.000000 #> 89             loris-karius      Muscle      1710      0  0.000000     0.000000 #> 90             loris-karius     Unknown      1710      0  0.000000     0.000000 #> 91            mohamed-salah        Bone      6181      0  0.000000     0.000000 #> 92            mohamed-salah  Concussion      6181      1  1.456075     1.456075 #> 93            mohamed-salah    Ligament      6181      0  0.000000     0.000000 #> 94            mohamed-salah      Muscle      6181      1  1.456075     1.456075 #> 95            mohamed-salah     Unknown      6181      1  1.456075     1.456075 #> 96               naby-keita        Bone      1393      0  0.000000     0.000000 #> 97               naby-keita  Concussion      1393      1  6.460876     6.460876 #> 98               naby-keita    Ligament      1393      0  0.000000     0.000000 #> 99               naby-keita      Muscle      1393      2 12.921752     9.137058 #> 100              naby-keita     Unknown      1393      0  0.000000     0.000000 #> 101       philippe-coutinho        Bone      1117      0  0.000000     0.000000 #> 102       philippe-coutinho  Concussion      1117      1  8.057296     8.057296 #> 103       philippe-coutinho    Ligament      1117      0  0.000000     0.000000 #> 104       philippe-coutinho      Muscle      1117      1  8.057296     8.057296 #> 105       philippe-coutinho     Unknown      1117      1  8.057296     8.057296 #> 106           ragnar-klavan        Bone      1448      0  0.000000     0.000000 #> 107           ragnar-klavan  Concussion      1448      0  0.000000     0.000000 #> 108           ragnar-klavan    Ligament      1448      0  0.000000     0.000000 #> 109           ragnar-klavan      Muscle      1448      0  0.000000     0.000000 #> 110           ragnar-klavan     Unknown      1448      0  0.000000     0.000000 #> 111         roberto-firmino        Bone      5398      0  0.000000     0.000000 #> 112         roberto-firmino  Concussion      5398      0  0.000000     0.000000 #> 113         roberto-firmino    Ligament      5398      1  1.667284     1.667284 #> 114         roberto-firmino      Muscle      5398      2  3.334568     2.357896 #> 115         roberto-firmino     Unknown      5398      1  1.667284     1.667284 #> 116              sadio-mane        Bone      5294      3  5.100113     2.944552 #> 117              sadio-mane  Concussion      5294      0  0.000000     0.000000 #> 118              sadio-mane    Ligament      5294      0  0.000000     0.000000 #> 119              sadio-mane      Muscle      5294      1  1.700038     1.700038 #> 120              sadio-mane     Unknown      5294      0  0.000000     0.000000 #> 121          simon-mignolet        Bone      1710      0  0.000000     0.000000 #> 122          simon-mignolet  Concussion      1710      0  0.000000     0.000000 #> 123          simon-mignolet    Ligament      1710      0  0.000000     0.000000 #> 124          simon-mignolet      Muscle      1710      0  0.000000     0.000000 #> 125          simon-mignolet     Unknown      1710      0  0.000000     0.000000 #> 126  trent-alexander-arnold        Bone      4043      1  2.226070     2.226070 #> 127  trent-alexander-arnold  Concussion      4043      0  0.000000     0.000000 #> 128  trent-alexander-arnold    Ligament      4043      0  0.000000     0.000000 #> 129  trent-alexander-arnold      Muscle      4043      0  0.000000     0.000000 #> 130  trent-alexander-arnold     Unknown      4043      2  4.452140     3.148138 #> 131         virgil-van-dijk        Bone      4645      1  1.937567     1.937567 #> 132         virgil-van-dijk  Concussion      4645      1  1.937567     1.937567 #> 133         virgil-van-dijk    Ligament      4645      1  1.937567     1.937567 #> 134         virgil-van-dijk      Muscle      4645      1  1.937567     1.937567 #> 135         virgil-van-dijk     Unknown      4645      2  3.875135     2.740134 #> 136         xherdan-shaqiri        Bone      1057      0  0.000000     0.000000 #> 137         xherdan-shaqiri  Concussion      1057      0  0.000000     0.000000 #> 138         xherdan-shaqiri    Ligament      1057      0  0.000000     0.000000 #> 139         xherdan-shaqiri      Muscle      1057      2 17.029328    12.041554 #> 140         xherdan-shaqiri     Unknown      1057      0  0.000000     0.000000 #>     incidence_lower incidence_upper ndayslost mean_dayslost median_dayslost #> 1         0.0000000        0.000000         0      0.000000             0.0 #> 2        -5.0754497       82.218307        97     32.333333            25.0 #> 3         0.0000000        0.000000         0      0.000000             0.0 #> 4        -5.0754497       82.218307       205     68.333333            45.0 #> 5         0.0000000        0.000000         0      0.000000             0.0 #> 6         0.0000000        0.000000         0      0.000000             0.0 #> 7         0.0000000        0.000000         0      0.000000             0.0 #> 8        -6.8351866       21.075693        50     50.000000            50.0 #> 9         0.0000000        0.000000         0      0.000000             0.0 #> 10        0.0000000        0.000000         0      0.000000             0.0 #> 11        0.0000000        0.000000         0      0.000000             0.0 #> 12        0.0000000        0.000000         0      0.000000             0.0 #> 13       -5.8258098       17.963369       316    316.000000           316.0 #> 14        0.0000000        0.000000         0      0.000000             0.0 #> 15        0.0000000        0.000000         0      0.000000             0.0 #> 16        0.0000000        0.000000         0      0.000000             0.0 #> 17        0.0000000        0.000000         0      0.000000             0.0 #> 18        0.0000000        0.000000         0      0.000000             0.0 #> 19        0.0000000        0.000000         0      0.000000             0.0 #> 20        0.0000000        0.000000         0      0.000000             0.0 #> 21       -1.6737071        5.160728         3      3.000000             3.0 #> 22       -1.3456546        8.319696         6      3.000000             3.0 #> 23        0.0000000        0.000000         0      0.000000             0.0 #> 24       -1.6737071        5.160728        12     12.000000            12.0 #> 25       -1.6737071        5.160728         1      1.000000             1.0 #> 26        0.0000000        0.000000         0      0.000000             0.0 #> 27        0.0000000        0.000000         0      0.000000             0.0 #> 28        0.0000000        0.000000         0      0.000000             0.0 #> 29       -9.3200387       28.737514        16     16.000000            16.0 #> 30       -7.4932781       46.328230       106     53.000000            53.0 #> 31        0.0000000        0.000000         0      0.000000             0.0 #> 32        0.0000000        0.000000         0      0.000000             0.0 #> 33        0.0000000        0.000000         0      0.000000             0.0 #> 34        0.0000000        0.000000         0      0.000000             0.0 #> 35        0.0000000        0.000000         0      0.000000             0.0 #> 36       -2.7789244        8.568567        72     72.000000            72.0 #> 37       -2.7789244        8.568567         9      9.000000             9.0 #> 38        0.0000000        0.000000         0      0.000000             0.0 #> 39       -1.1427516       18.511681        70     23.333333            21.0 #> 40       -2.7789244        8.568567         9      9.000000             9.0 #> 41        0.0000000        0.000000         0      0.000000             0.0 #> 42        0.0000000        0.000000         0      0.000000             0.0 #> 43        0.0000000        0.000000         0      0.000000             0.0 #> 44        0.0000000        0.000000         0      0.000000             0.0 #> 45      -23.6056718       72.786000         5      5.000000             5.0 #> 46        0.0000000        0.000000         0      0.000000             0.0 #> 47        0.0000000        0.000000         0      0.000000             0.0 #> 48        0.0000000        0.000000         0      0.000000             0.0 #> 49        0.0000000        0.000000         0      0.000000             0.0 #> 50        0.0000000        0.000000         0      0.000000             0.0 #> 51        0.0000000        0.000000         0      0.000000             0.0 #> 52        0.0000000        0.000000         0      0.000000             0.0 #> 53        0.0000000        0.000000         0      0.000000             0.0 #> 54        0.0000000        0.000000         0      0.000000             0.0 #> 55       -4.1259197       12.721908        68     68.000000            68.0 #> 56       -4.2919403       13.233818        11     11.000000            11.0 #> 57        0.0000000        0.000000         0      0.000000             0.0 #> 58        0.0000000        0.000000         0      0.000000             0.0 #> 59       -4.2919403       13.233818         9      9.000000             9.0 #> 60       -4.2919403       13.233818         2      2.000000             2.0 #> 61        0.0000000        0.000000         0      0.000000             0.0 #> 62       -1.3561634        8.384668        21     10.500000            10.5 #> 63        0.0000000        0.000000         0      0.000000             0.0 #> 64        0.0000000        0.000000         0      0.000000             0.0 #> 65        0.1406967       13.916312        30      7.500000             7.0 #> 66       -2.4350834        7.508364         6      6.000000             6.0 #> 67       -1.9577984       12.104360        19      9.500000             9.5 #> 68        0.0000000        0.000000         0      0.000000             0.0 #> 69       -1.9577984       12.104360        23     11.500000            11.5 #> 70        0.0000000        0.000000         0      0.000000             0.0 #> 71        0.0000000        0.000000         0      0.000000             0.0 #> 72       -2.9188094        8.999890         6      6.000000             6.0 #> 73       -1.2002753       19.443519       206     68.666667            54.0 #> 74        0.0000000        0.000000         0      0.000000             0.0 #> 75        0.0000000        0.000000         0      0.000000             0.0 #> 76       -2.4502768        7.555212        28     28.000000            28.0 #> 77        0.0000000        0.000000         0      0.000000             0.0 #> 78        0.0000000        0.000000         0      0.000000             0.0 #> 79       -1.9700139       12.179883       116     58.000000            58.0 #> 80        0.0000000        0.000000         0      0.000000             0.0 #> 81       -2.0798449        6.413018        18     18.000000            18.0 #> 82        0.0000000        0.000000         0      0.000000             0.0 #> 83       -1.6721880       10.338534        15      7.500000             7.5 #> 84       -1.6721880       10.338534        45     22.500000            22.5 #> 85       -0.8552756       13.854794        13      4.333333             4.0 #> 86        0.0000000        0.000000         0      0.000000             0.0 #> 87       -5.0524420       15.578758        14     14.000000            14.0 #> 88        0.0000000        0.000000         0      0.000000             0.0 #> 89        0.0000000        0.000000         0      0.000000             0.0 #> 90        0.0000000        0.000000         0      0.000000             0.0 #> 91        0.0000000        0.000000         0      0.000000             0.0 #> 92       -1.3977796        4.309930         6      6.000000             6.0 #> 93        0.0000000        0.000000         0      0.000000             0.0 #> 94       -1.3977796        4.309930         5      5.000000             5.0 #> 95       -1.3977796        4.309930        18     18.000000            18.0 #> 96        0.0000000        0.000000         0      0.000000             0.0 #> 97       -6.2022081       19.123960        18     18.000000            18.0 #> 98        0.0000000        0.000000         0      0.000000             0.0 #> 99       -4.9865534       30.830057        71     35.500000            35.5 #> 100       0.0000000        0.000000         0      0.000000             0.0 #> 101       0.0000000        0.000000         0      0.000000             0.0 #> 102      -7.7347143       23.849307        12     12.000000            12.0 #> 103       0.0000000        0.000000         0      0.000000             0.0 #> 104      -7.7347143       23.849307        25     25.000000            25.0 #> 105      -7.7347143       23.849307        25     25.000000            25.0 #> 106       0.0000000        0.000000         0      0.000000             0.0 #> 107       0.0000000        0.000000         0      0.000000             0.0 #> 108       0.0000000        0.000000         0      0.000000             0.0 #> 109       0.0000000        0.000000         0      0.000000             0.0 #> 110       0.0000000        0.000000         0      0.000000             0.0 #> 111       0.0000000        0.000000         0      0.000000             0.0 #> 112       0.0000000        0.000000         0      0.000000             0.0 #> 113      -1.6005328        4.935101         6      6.000000             6.0 #> 114      -1.2868227        7.955959        23     11.500000            11.5 #> 115      -1.6005328        4.935101         1      1.000000             1.0 #> 116      -0.6711022       10.871329        15      5.000000             4.0 #> 117       0.0000000        0.000000         0      0.000000             0.0 #> 118       0.0000000        0.000000         0      0.000000             0.0 #> 119      -1.6319750        5.032051        24     24.000000            24.0 #> 120       0.0000000        0.000000         0      0.000000             0.0 #> 121       0.0000000        0.000000         0      0.000000             0.0 #> 122       0.0000000        0.000000         0      0.000000             0.0 #> 123       0.0000000        0.000000         0      0.000000             0.0 #> 124       0.0000000        0.000000         0      0.000000             0.0 #> 125       0.0000000        0.000000         0      0.000000             0.0 #> 126      -2.1369468        6.589086        15     15.000000            15.0 #> 127       0.0000000        0.000000         0      0.000000             0.0 #> 128       0.0000000        0.000000         0      0.000000             0.0 #> 129       0.0000000        0.000000         0      0.000000             0.0 #> 130      -1.7180977       10.622377        39     19.500000            19.5 #> 131      -1.8599948        5.735129         5      5.000000             5.0 #> 132      -1.8599948        5.735129         5      5.000000             5.0 #> 133      -1.8599948        5.735129         3      3.000000             3.0 #> 134      -1.8599948        5.735129        24     24.000000            24.0 #> 135      -1.4954292        9.245698        15      7.500000             7.5 #> 136       0.0000000        0.000000         0      0.000000             0.0 #> 137       0.0000000        0.000000         0      0.000000             0.0 #> 138       0.0000000        0.000000         0      0.000000             0.0 #> 139      -6.5716829       40.630339        67     33.500000            33.5 #> 140       0.0000000        0.000000         0      0.000000             0.0 #>     qt25_dayslost qt75_dayslost      burden  burden_sd burden_lower #> 1            0.00          0.00    0.000000   0.000000    0.0000000 #> 2           18.50         42.50 1247.142857 126.628172  998.9562011 #> 3            0.00          0.00    0.000000   0.000000    0.0000000 #> 4           44.00         81.00 2635.714286 184.086271 2274.9118249 #> 5            0.00          0.00    0.000000   0.000000    0.0000000 #> 6            0.00          0.00    0.000000   0.000000    0.0000000 #> 7            0.00          0.00    0.000000   0.000000    0.0000000 #> 8           50.00         50.00  356.012658  50.347793  257.3327973 #> 9            0.00          0.00    0.000000   0.000000    0.0000000 #> 10           0.00          0.00    0.000000   0.000000    0.0000000 #> 11           0.00          0.00    0.000000   0.000000    0.0000000 #> 12           0.00          0.00    0.000000   0.000000    0.0000000 #> 13         316.00        316.00 1917.734322 107.880984 1706.2914787 #> 14           0.00          0.00    0.000000   0.000000    0.0000000 #> 15           0.00          0.00    0.000000   0.000000    0.0000000 #> 16           0.00          0.00    0.000000   0.000000    0.0000000 #> 17           0.00          0.00    0.000000   0.000000    0.0000000 #> 18           0.00          0.00    0.000000   0.000000    0.0000000 #> 19           0.00          0.00    0.000000   0.000000    0.0000000 #> 20           0.00          0.00    0.000000   0.000000    0.0000000 #> 21           3.00          3.00    5.230531   3.019848   -0.6882632 #> 22           2.50          3.50   10.461062   4.270711    2.0906228 #> 23           0.00          0.00    0.000000   0.000000    0.0000000 #> 24          12.00         12.00   20.922123   6.039697    9.0845351 #> 25           1.00          1.00    1.743510   1.743510   -1.6737071 #> 26           0.00          0.00    0.000000   0.000000    0.0000000 #> 27           0.00          0.00    0.000000   0.000000    0.0000000 #> 28           0.00          0.00    0.000000   0.000000    0.0000000 #> 29          16.00         16.00  155.339806  38.834951   79.2246996 #> 30          52.00         54.00 1029.126214  99.957574  833.2129682 #> 31           0.00          0.00    0.000000   0.000000    0.0000000 #> 32           0.00          0.00    0.000000   0.000000    0.0000000 #> 33           0.00          0.00    0.000000   0.000000    0.0000000 #> 34           0.00          0.00    0.000000   0.000000    0.0000000 #> 35           0.00          0.00    0.000000   0.000000    0.0000000 #> 36          72.00         72.00  208.427147  24.563375  160.2838170 #> 37           9.00          9.00   26.053393   8.684464    9.0321558 #> 38           0.00          0.00    0.000000   0.000000    0.0000000 #> 39          17.00         28.50  202.637504  24.219814  155.1675405 #> 40           9.00          9.00   26.053393   8.684464    9.0321558 #> 41           0.00          0.00    0.000000   0.000000    0.0000000 #> 42           0.00          0.00    0.000000   0.000000    0.0000000 #> 43           0.00          0.00    0.000000   0.000000    0.0000000 #> 44           0.00          0.00    0.000000   0.000000    0.0000000 #> 45           5.00          5.00  122.950820  54.985278   15.1816548 #> 46           0.00          0.00    0.000000   0.000000    0.0000000 #> 47           0.00          0.00    0.000000   0.000000    0.0000000 #> 48           0.00          0.00    0.000000   0.000000    0.0000000 #> 49           0.00          0.00    0.000000   0.000000    0.0000000 #> 50           0.00          0.00    0.000000   0.000000    0.0000000 #> 51           0.00          0.00    0.000000   0.000000    0.0000000 #> 52           0.00          0.00    0.000000   0.000000    0.0000000 #> 53           0.00          0.00    0.000000   0.000000    0.0000000 #> 54           0.00          0.00    0.000000   0.000000    0.0000000 #> 55          68.00         68.00  292.263610  35.442169  222.7982361 #> 56          11.00         11.00   49.180328  14.828427   20.1171454 #> 57           0.00          0.00    0.000000   0.000000    0.0000000 #> 58           0.00          0.00    0.000000   0.000000    0.0000000 #> 59           9.00          9.00   40.238450  13.412817   13.9498124 #> 60           2.00          2.00    8.941878   6.322862   -3.4507048 #> 61           0.00          0.00    0.000000   0.000000    0.0000000 #> 62           7.75         13.25   36.899649   8.052163   21.1176982 #> 63           0.00          0.00    0.000000   0.000000    0.0000000 #> 64           0.00          0.00    0.000000   0.000000    0.0000000 #> 65           5.75          8.75   52.713784   9.624176   33.8507451 #> 66           6.00          6.00   15.219842   6.213475    3.0416558 #> 67           8.25         10.75   48.196167  11.056959   26.5249255 #> 68           0.00          0.00    0.000000   0.000000    0.0000000 #> 69          11.25         11.75   58.342728  12.165300   34.4991788 #> 70           0.00          0.00    0.000000   0.000000    0.0000000 #> 71           0.00          0.00    0.000000   0.000000    0.0000000 #> 72           6.00          6.00   18.243243   7.447773    3.6458767 #> 73          41.00         89.00  626.351351  43.639967  540.8185887 #> 74           0.00          0.00    0.000000   0.000000    0.0000000 #> 75           0.00          0.00    0.000000   0.000000    0.0000000 #> 76          28.00         28.00   71.469087  13.506388   44.9970530 #> 77           0.00          0.00    0.000000   0.000000    0.0000000 #> 78           0.00          0.00    0.000000   0.000000    0.0000000 #> 79          41.50         74.50  296.086217  27.490915  242.2050132 #> 80           0.00          0.00    0.000000   0.000000    0.0000000 #> 81          18.00         18.00   38.998556   9.192048   20.9824732 #> 82           0.00          0.00    0.000000   0.000000    0.0000000 #> 83           7.25          7.75   32.498796   8.391153   16.0524384 #> 84          16.75         28.25   97.496389  14.533904   69.0104615 #> 85           3.00          5.50   28.165623   7.811738   12.8548975 #> 86           0.00          0.00    0.000000   0.000000    0.0000000 #> 87          14.00         14.00   73.684211  19.692934   35.0867699 #> 88           0.00          0.00    0.000000   0.000000    0.0000000 #> 89           0.00          0.00    0.000000   0.000000    0.0000000 #> 90           0.00          0.00    0.000000   0.000000    0.0000000 #> 91           0.00          0.00    0.000000   0.000000    0.0000000 #> 92           6.00          6.00    8.736450   3.566641    1.7459626 #> 93           0.00          0.00    0.000000   0.000000    0.0000000 #> 94           5.00          5.00    7.280375   3.255883    0.8989623 #> 95          18.00         18.00   26.209351   6.177603   14.1014712 #> 96           0.00          0.00    0.000000   0.000000    0.0000000 #> 97          18.00         18.00  116.295765  27.411175   62.5708496 #> 98           0.00          0.00    0.000000   0.000000    0.0000000 #> 99          27.75         43.25  458.722182  54.440307  352.0211409 #> 100          0.00          0.00    0.000000   0.000000    0.0000000 #> 101          0.00          0.00    0.000000   0.000000    0.0000000 #> 102         12.00         12.00   96.687556  27.911293   41.9824265 #> 103          0.00          0.00    0.000000   0.000000    0.0000000 #> 104         25.00         25.00  201.432408  40.286482  122.4723551 #> 105         25.00         25.00  201.432408  40.286482  122.4723551 #> 106          0.00          0.00    0.000000   0.000000    0.0000000 #> 107          0.00          0.00    0.000000   0.000000    0.0000000 #> 108          0.00          0.00    0.000000   0.000000    0.0000000 #> 109          0.00          0.00    0.000000   0.000000    0.0000000 #> 110          0.00          0.00    0.000000   0.000000    0.0000000 #> 111          0.00          0.00    0.000000   0.000000    0.0000000 #> 112          0.00          0.00    0.000000   0.000000    0.0000000 #> 113          6.00          6.00   10.003705   4.083995    1.9992210 #> 114          8.25         14.75   38.347536   7.996014   22.6756366 #> 115          1.00          1.00    1.667284   1.667284   -1.6005328 #> 116          3.00          6.50   25.500567   6.584218   12.5957365 #> 117          0.00          0.00    0.000000   0.000000    0.0000000 #> 118          0.00          0.00    0.000000   0.000000    0.0000000 #> 119         24.00         24.00   40.800907   8.328450   24.4774442 #> 120          0.00          0.00    0.000000   0.000000    0.0000000 #> 121          0.00          0.00    0.000000   0.000000    0.0000000 #> 122          0.00          0.00    0.000000   0.000000    0.0000000 #> 123          0.00          0.00    0.000000   0.000000    0.0000000 #> 124          0.00          0.00    0.000000   0.000000    0.0000000 #> 125          0.00          0.00    0.000000   0.000000    0.0000000 #> 126         15.00         15.00   33.391046   8.621531   16.4931559 #> 127          0.00          0.00    0.000000   0.000000    0.0000000 #> 128          0.00          0.00    0.000000   0.000000    0.0000000 #> 129          0.00          0.00    0.000000   0.000000    0.0000000 #> 130         16.25         22.75   86.816720  13.901801   59.5696907 #> 131          5.00          5.00    9.687836   4.332532    1.1962294 #> 132          5.00          5.00    9.687836   4.332532    1.1962294 #> 133          3.00          3.00    5.812702   3.355965   -0.7648686 #> 134         24.00         24.00   46.501615   9.492102   27.8974359 #> 135          6.75          8.25   29.063509   7.504166   14.3556145 #> 136          0.00          0.00    0.000000   0.000000    0.0000000 #> 137          0.00          0.00    0.000000   0.000000    0.0000000 #> 138          0.00          0.00    0.000000   0.000000    0.0000000 #> 139         23.25         43.75  570.482498  69.695530  433.8817694 #> 140          0.00          0.00    0.000000   0.000000    0.0000000 #>     burden_upper #> 1       0.000000 #> 2    1495.329513 #> 3       0.000000 #> 4    2996.516747 #> 5       0.000000 #> 6       0.000000 #> 7       0.000000 #> 8     454.692519 #> 9       0.000000 #> 10      0.000000 #> 11      0.000000 #> 12      0.000000 #> 13   2129.177166 #> 14      0.000000 #> 15      0.000000 #> 16      0.000000 #> 17      0.000000 #> 18      0.000000 #> 19      0.000000 #> 20      0.000000 #> 21     11.149325 #> 22     18.831500 #> 23      0.000000 #> 24     32.759711 #> 25      5.160728 #> 26      0.000000 #> 27      0.000000 #> 28      0.000000 #> 29    231.454912 #> 30   1225.039459 #> 31      0.000000 #> 32      0.000000 #> 33      0.000000 #> 34      0.000000 #> 35      0.000000 #> 36    256.570477 #> 37     43.074631 #> 38      0.000000 #> 39    250.107468 #> 40     43.074631 #> 41      0.000000 #> 42      0.000000 #> 43      0.000000 #> 44      0.000000 #> 45    230.719984 #> 46      0.000000 #> 47      0.000000 #> 48      0.000000 #> 49      0.000000 #> 50      0.000000 #> 51      0.000000 #> 52      0.000000 #> 53      0.000000 #> 54      0.000000 #> 55    361.728985 #> 56     78.243510 #> 57      0.000000 #> 58      0.000000 #> 59     66.527088 #> 60     21.334460 #> 61      0.000000 #> 62     52.681599 #> 63      0.000000 #> 64      0.000000 #> 65     71.576822 #> 66     27.398028 #> 67     69.867408 #> 68      0.000000 #> 69     82.186278 #> 70      0.000000 #> 71      0.000000 #> 72     32.840610 #> 73    711.884114 #> 74      0.000000 #> 75      0.000000 #> 76     97.941121 #> 77      0.000000 #> 78      0.000000 #> 79    349.967420 #> 80      0.000000 #> 81     57.014638 #> 82      0.000000 #> 83     48.945154 #> 84    125.982317 #> 85     43.476349 #> 86      0.000000 #> 87    112.281651 #> 88      0.000000 #> 89      0.000000 #> 90      0.000000 #> 91      0.000000 #> 92     15.726938 #> 93      0.000000 #> 94     13.661788 #> 95     38.317231 #> 96      0.000000 #> 97    170.020679 #> 98      0.000000 #> 99    565.423224 #> 100     0.000000 #> 101     0.000000 #> 102   151.392685 #> 103     0.000000 #> 104   280.392461 #> 105   280.392461 #> 106     0.000000 #> 107     0.000000 #> 108     0.000000 #> 109     0.000000 #> 110     0.000000 #> 111     0.000000 #> 112     0.000000 #> 113    18.008189 #> 114    54.019436 #> 115     4.935101 #> 116    38.405397 #> 117     0.000000 #> 118     0.000000 #> 119    57.124369 #> 120     0.000000 #> 121     0.000000 #> 122     0.000000 #> 123     0.000000 #> 124     0.000000 #> 125     0.000000 #> 126    50.288937 #> 127     0.000000 #> 128     0.000000 #> 129     0.000000 #> 130   114.063750 #> 131    18.179443 #> 132    18.179443 #> 133    12.390272 #> 134    65.105793 #> 135    43.771404 #> 136     0.000000 #> 137     0.000000 #> 138     0.000000 #> 139   707.083226 #> 140     0.000000"},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the dates in injury data and exposure data — check_injfollowup","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"Check dates injury data within dates exposure data.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"","code":"check_injfollowup(followup_df, data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"followup_df Data frame created inside prepare_all() function. data_injuries Data frame given prepare_all() function.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the dates in injury data and exposure data — check_injfollowup","text":"injury data cut injury data dates injury occurrences within dates person_id's follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut the range of the follow-up — cut_injd","title":"Cut the range of the follow-up — cut_injd","text":"Given injd object, cut range time period limits observed dates, first last observed dates, date0 datef, respectively. possible specify just one date, .e. two dates range necessarily entered. See Note section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut the range of the follow-up — cut_injd","text":"","code":"cut_injd(injd, date0, datef)"},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut the range of the follow-up — cut_injd","text":"injd Prepared data, injd object. date0 Starting date class Date numeric. numeric, refer year (e.g. date = 2018). Optional. datef Ending date. class date0. Optional.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut the range of the follow-up — cut_injd","text":"injd object shorter follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cut the range of the follow-up — cut_injd","text":"aware modifying follow-period cohort, study design altered. function used, unless strong argument supporting . case, used caution.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut the range of the follow-up — cut_injd","text":"","code":"# Prepare data # \\donttest{ df_injuries <- prepare_inj(   df_injuries0   = raw_df_injuries,   person_id      = \"player_name\",   date_injured   = \"from\",   date_recovered = \"until\" )  df_exposures <- prepare_exp(   df_exposures0 = raw_df_exposures,   person_id     = \"player_name\",   date          = \"year\",   time_expo     = \"minutes_played\" )  injd <- prepare_all(   data_exposures = df_exposures,   data_injuries  = df_injuries,   exp_unit       = \"matches_minutes\" ) # }  # \\donttest{ cut_injd(injd, date0 = 2018) #> Warning: Injury/illness data has been cut to the given follow-up period (in exposure data) #> # A tibble: 74 × 19 #>    person_id        t0         tf         date_injured date_recovered tstart     #>    <fct>            <date>     <date>     <date>       <date>         <date>     #>  1 adam-lallana     2018-07-01 2019-06-30 2018-09-04   2018-10-19     2018-07-01 #>  2 adam-lallana     2018-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 #>  3 adam-lallana     2018-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 #>  4 adam-lallana     2018-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 #>  5 adam-lallana     2018-07-01 2019-06-30 NA           NA             2019-05-31 #>  6 alisson          2018-07-01 2019-06-30 NA           NA             2018-07-01 #>  7 andrew-robertson 2018-07-01 2019-06-30 2018-12-03   2018-12-07     2018-07-01 #>  8 andrew-robertson 2018-07-01 2019-06-30 2019-02-25   2019-02-26     2018-12-07 #>  9 andrew-robertson 2018-07-01 2019-06-30 2019-05-08   2019-05-11     2019-02-26 #> 10 andrew-robertson 2018-07-01 2019-06-30 2019-06-12   2019-06-24     2019-05-11 #> # ℹ 64 more rows #> # ℹ 13 more variables: tstop <date>, tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> # }"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":null,"dir":"Reference","previous_headings":"","what":"Build follow-up data frame — data_followup","title":"Build follow-up data frame — data_followup","text":"Build follow-data frame","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build follow-up data frame — data_followup","text":"","code":"data_followup(data_exposures)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build follow-up data frame — data_followup","text":"data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build follow-up data frame — data_followup","text":"data frame row corresponds sportsperson /first date (t0) last date (tf) observed.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform injury data into a long format — data_injurieslong","title":"Transform injury data into a long format — data_injurieslong","text":"Transform injury data long format","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform injury data into a long format — data_injurieslong","text":"","code":"data_injurieslong(data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform injury data into a long format — data_injurieslong","text":"data_injuries Injury data frame standardized column names, fashion prepare_inj() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injurieslong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform injury data into a long format — data_injurieslong","text":"data_injuries data frame long format row corresponds person-event.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the season — date2season","title":"Get the season — date2season","text":"Get season given date.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the season — date2season","text":"","code":"date2season(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the season — date2season","text":"date vector class Date integer/numeric. integer/numeric, refer year season started (e.g. date = 2015 refer 2015/2016 season)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the season — date2season","text":"Character specifying respective competition season given date. season (output) follows pattern: \"2005/2006\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the season — date2season","text":"","code":"date <- Sys.Date() date2season(date) #> [1] \"2023/2024\""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Proper Conversion of Date objects — date_format","title":"Proper Conversion of Date objects — date_format","text":"Converts Date objects common format used every Date object throughout package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proper Conversion of Date objects — date_format","text":"","code":"date_format(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proper Conversion of Date objects — date_format","text":"date Date object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proper Conversion of Date objects — date_format","text":"\"%Y-%m-%d\" formatted Date object respect fixed locale time zone, .e. setting LC_TIME component C timezone UTC (safest choice, non-geographic Coordinated Universal Time).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proper Conversion of Date objects — date_format","text":"limit scope changes LC_TIME timezone, temporary locale modification made using withr package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain suffix for time exposure unit — exp_unit_suffix","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Obtain suffix time exposure unit","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"","code":"exp_unit_suffix(exp_unit)"},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"exp_unit Character defining unit time exposure (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Character indicating respective suffix exp_unit entered.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract exposures data frame — get_data_exposures","title":"Extract exposures data frame — get_data_exposures","text":"Extract exposures data frame injd object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract exposures data frame — get_data_exposures","text":"","code":"get_data_exposures(injd)"},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract exposures data frame — get_data_exposures","text":"injd injd S3 object (see prepare_all()).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract exposures data frame — get_data_exposures","text":"exposure data frame containing necessary columns: \"person_id\", \"date\" \"time_expo\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_exposures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract exposures data frame — get_data_exposures","text":"","code":"get_data_exposures(injd) #>                  person_id       date time_expo #> 1             adam-lallana 2017-07-31       236 #> 2             adam-lallana 2018-09-04       464 #> 3           alberto-moreno 2017-12-07      1264 #> 4  alex-oxlade-chamberlain 2018-04-25      1483 #> 5                  alisson 2019-06-30      3420 #> 6         andrew-robertson 2018-03-28      1943 #> 7         andrew-robertson 2018-12-03      3219 #> 8         daniel-sturridge 2017-08-02       431 #> 9         daniel-sturridge 2019-06-30       496 #> 10              danny-ings 2018-06-30       265 #> 11            dejan-lovren 2017-07-27      2124 #> 12            dejan-lovren 2018-07-15       985 #> 13            divock-origi 2018-11-26       366 #> 14         dominic-solanke 2018-06-30       581 #> 15                emre-can 2018-03-18      2094 #> 16                 fabinho 2018-08-09      2013 #> 17     georginio-wijnaldum 2017-10-20      2387 #> 18     georginio-wijnaldum 2018-09-23      2735 #> 19            james-milner 2018-08-05      1763 #> 20            james-milner 2018-10-07      1785 #> 21               joe-gomez 2018-03-23      1900 #> 22               joe-gomez 2018-08-05      1060 #> 23              joel-matip 2017-11-30      1994 #> 24              joel-matip 2018-12-13      1532 #> 25        jordan-henderson 2017-08-03      2172 #> 26        jordan-henderson 2018-10-21      1982 #> 27            loris-karius 2018-05-28      1710 #> 28           mohamed-salah 2018-05-27      2920 #> 29           mohamed-salah 2018-10-13      3261 #> 30              naby-keita 2018-10-16      1393 #> 31       philippe-coutinho 2017-08-03      1117 #> 32           ragnar-klavan 2018-06-30      1448 #> 33         roberto-firmino 2018-09-16      2778 #> 34         roberto-firmino 2019-02-24      2620 #> 35              sadio-mane 2017-10-09      2208 #> 36              sadio-mane 2018-10-15      3086 #> 37          simon-mignolet 2018-06-30      1710 #> 38  trent-alexander-arnold 2018-12-11      1576 #> 39  trent-alexander-arnold 2019-01-13      2467 #> 40         virgil-van-dijk 2017-12-22      1260 #> 41         virgil-van-dijk 2018-09-23      3385 #> 42         xherdan-shaqiri 2019-03-18      1057"},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_followup.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract follow-up data frame — get_data_followup","title":"Extract follow-up data frame — get_data_followup","text":"Extract follow-data frame injd object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_followup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract follow-up data frame — get_data_followup","text":"","code":"get_data_followup(injd)"},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_followup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract follow-up data frame — get_data_followup","text":"injd injd S3 object (see prepare_all()).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_followup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract follow-up data frame — get_data_followup","text":"follow-data frame containing necessary columns: \"person_id\", \"t0\" \"tf\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_followup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract follow-up data frame — get_data_followup","text":"","code":"get_data_followup(injd) #>                  person_id         t0         tf #> 1             adam-lallana 2017-07-01 2019-06-30 #> 2           alberto-moreno 2017-07-01 2018-06-30 #> 3  alex-oxlade-chamberlain 2017-07-01 2018-04-25 #> 4                  alisson 2018-07-01 2019-06-30 #> 5         andrew-robertson 2017-07-01 2019-06-30 #> 6         daniel-sturridge 2017-07-01 2019-06-30 #> 7               danny-ings 2017-07-01 2018-06-30 #> 8             dejan-lovren 2017-07-01 2019-06-30 #> 9             divock-origi 2018-07-01 2019-06-30 #> 10         dominic-solanke 2017-07-01 2018-06-30 #> 11                emre-can 2017-07-01 2018-06-30 #> 12                 fabinho 2018-07-01 2019-06-30 #> 13     georginio-wijnaldum 2017-07-01 2019-06-30 #> 14            james-milner 2017-07-01 2019-06-30 #> 15               joe-gomez 2017-07-01 2019-06-30 #> 16              joel-matip 2017-07-01 2019-06-30 #> 17        jordan-henderson 2017-07-01 2019-06-30 #> 18            loris-karius 2017-07-01 2018-06-30 #> 19           mohamed-salah 2017-07-01 2019-06-30 #> 20              naby-keita 2018-07-01 2019-06-30 #> 21       philippe-coutinho 2017-07-01 2018-06-30 #> 22           ragnar-klavan 2017-07-01 2018-06-30 #> 23         roberto-firmino 2017-07-01 2019-06-30 #> 24              sadio-mane 2017-07-01 2019-06-30 #> 25          simon-mignolet 2017-07-01 2018-06-30 #> 26  trent-alexander-arnold 2017-07-01 2019-06-30 #> 27         virgil-van-dijk 2017-07-01 2019-06-30 #> 28         xherdan-shaqiri 2018-07-01 2019-06-10"},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract injury/illness data frame — get_data_injuries","title":"Extract injury/illness data frame — get_data_injuries","text":"Extract injury/illness data frame injd object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract injury/illness data frame — get_data_injuries","text":"","code":"get_data_injuries(injd)"},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_injuries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract injury/illness data frame — get_data_injuries","text":"injd injd S3 object (see prepare_all()).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_injuries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract injury/illness data frame — get_data_injuries","text":"injury/illness data frame containing necessary columns: \"person_id\", \"date_injured\" \"date_recovered\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/get_data_injuries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract injury/illness data frame — get_data_injuries","text":"","code":"get_data_injuries(injd) #>                  person_id date_injured date_recovered #> 1             adam-lallana   2017-07-31     2017-11-25 #> 2             adam-lallana   2018-03-31     2018-05-13 #> 3             adam-lallana   2018-09-04     2018-10-19 #> 4             adam-lallana   2018-11-09     2018-12-04 #> 5             adam-lallana   2019-01-06     2019-01-18 #> 6             adam-lallana   2019-04-01     2019-05-31 #> 7           alberto-moreno   2017-12-07     2018-01-26 #> 8  alex-oxlade-chamberlain   2018-04-25     2019-03-07 #> 9         andrew-robertson   2018-03-28     2018-03-30 #> 10        andrew-robertson   2018-12-03     2018-12-07 #> 11        andrew-robertson   2019-02-25     2019-02-26 #> 12        andrew-robertson   2019-05-08     2019-05-11 #> 13        andrew-robertson   2019-06-12     2019-06-24 #> 14        daniel-sturridge   2017-08-02     2017-08-18 #> 15        daniel-sturridge   2017-12-08     2018-01-28 #> 16        daniel-sturridge   2018-02-12     2018-04-08 #> 17            dejan-lovren   2017-07-27     2017-08-09 #> 18            dejan-lovren   2018-07-15     2018-09-25 #> 19            dejan-lovren   2018-12-01     2018-12-10 #> 20            dejan-lovren   2019-01-08     2019-01-29 #> 21            dejan-lovren   2019-02-01     2019-03-09 #> 22            dejan-lovren   2019-04-16     2019-04-25 #> 23            divock-origi   2018-11-26     2018-12-01 #> 24                emre-can   2018-03-18     2018-05-25 #> 25                 fabinho   2018-08-09     2018-08-11 #> 26                 fabinho   2019-01-20     2019-01-29 #> 27                 fabinho   2019-04-22     2019-05-03 #> 28     georginio-wijnaldum   2017-10-20     2017-10-27 #> 29     georginio-wijnaldum   2018-02-23     2018-03-09 #> 30     georginio-wijnaldum   2018-09-23     2018-09-28 #> 31     georginio-wijnaldum   2019-01-13     2019-01-29 #> 32     georginio-wijnaldum   2019-02-01     2019-02-08 #> 33     georginio-wijnaldum   2019-04-11     2019-04-13 #> 34            james-milner   2018-08-05     2018-08-11 #> 35            james-milner   2018-10-07     2018-10-19 #> 36            james-milner   2018-12-13     2018-12-20 #> 37            james-milner   2018-12-22     2019-01-02 #> 38            james-milner   2019-03-04     2019-03-16 #> 39               joe-gomez   2018-03-23     2018-04-20 #> 40               joe-gomez   2018-05-08     2018-07-01 #> 41               joe-gomez   2018-08-05     2018-08-11 #> 42               joe-gomez   2018-12-05     2019-04-08 #> 43              joel-matip   2017-11-30     2017-12-25 #> 44              joel-matip   2018-04-02     2018-07-02 #> 45              joel-matip   2018-12-13     2019-01-10 #> 46        jordan-henderson   2017-08-03     2017-08-07 #> 47        jordan-henderson   2017-11-02     2017-11-13 #> 48        jordan-henderson   2017-12-23     2018-01-26 #> 49        jordan-henderson   2018-10-21     2018-11-08 #> 50        jordan-henderson   2019-01-04     2019-01-11 #> 51        jordan-henderson   2019-02-01     2019-02-08 #> 52        jordan-henderson   2019-03-14     2019-03-22 #> 53        jordan-henderson   2019-05-09     2019-05-11 #> 54            loris-karius   2018-05-28     2018-06-11 #> 55           mohamed-salah   2018-05-27     2018-06-14 #> 56           mohamed-salah   2018-10-13     2018-10-18 #> 57           mohamed-salah   2019-05-05     2019-05-11 #> 58              naby-keita   2018-10-16     2018-11-05 #> 59              naby-keita   2019-03-12     2019-03-30 #> 60              naby-keita   2019-05-01     2019-06-21 #> 61       philippe-coutinho   2017-08-03     2017-08-28 #> 62       philippe-coutinho   2017-10-26     2017-11-07 #> 63       philippe-coutinho   2017-12-30     2018-01-24 #> 64         roberto-firmino   2018-09-16     2018-09-17 #> 65         roberto-firmino   2019-02-24     2019-03-02 #> 66         roberto-firmino   2019-04-25     2019-04-30 #> 67         roberto-firmino   2019-05-03     2019-05-21 #> 68              sadio-mane   2017-10-09     2017-11-02 #> 69              sadio-mane   2018-10-15     2018-10-24 #> 70              sadio-mane   2018-12-03     2018-12-07 #> 71              sadio-mane   2019-04-11     2019-04-13 #> 72  trent-alexander-arnold   2018-12-11     2018-12-26 #> 73  trent-alexander-arnold   2019-01-13     2019-02-08 #> 74  trent-alexander-arnold   2019-03-18     2019-03-31 #> 75         virgil-van-dijk   2017-12-22     2018-01-15 #> 76         virgil-van-dijk   2018-09-23     2018-09-28 #> 77         virgil-van-dijk   2018-10-14     2018-10-19 #> 78         virgil-van-dijk   2019-01-05     2019-01-11 #> 79         virgil-van-dijk   2019-01-20     2019-01-29 #> 80         virgil-van-dijk   2019-04-01     2019-04-04 #> 81         xherdan-shaqiri   2019-03-18     2019-03-31 #> 82         xherdan-shaqiri   2019-06-10     2019-08-03"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_photo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot injuries and illnesses over the follow-up period — gg_photo","title":"Plot injuries and illnesses over the follow-up period — gg_photo","text":"Given injd S3 object plots overview injuries illnesses suffered player/athlete cohort follow-. subject timeline depicted horizontally red cross indicates exact injury illness date, blue circle recovery date bold black line indicates duration injury (time-loss) illness.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_photo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot injuries and illnesses over the follow-up period — gg_photo","text":"","code":"gg_photo(injd, title = NULL, fix = FALSE, by_date = \"1 months\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_photo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot injuries and illnesses over the follow-up period — gg_photo","text":"injd Prepared data. injd object. title Text main title. fix logical value indicating whether limit range date (x scale) maximum observed exposure date limit x scale, regardless recovery dates might longer maximum observed exposure date. by_date increment date sequence x-axis tick-marks drawn. argument passed base::seq.Date().","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_photo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot injuries and illnesses over the follow-up period — gg_photo","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_photo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot injuries and illnesses over the follow-up period — gg_photo","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"minutes\") # }  gg_photo(injd, title = \"Injury Overview\", by_date = \"1 years\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot polar area diagrams representing players' prevalence — gg_prevalence","title":"Plot polar area diagrams representing players' prevalence — gg_prevalence","text":"Plot proportions available injured players cohort, monthly season basis, polar area diagram. information type injury may specified injured players proportions disaggregated reported according variable.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot polar area diagrams representing players' prevalence — gg_prevalence","text":"","code":"gg_prevalence(   injd,   time_period = c(\"monthly\", \"season\"),   by = NULL,   line_mean = FALSE,   title = NULL )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot polar area diagrams representing players' prevalence — gg_prevalence","text":"injd Prepared data, injd object. time_period Character. One \"monthly\" \"season\", specifying periodicity according calculate proportions available injured athletes. Character specifying name column basis classify injuries calculate proportions injured athletes. Defaults NULL. line_mean TOWRITE!!! title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot polar area diagrams representing players' prevalence — gg_prevalence","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_prevalence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot polar area diagrams representing players' prevalence — gg_prevalence","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  # \\donttest{ library(ggplot2) our_palette <- c(\"red3\", rev(RColorBrewer::brewer.pal(5, \"Reds\")), \"seagreen3\") gg_prevalence(injd, time_period = \"monthly\", by = \"injury_type\",               title = \"Monthly prevalence of each type of sports injury\") +   scale_fill_manual(values = our_palette)  gg_prevalence(injd, time_period = \"monthly\",               title = \"Monthly prevalence of sports injuries\") +   scale_fill_manual(values = our_palette)  # }"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot athlete's health problem incidence or burden ranking — gg_rank","title":"Plot athlete's health problem incidence or burden ranking — gg_rank","text":"bar chart shows athlete-wise summary statistics, either case incidence injury burden, ranked descending order.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot athlete's health problem incidence or burden ranking — gg_rank","text":"","code":"gg_rank(   injd,   by = NULL,   summary_stat = c(\"incidence\", \"burden\", \"ncases\", \"ndayslost\"),   line_overall = FALSE,   title = NULL )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot athlete's health problem incidence or burden ranking — gg_rank","text":"injd injd S3 object (see prepare_all()). Character specifying name column according compute summary statistics. refer (categorical) variable describes grouping factor (e.g. \"type case injury\", \"injury location\", \"sports club\"). Optional, defaults NULL. summary_stat character value indicating whether plot case incidence's (case's) injury burden's (days losts') ranking. One \"incidence\" (\"ncases\") \"burden\" (\"ndayslost\"), respectively. line_overall Logical, whether draw vertical red line indicating overall incidence burden. Defaults FALSE. title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot athlete's health problem incidence or burden ranking — gg_rank","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot athlete's health problem incidence or burden ranking — gg_rank","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }   p1 <- gg_rank(injd, summary_stat = \"incidence\",               line_overall = TRUE,               title = \"Overall injury incidence per player\") +   ggplot2::ylab(NULL) p2 <- gg_rank(injd, summary_stat = \"burden\",               line_overall = TRUE,               title = \"Overall injury burden per player\") +   ggplot2::ylab(NULL)  # install.packages(\"gridExtra\") # library(gridExtra) if (require(\"gridExtra\")) {   gridExtra::grid.arrange(p1, p2, nrow = 1) } #> Loading required package: gridExtra"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot risk matrices — gg_riskmatrix","title":"Plot risk matrices — gg_riskmatrix","text":"Depict risk matrix plots, graph case (e.g. injury) incidence (frequency) plotted average days lost per case (consequence). point estimate case incidence together confidence interval plotted, according method specified. y-axis, mean time-loss per case together \\(\\pm\\) IQR (days) plotted. number shown inside point point size , report case burden (days lost per athlete-exposure time), bigger size greater burden. See References section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot risk matrices — gg_riskmatrix","text":"","code":"gg_riskmatrix(   injd,   by = NULL,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   add_contour = TRUE,   title = NULL,   xlab = \"Incidence (injuries per _)\",   ylab = \"Mean time-loss (days) per injury\",   errh_height = 1,   errv_width = 0.05,   cont_max_x = NULL,   cont_max_y = NULL,   ... )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot risk matrices — gg_riskmatrix","text":"injd injd S3 object (see prepare_all()). Character specifying name column. (categorical) variable referring \"type case\" (e.g. \"type injury\" muscular/articular/others overuse/-overuse etc.) according visualize epidemiological summary statistics (optional, defaults NULL). method Method estimate incidence (burden) rate. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. add_contour Logical, whether add contour lines product case incidence mean severity (.e. 'incidence x average time-loss'), leads case burden (defaults TRUE). title Text main title passed ggplot2::ggtitle(). xlab x-axis label passed ggplot2::xlab(). ylab y-axis label passed ggplot2::ylab(). errh_height Set height horizontal interval whiskers; height argument ggplot2::geom_errorbarh(). errv_width Set width vertical interval whiskers; width argument ggplot2::geom_errorbar(). cont_max_x, cont_max_y Numerical (optional) values indicating maximum x-axis y-axis, respectively, reached contour. ... arguments passed ggplot2::geom_contour() metR::geom_text_contour(). often aesthetics like bins = 15 breaks = 10.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot risk matrices — gg_riskmatrix","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot risk matrices — gg_riskmatrix","text":"Bahr R, Clarsen B, Derman W, et al. International Olympic Committee consensus statement: methods recording reporting epidemiological data injury illness sport 2020 (including STROBE Extension Sport Injury Illness Surveillance (STROBE-SIIS)) British Journal Sports Medicine 2020; 54:372-389. Fuller C. W. (2018). Injury Risk (Burden), Risk Matrices Risk Contours Team Sports: Review Principles, Practices Problems.Sports Medicine, 48(7), 1597–1606. https://doi.org/10.1007/s40279-018-0913-5","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_riskmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot risk matrices — gg_riskmatrix","text":"","code":"# \\donttest{ df_exposures <- prepare_exp(raw_df_exposures, person_id = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, person_id = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") # }  # \\donttest{ gg_riskmatrix(injd) #> Warning: An injury average time-loss is bigger than its 75% quartile #>     time-loss. Possibly, there is a concrete long-term injury in the data. #>     For plotting purposes the vertical upper limit (i.e. 75% quartile) #>     is lengthened to the average value.  gg_riskmatrix(injd, by = \"injury_type\", title = \"Risk matrix\") #> Warning: An injury average time-loss is bigger than its 75% quartile #>     time-loss. Possibly, there is a concrete long-term injury in the data. #>     For plotting purposes the vertical upper limit (i.e. 75% quartile) #>     is lengthened to the average value.  # }"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of an injd object — injd","title":"Example of an injd object — injd","text":"injd object (S3), called injd, showcase object like also save computation time help files provided package. result applying prepare_all() raw_df_exposures (prepare_exp(raw_df_exposures, ...)) raw_df_injuries (prepare_inj(raw_df_injuries, ...)).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of an injd object — injd","text":"","code":"injd"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of an injd object — injd","text":"main data frame injd gathers information 28 players 108 rows 19 columns: person_id Player identifier (factor) t0 Follow-period corresponding player, .e. player’s first observed date, value player (Date) tf Follow-period corresponding player, .e. player’s last observed date, value player (Date) date_injured Date injury corresponding observation (). Otherwise NA (Date) date_recovered Date recovery corresponding observation (). Otherwise NA (Date) tstart Beginning date corresponding interval observation risk injury (Date) tstop Ending date corresponding interval observation risk injury (Date) tstart_minPlay Beginning time. Minutes played matches start interval observation risk injury (numeric) tstop_minPlay Ending time. Minutes played matches finish interval observation risk injury (numeric) status injury (event) indicator (numeric) enum integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk days_lost Number days lost due injury (numeric) player_id Identification number football player (factor) season Season player's entry corresponds (factor) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://www.transfermarkt.com, ; otherwise NA (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL); interval corresponds injury, NA otherwise (factor) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury (), whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); NA otherwise (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of an injd object — injd","text":"consists data frame plus 4 attributes: character specifying unit exposure (unit_exposure); 3 (auxiliary) data frames: follow_up, data_exposures data_injuries.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":null,"dir":"Reference","previous_headings":"","what":"injurytools package — injurytools","title":"injurytools package — injurytools","text":"Sports Injury Data analysis aims identify describe magnitude injury problem, gain insights (e.g. determine potential risk factors) statistical modelling approaches. 'injurytools' package provides standardized routines utilities simplify analyses. offers functions data preparation, informative visualizations descriptive model-based analyses.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"injurytools package — injurytools","text":"Maintainer: Lore Zumeta Olaskoaga lorezumeta@gmail.com (ORCID) contributors: Dae-Jin Lee dlee@bcamath.org (ORCID) [contributor]","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is of class injd — is_injd","title":"Check if an object is of class injd — is_injd","text":"Check object x class injd.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is of class injd — is_injd","text":"","code":"is_injd(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is of class injd — is_injd","text":"x R object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is of class injd — is_injd","text":"logical value: TRUE x inherits injd class, FALSE otherwise.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/label_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Label the time unit — label_unit","title":"Label the time unit — label_unit","text":"auxiliary function return label exposure time unit used.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/label_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label the time unit — label_unit","text":"","code":"label_unit(unit)"},{"path":"https://lzumeta.github.io/injurytools/reference/label_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label the time unit — label_unit","text":"unit Character indicates unit exposure sports-related health problem data.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/label_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label the time unit — label_unit","text":"character vector expresses unit used rates, .e. athlete's time risk, named unit_timerisk.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"constructor of injd class — new_injd","title":"constructor of injd class — new_injd","text":"constructor injd class","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructor of injd class — new_injd","text":"","code":"new_injd(x = data.frame(), unit_exposure = \"match_minutes\")"},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructor of injd class — new_injd","text":"x data frame object construct injd class object unit_exposure first attribute","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/new_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructor of injd class — new_injd","text":"new injd object","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data in a standardized format — prepare_data","title":"Prepare data in a standardized format — prepare_data","text":"data preprocessing functions provided injurytools package, involve: setting exposure injury/illness data standardized format integrating sources data adequate data structure. prepare_inj() prepare_exp() set standardized names proper classes (key) columns injury/illness exposure data, respectively. prepare_all() integrates , standardized injury exposure data sets, convert injd S3 object adequate structure statistical analyses. See Prepare Sports Injury Data vignette details.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data in a standardized format — prepare_data","text":"","code":"prepare_inj(   df_injuries0,   person_id = \"person_id\",   date_injured = \"date_injured\",   date_recovered = \"date_recovered\" )  prepare_exp(   df_exposures0,   person_id = \"person_id\",   date = \"date\",   time_expo = \"time_expo\" )  prepare_all(   data_exposures,   data_injuries,   exp_unit = c(\"minutes\", \"hours\", \"days\", \"matches_num\", \"matches_minutes\",     \"activity_days\", \"seasons\") )"},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data in a standardized format — prepare_data","text":"df_injuries0 data frame containing injury illness information, columns referring athlete name/id, date injury/illness date recovery (minimal data). person_id Character referring column name storing sportsperson (player, athlete) identification information. date_injured Character referring column name information date injury illness stored. date_recovered Character referring column name information date recovery stored. df_exposures0 data frame containing exposure information, columns referring sportsperson's name/id, date exposure total time exposure corresponding data entry (minimal data). date Character referring column name exposure date information stored. Besides, column must class Date integer/numeric. integer/numeric, refer year season started (e.g. date = 2015 refer 2015/2016 season). time_expo Character referring column name information time exposure corresponding date stored. data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns. data_injuries Injury data frame standardized column names, fashion prepare_inj() returns. exp_unit Character defining unit exposure time (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data in a standardized format — prepare_data","text":"prepare_inj() returns data frame key columns injury/illness data standardized proper format. prepare_exp() returns data frame key columns exposure data standardized proper format. prepare_all() returns injd  S3 object contains necessary information proper data structure perform statistical analyses (e.g. calculate injury summary statistics, visualize injury data). exp_unit \"minutes\" (default), columns tstart_min tstop_min created specify time event (injury) values, starting stopping time interval, respectively. training time minutes, sportsperson risk, injury/illness (censorship) occurred. choices, tstart_x tstop_x also created according exp_unit indicated (x, one : min, h, match, minPlay, d, acd s). columns useful survival analysis routines. See Note section. also creates days_lost column based difference date_recovered date_injured days. exist (raw data) overrides.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare data in a standardized format — prepare_data","text":"Depending unit exposure, tstart_x tstop_x columns might values (e.g. exp_unit = \"matches_num\" player played match corresponding period time). Please aware performing survival analysis related task.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data in a standardized format — prepare_data","text":"","code":"df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            person_id      = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\")  df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             person_id     = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\")  # \\donttest{ injd <- prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   person_id    t0         tf         date_injured date_recovered tstart     #>   <fct>        <date>     <date>     <date>       <date>         <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31   2017-11-25     2017-07-01 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31   2018-05-13     2017-11-25 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04   2018-10-19     2018-05-13 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09   2018-12-04     2018-10-19 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06   2019-01-18     2018-12-04 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01   2019-05-31     2019-01-18 #> # ℹ 13 more variables: tstop <date>, tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct> class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" # }"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of exposure data — raw_df_exposures","title":"Minimal example of exposure data — raw_df_exposures","text":"example player exposure data set contains minimum required exposure information well player- match-related variables. includes Liverpool Football Club male's first team players' exposure data, exposure measured (number minutes ) matches played, two consecutive seasons, 2017-2018 2018-2019. row refers player-season. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of exposure data — raw_df_exposures","text":"","code":"raw_df_exposures"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame 42 rows corresponding 28 football players 16 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) year Year season started (numeric) matches_played Matches played player season (numeric) minutes_played Minutes played player season (numeric) liga Name ligue player played season (factor) club_name Name club player belongs season (factor) club_id Identification number club player belongs season (factor) age Age player season (numeric) height Height player m (numeric) place Place birth player (character) citizenship Citizenship player (factor) position Position player pitch (factor) foot Dominant leg player. One , left right (factor) goals Number goals scored player season (numeric) assists Number assists provided player season (numerical) yellows Number yellow cards received player season (numeric) reds Number red cards received player season (numeric)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of exposure data — raw_df_exposures","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred. , use recommended epidemiological research (see also Hoenig et al., 2022).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Minimal example of exposure data — raw_df_exposures","text":"Hoenig, T., Edouard, P., Krause, M., Malhan, D., Relógio, ., Junge, ., & Hollander, K. (2022). Analysis 20,000 injuries European professional football using citizen science-based approach: opportunity epidemiological research?. Journal science medicine sport, 25(4), 300-305.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of injury data — raw_df_injuries","title":"Minimal example of injury data — raw_df_injuries","text":"example injury data set containing minimum required injury information well injury-related variables. includes Liverpool Football Club male's first team players' injury data. row refers player-injury. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of injury data — raw_df_injuries","text":"","code":"raw_df_injuries"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of injury data — raw_df_injuries","text":"data frame 82 rows corresponding 23 players 11 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) Date injury data entry (Date) Date recovery data entry (Date) days_lost Number days lost due injury (numeric) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://www.transfermarkt.com (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury (), whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); NA otherwise (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of injury data — raw_df_injuries","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of injury data — raw_df_injuries","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred. , use recommended epidemiological research (see also Hoenig et al., 2022).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Minimal example of injury data — raw_df_injuries","text":"Hoenig, T., Edouard, P., Krause, M., Malhan, D., Relógio, ., Junge, ., & Hollander, K. (2022). Analysis 20,000 injuries European professional football using citizen science-based approach: opportunity epidemiological research?. Journal science medicine sport, 25(4), 300-305.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the year — season2year","title":"Get the year — season2year","text":"Get year given season.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the year — season2year","text":"","code":"season2year(season)"},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the year — season2year","text":"season Character/factor specifying season. follow pattern \"xxxx/yyyy\", e.g. \"2005/2006\".","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the year — season2year","text":"Given season, returns year (numeric) season started.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/season2year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the year — season2year","text":"","code":"season <- \"2022/2023\" season2year(season) #> [1] 2022"},{"path":"https://lzumeta.github.io/injurytools/reference/summary_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform calc_summary() output according to the unit of exposure — summary_unit","title":"Transform calc_summary() output according to the unit of exposure — summary_unit","text":"Transform calc_summary() output according unit exposure","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/summary_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform calc_summary() output according to the unit of exposure — summary_unit","text":"","code":"summary_unit(unit, summary_data, quiet)"},{"path":"https://lzumeta.github.io/injurytools/reference/summary_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform calc_summary() output according to the unit of exposure — summary_unit","text":"unit Character indicates unit exposure sports-related health problem data. summary_data summary_data data frame transformed. quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/summary_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform calc_summary() output according to the unit of exposure — summary_unit","text":"calc_summary() data frame 'incidence' 'cburden' values transformed according unit, named summary_data.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"validator or injd class — validate_injd","title":"validator or injd class — validate_injd","text":"validator injd class","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validator or injd class — validate_injd","text":"","code":"validate_injd(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validator or injd class — validate_injd","text":"x injd class object","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/validate_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validator or injd class — validate_injd","text":"error x injd class; otherwise x (invisibly)","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-103","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.3","title":"injurytools 1.0.3","text":"CRAN release: 2023-11-14 gg_injriskmatrix now cont_max_x cont_max_y arguments (optionally) control ranges contour lines allows pass arguments geom_contour(), e.g. bins =, binwidth =, etc.","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-102","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.2","title":"injurytools 1.0.2","text":"CRAN release: 2023-09-27 Fixes injsummary(): exposure injury type corrected proper conf_level. Quit pipe operator %>% dependency. Added vignette modelling sports injury data (counts). Added vignette modelling sports injury data (events)","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-101","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.1","title":"injurytools 1.0.1","text":"CRAN release: 2023-02-01 Maintenance update: fixes CRAN issues due new release dplyr New feature joins integrated","code":""},{"path":"https://lzumeta.github.io/injurytools/news/index.html","id":"injurytools-100","dir":"Changelog","previous_headings":"","what":"injurytools 1.0.0","title":"injurytools 1.0.0","text":"CRAN release: 2023-01-26 Initial release version CRAN","code":""}]
